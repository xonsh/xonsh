jobs:

- job: 'xonsh_windows'
  pool:
    vmImage: 'VS2017-Win2016'
  strategy:
    matrix:
      Python35:
        python.version: '3.5'
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
      Python38:
        python.version: '3.8'
    maxParallel: 4

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  # Conda Environment
  # Create and activate a Conda environment.
  - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
    displayName: Add conda to PATH
  - script: 'conda create --yes --quiet --name conda-test-$(python.version) -c conda-forge/label/cf201901 python=$(python.version) conda=4.5.11 pygments prompt_toolkit pytest pytest-timeout numpy psutil matplotlib flake8 coverage pyflakes pytest-cov pytest-flake8 codecov'
    displayName: 'Conda Environment (conda-forge/label/cf201901)'
    condition: eq(variables['python.version'], '3.5')
  - script: |
      call activate conda-test-$(python.version)
      conda install --yes --quiet -c conda-forge/label/cf201901 python=$(python.version) pygments prompt_toolkit pytest pytest-timeout numpy psutil matplotlib flake8 coverage pyflakes pytest-cov pytest-flake8 codecov
    condition: eq(variables['python.version'], '3.5')
  - script: 'conda create --yes --quiet --name conda-test-$(python.version) -c conda-forge python=$(python.version) pygments prompt_toolkit pytest pytest-timeout numpy psutil matplotlib flake8 coverage pyflakes pytest-cov pytest-flake8 codecov'
    condition: ne(variables['python.version'], '3.5')
    displayName: 'Conda Environment (conda-forge)'
  - script: |
      call activate conda-test-$(python.version)
      pip install .
      xonsh run-tests.xsh --timeout=10 --junitxml=junit/test-results.%%d.xml
    displayName: 'Tests'

  # Publish build results
  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-*.xml'
      testRunTitle: 'Publish test results for Python $(python.version)'
