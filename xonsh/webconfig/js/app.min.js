!function(n){"use strict";function r(n,r,e){return e.a=n,e.f=r,e}function c(e){return r(2,e,function(r){return function(n){return e(r,n)}})}function o(t){return r(3,t,function(e){return function(r){return function(n){return t(e,r,n)}}})}function e(o){return r(4,o,function(t){return function(e){return function(r){return function(n){return o(t,e,r,n)}}}})}function t(s){return r(5,s,function(o){return function(t){return function(e){return function(r){return function(n){return s(o,t,e,r,n)}}}}})}function s(a){return r(6,a,function(s){return function(o){return function(t){return function(e){return function(r){return function(n){return a(s,o,t,e,r,n)}}}}}})}function a(c){return r(7,c,function(a){return function(s){return function(o){return function(t){return function(e){return function(r){return function(n){return c(a,s,o,t,e,r,n)}}}}}}})}function l(l){return r(8,l,function(c){return function(a){return function(s){return function(o){return function(t){return function(e){return function(r){return function(n){return l(c,a,s,o,t,e,r,n)}}}}}}}})}function i(i){return r(9,i,function(l){return function(c){return function(a){return function(s){return function(o){return function(t){return function(e){return function(r){return function(n){return i(l,c,a,s,o,t,e,r,n)}}}}}}}}})}function f(n,r,e){return 2===n.a?n.f(r,e):n(r)(e)}function p(n,r,e,t){return 3===n.a?n.f(r,e,t):n(r)(e)(t)}function d(n,r,e,t,o){return 4===n.a?n.f(r,e,t,o):n(r)(e)(t)(o)}function b(n,r,e,t,o,s){return 5===n.a?n.f(r,e,t,o,s):n(r)(e)(t)(o)(s)}function u(n,r,e,t,o,s,a){return 6===n.a?n.f(r,e,t,o,s,a):n(r)(e)(t)(o)(s)(a)}function y(n,r,e,t,o,s,a,c){return 7===n.a?n.f(r,e,t,o,s,a,c):n(r)(e)(t)(o)(s)(a)(c)}var h=o(function(n,r,e){for(var t=Array(n),o=0;o<n;o++)t[o]=e(r+o);return t}),g=c(function(n,r){for(var e=Array(n),t=0;t<n&&r.b;t++)e[t]=r.a,r=r.b;return e.length=t,A(e,r)}),m=(c(function(n,r){return r[n]}),o(function(n,r,e){for(var t=e.length,o=Array(t),s=0;s<t;s++)o[s]=e[s];return o[n]=r,o}),c(function(n,r){for(var e=r.length,t=Array(e+1),o=0;o<e;o++)t[o]=r[o];return t[e]=n,t}),o(function(n,r,e){for(var t=e.length,o=0;o<t;o++)r=f(n,e[o],r);return r}),o(function(n,r,e){for(var t=e.length-1;0<=t;t--)r=f(n,e[t],r);return r}));c(function(n,r){for(var e=r.length,t=Array(e),o=0;o<e;o++)t[o]=n(r[o]);return t}),o(function(n,r,e){for(var t=e.length,o=Array(t),s=0;s<t;s++)o[s]=f(n,r+s,e[s]);return o}),o(function(n,r,e){return e.slice(n,r)}),o(function(n,r,e){var t=r.length,o=n-t;e.length<o&&(o=e.length);for(var s=Array(t+o),a=0;a<t;a++)s[a]=r[a];for(a=0;a<o;a++)s[a+t]=e[a];return s}),c(function(n,r){return r}),c(function(n,r){return console.log(n+": <internals>"),r});function v(n){throw Error("https://github.com/elm/core/blob/1.0.0/hints/"+n+".md")}function w(n,r){for(var e,t=[],o=q(n,r,0,t);o&&(e=t.pop());o=q(e.a,e.b,0,t));return o}function q(n,r,e,t){if(100<e)return t.push(A(n,r)),!0;if(n===r)return!0;if("object"!=typeof n||null===n||null===r)return"function"==typeof n&&v(5),!1;for(var o in n.$<0&&(n=le(n),r=le(r)),n)if(!q(n[o],r[o],e+1,t))return!1;return!0}var x=c(w);c(function(n,r){return!w(n,r)});function E(n,r,e){if("object"!=typeof n)return n===r?0:n<r?-1:1;if(void 0===n.$)return(e=E(n.a,r.a))?e:(e=E(n.b,r.b))?e:E(n.c,r.c);for(;n.b&&r.b&&!(e=E(n.a,r.a));n=n.b,r=r.b);return e||(n.b?1:r.b?-1:0)}c(function(n,r){return E(n,r)<0}),c(function(n,r){return E(n,r)<1}),c(function(n,r){return 0<E(n,r)}),c(function(n,r){return 0<=E(n,r)});var $=c(function(n,r){var e=E(n,r);return e<0?te:e?ae:ee}),k=0;function A(n,r){return{a:n,b:r}}function T(n,r,e){return{a:n,b:r,c:e}}function L(n){return n}function D(n,r){var e={};for(var t in n)e[t]=n[t];for(var t in r)e[t]=r[t];return e}c(R);function R(n,r){if("string"==typeof n)return n+r;if(!n.b)return r;var e=S(n.a,r);n=n.b;for(var t=e;n.b;n=n.b)t=t.b=S(n.a,r);return e}var N={$:0};function S(n,r){return{$:1,a:n,b:r}}var O=c(S);function C(n){for(var r=N,e=n.length;e--;)r=S(n[e],r);return r}function W(n){for(var r=[];n.b;n=n.b)r.push(n.a);return r}var B=o(function(n,r,e){for(var t=[];r.b&&e.b;r=r.b,e=e.b)t.push(f(n,r.a,e.a));return C(t)}),_=(e(function(n,r,e,t){for(var o=[];r.b&&e.b&&t.b;r=r.b,e=e.b,t=t.b)o.push(p(n,r.a,e.a,t.a));return C(o)}),t(function(n,r,e,t,o){for(var s=[];r.b&&e.b&&t.b&&o.b;r=r.b,e=e.b,t=t.b,o=o.b)s.push(d(n,r.a,e.a,t.a,o.a));return C(s)}),s(function(n,r,e,t,o,s){for(var a=[];r.b&&e.b&&t.b&&o.b&&s.b;r=r.b,e=e.b,t=t.b,o=o.b,s=s.b)a.push(b(n,r.a,e.a,t.a,o.a,s.a));return C(a)}),c(function(e,n){return C(W(n).sort(function(n,r){return E(e(n),e(r))}))}),c(function(t,n){return C(W(n).sort(function(n,r){var e=f(t,n,r);return e===ee?0:e===te?-1:1}))}),c(function(n,r){return n+r}),c(function(n,r){return n-r}),c(function(n,r){return n*r}),c(function(n,r){return n/r}),c(function(n,r){return n/r|0}),c(Math.pow));c(function(n,r){return r%n}),c(function(n,r){var e=r%n;return 0===n?v(11):0<e&&n<0||e<0&&0<n?e+n:e}),c(Math.atan2);var F=Math.ceil,I=Math.floor,U=Math.log;c(function(n,r){return n&&r}),c(function(n,r){return n||r}),c(function(n,r){return n!==r});var G=c(function(n,r){return n+r});c(function(n,r){return n+r});c(function(n,r){for(var e=r.length,t=Array(e),o=0;o<e;){var s=r.charCodeAt(o);s<55296||56319<s?(t[o]=n(L(r[o])),o++):(t[o]=n(L(r[o]+r[o+1])),o+=2)}return t.join("")}),c(function(n,r){for(var e=[],t=r.length,o=0;o<t;){var s=r[o],a=r.charCodeAt(o);o++,a<55296||56319<a||(s+=r[o],o++),n(L(s))&&e.push(s)}return e.join("")});o(function(n,r,e){for(var t=e.length,o=0;o<t;){var s=e[o],a=e.charCodeAt(o);o++,a<55296||56319<a||(s+=e[o],o++),r=f(n,L(s),r)}return r});var P=o(function(n,r,e){for(var t=e.length;t--;){var o=e[t],s=e.charCodeAt(t);s<56320||57343<s||(o=e[--t]+o),r=f(n,L(o),r)}return r}),H=c(function(n,r){return r.split(n)}),j=c(function(n,r){return r.join(n)}),V=o(function(n,r,e){return e.slice(n,r)});c(function(n,r){for(var e=r.length;e--;){var t=r[e],o=r.charCodeAt(e);if(o<56320||57343<o||(t=r[--e]+t),n(L(t)))return!0}return!1});var z=c(function(n,r){for(var e=r.length;e--;){var t=r[e],o=r.charCodeAt(e);if(o<56320||57343<o||(t=r[--e]+t),!n(L(t)))return!1}return!0}),M=c(function(n,r){return!!~r.indexOf(n)}),J=c(function(n,r){return 0==r.indexOf(n)}),K=(c(function(n,r){return n.length<=r.length&&r.lastIndexOf(n)==r.length-n.length}),c(function(n,r){var e=n.length;if(e<1)return N;for(var t=0,o=[];-1<(t=r.indexOf(n,t));)o.push(t),t+=e;return C(o)}));function Y(n){return{$:2,b:n}}Y(function(n){return"number"!=typeof n?an("an INT",n):-2147483647<n&&n<2147483647&&(0|n)===n?Be(n):!isFinite(n)||n%1?an("an INT",n):Be(n)}),Y(function(n){return"boolean"==typeof n?Be(n):an("a BOOL",n)}),Y(function(n){return"number"==typeof n?Be(n):an("a FLOAT",n)});var X=Y(function(n){return Be(pn(n))});Y(function(n){return"string"==typeof n?Be(n):n instanceof String?Be(n+""):an("a STRING",n)});c(function(n,r){return{$:6,d:n,b:r}}),c(function(n,r){return{$:7,e:n,b:r}});function Z(n,r){return{$:9,f:n,g:r}}c(function(n,r){return{$:10,b:r,h:n}});var Q=c(function(n,r){return Z(n,[r])}),nn=o(function(n,r,e){return Z(n,[r,e])}),rn=(e(function(n,r,e,t){return Z(n,[r,e,t])}),t(function(n,r,e,t,o){return Z(n,[r,e,t,o])}),s(function(n,r,e,t,o,s){return Z(n,[r,e,t,o,s])}),a(function(n,r,e,t,o,s,a){return Z(n,[r,e,t,o,s,a])}),l(function(n,r,e,t,o,s,a,c){return Z(n,[r,e,t,o,s,a,c])}),i(function(n,r,e,t,o,s,a,c,l){return Z(n,[r,e,t,o,s,a,c,l])}),c(function(n,r){try{return en(n,JSON.parse(r))}catch(n){return We(f(_e,"This is not valid JSON! "+n.message,pn(r)))}}),c(function(n,r){return en(n,fn(r))}));function en(n,r){switch(n.$){case 2:return n.b(r);case 5:return null===r?Be(n.c):an("null",r);case 3:return on(r)?tn(n.b,r,C):an("a LIST",r);case 4:return on(r)?tn(n.b,r,sn):an("an ARRAY",r);case 6:var e=n.d;if("object"!=typeof r||null===r||!(e in r))return an("an OBJECT with a field named `"+e+"`",r);var t=en(n.b,r[e]);return be(t)?t:We(f(Fe,e,t.a));case 7:var o=n.e;if(!on(r))return an("an ARRAY",r);if(r.length<=o)return an("a LONGER array. Need index "+o+" but only see "+r.length+" entries",r);t=en(n.b,r[o]);return be(t)?t:We(f(Ie,o,t.a));case 8:if("object"!=typeof r||null===r||on(r))return an("an OBJECT",r);var s=N;for(var a in r)if(r.hasOwnProperty(a)){t=en(n.b,r[a]);if(!be(t))return We(f(Fe,a,t.a));s=S(A(a,t.a),s)}return Be(Ee(s));case 9:for(var c=n.f,l=n.g,i=0;i<l.length;i++){t=en(l[i],r);if(!be(t))return t;c=c(t.a)}return Be(c);case 10:t=en(n.b,r);return be(t)?en(n.h(t.a),r):t;case 11:for(var u=N,p=n.g;p.b;p=p.b){t=en(p.a,r);if(be(t))return t;u=S(t.a,u)}return We(Ue(Ee(u)));case 1:return We(f(_e,n.a,pn(r)));case 0:return Be(n.a)}}function tn(n,r,e){for(var t=r.length,o=Array(t),s=0;s<t;s++){var a=en(n,r[s]);if(!be(a))return We(f(Ie,s,a.a));o[s]=a.a}return Be(e(o))}function on(n){return Array.isArray(n)||"function"==typeof FileList&&n instanceof FileList}function sn(r){return f(Ce,r.length,function(n){return r[n]})}function an(n,r){return We(f(_e,"Expecting "+n,pn(r)))}function cn(n,r){if(n===r)return!0;if(n.$!==r.$)return!1;switch(n.$){case 0:case 1:return n.a===r.a;case 2:return n.b===r.b;case 5:return n.c===r.c;case 3:case 4:case 8:return cn(n.b,r.b);case 6:return n.d===r.d&&cn(n.b,r.b);case 7:return n.e===r.e&&cn(n.b,r.b);case 9:return n.f===r.f&&ln(n.g,r.g);case 10:return n.h===r.h&&cn(n.b,r.b);case 11:return ln(n.g,r.g)}}function ln(n,r){var e=n.length;if(e!==r.length)return!1;for(var t=0;t<e;t++)if(!cn(n[t],r[t]))return!1;return!0}var un=c(function(n,r){return JSON.stringify(fn(r),null,n)+""});function pn(n){return n}function fn(n){return n}var dn=o(function(n,r,e){return e[n]=fn(r),e});pn(null);function bn(n){return{$:0,a:n}}function yn(n){return{$:2,b:n,c:null}}var hn=c(function(n,r){return{$:3,b:n,d:r}});c(function(n,r){return{$:4,b:n,d:r}});var gn=0;function mn(n){var r={$:0,e:gn++,f:n,g:null,h:[]};return $n(r),r}function vn(r){return yn(function(n){n(bn(mn(r)))})}function wn(n,r){n.h.push(r),$n(n)}var qn=c(function(r,e){return yn(function(n){wn(r,e),n(bn(k))})});var xn=!1,En=[];function $n(n){if(En.push(n),!xn){for(xn=!0;n=En.shift();)kn(n);xn=!1}}function kn(r){for(;r.f;){var n=r.f.$;if(0===n||1===n){for(;r.g&&r.g.$!==n;)r.g=r.g.i;if(!r.g)return;r.f=r.g.b(r.f.a),r.g=r.g.i}else{if(2===n)return void(r.f.c=r.f.b(function(n){r.f=n,$n(r)}));if(5===n){if(0===r.h.length)return;r.f=r.f.b(r.h.shift())}else r.g={$:3===n?0:1,b:r.f.b,i:r.g},r.f=r.f.d}}}e(function(n,r,e,t){return An(r,t,n.dR,n.d0,n.d_,function(){return function(){}})});function An(n,r,e,t,o,s){var a=f(rn,n,pn(r?r.flags:void 0));be(a)||v(2);var c={},l=(a=e(a.a)).a,i=s(p,l),u=function(n,r){var e;for(var t in Tn){var o=Tn[t];o.a&&((e=e||{})[t]=o.a(t,r)),n[t]=Dn(o,r)}return e}(c,p);function p(n,r){a=f(t,n,l),i(l=a.a,r),Cn(c,a.b,o(l))}return Cn(c,a.b,o(l)),u?{ports:u}:{}}var Tn={};function Ln(n,r,e,t,o){return{b:n,c:r,d:e,e:t,f:o}}function Dn(n,r){var t={g:r,h:void 0},o=n.c,s=n.d,a=n.e,c=n.f;return t.h=mn(f(hn,function n(e){return f(hn,n,function(n){return{$:5,b:n}}(function(n){var r=n.a;return 0===n.$?p(s,t,r,e):a&&c?d(o,t,r.i,r.j,e):p(o,t,a?r.i:r.j,e)}))},n.b))}var Rn=c(function(r,e){return yn(function(n){r.g(e),n(bn(k))})}),Nn=c(function(n,r){return f(qn,n.h,{$:0,a:r})});function Sn(r){return function(n){return{$:1,k:r,l:n}}}function On(n){return{$:2,m:n}}c(function(n,r){return{$:3,n:n,o:r}});function Cn(n,r,e){var t={};for(var o in Wn(!0,r,t,null),Wn(!1,e,t,null),n)wn(n[o],{$:"fx",a:t[o]||{i:N,j:N}})}function Wn(n,r,e,t){switch(r.$){case 1:var o=r.k,s=function(n,r,e,t){return f(n?Tn[r].e:Tn[r].f,function(n){for(var r=e;r;r=r.q)n=r.p(n);return n},t)}(n,o,t,r.l);return void(e[o]=function(n,r,e){return e=e||{i:N,j:N},n?e.i=S(r,e.i):e.j=S(r,e.j),e}(n,s,e[o]));case 2:for(var a=r.m;a.b;a=a.b)Wn(n,a.a,e,t);return;case 3:return void Wn(n,r.o,e,{p:r.n,q:t})}}c(function(n,r){return r});c(function(r,e){return function(n){return r(e(n))}});var Bn=o(function(t,o,s){return yn(function(r){function e(n){r(o(s.dK.a(n)))}var n=new XMLHttpRequest;n.addEventListener("error",function(){e(Nt)}),n.addEventListener("timeout",function(){e(Ct)}),n.addEventListener("load",function(){e(function(n,r){return f(200<=r.status&&r.status<300?Rt:Lt,function(n){return{dy:n.responseURL,dn:n.status,dZ:n.statusText,l:function(n){if(!n)return tt;for(var r=tt,e=n.split("\r\n"),t=e.length;t--;){var o=e[t],s=o.indexOf(": ");if(0<s){var a=o.substring(0,s),c=o.substring(2+s);r=p(Et,a,function(n){return pe($t(n)?c+", "+n.a:c)},r)}}return r}(n.getAllResponseHeaders())}}(r),n(r.response))}(s.dK.b,n))}),$t(s.u)&&function(r,e,t){e.upload.addEventListener("progress",function(n){e.c||mn(f(At,r,A(t,Ot({dY:n.loaded,cr:n.total}))))}),e.addEventListener("progress",function(n){e.c||mn(f(At,r,A(t,St({dW:n.loaded,cr:n.lengthComputable?pe(n.total):fe}))))})}(t,n,s.u.a);try{n.open(s.q,s.dy,!0)}catch(n){return e(Dt(s.dy))}return function(n,r){for(var e=r.l;e.b;e=e.b)n.setRequestHeader(e.a.a,e.a.b);n.timeout=r.r.a||0,n.responseType=r.dK.d,n.withCredentials=r.R}(n,s),s.dD.a&&n.setRequestHeader("Content-Type",s.dD.a),n.send(s.dD.b),function(){n.c=!0,n.abort()}})});var _n=o(function(n,r,e){return{$:0,d:n,b:r,a:e}}),Fn=c(function(r,e){return{$:0,d:e.d,b:e.b,a:function(n){return r(e.a(n))}}});function In(n){return new DataView(n)}var Un=c(function(n,r){return{$:0,a:n,b:r}});var Gn;c(function(n,r){return new Blob([r],{type:n})});var Pn="undefined"!=typeof document?document:{};function Hn(n,r){n.appendChild(r)}e(function(n,r,e,t){var o=t.node;return o.parentNode.replaceChild(or(n,function(){}),o),{}});function jn(n){return{$:0,a:n}}var Vn=c(function(s,a){return c(function(n,r){for(var e=[],t=0;r.b;r=r.b){var o=r.a;t+=o.b||0,e.push(o)}return t+=e.length,{$:1,c:a,d:er(n),e:e,f:s,b:t}})})(void 0),zn=c(function(s,a){return c(function(n,r){for(var e=[],t=0;r.b;r=r.b){var o=r.a;t+=o.b.b||0,e.push(o)}return t+=e.length,{$:2,c:a,d:er(n),e:e,f:s,b:t}})})(void 0);c(function(n,r){return{$:4,j:n,k:r,b:1+(r.b||0)}});function Mn(n,r){return{$:5,l:n,m:r,k:void 0}}c(function(n,r){return Mn([n,r],function(){return n(r)})}),o(function(n,r,e){return Mn([n,r,e],function(){return f(n,r,e)})}),e(function(n,r,e,t){return Mn([n,r,e,t],function(){return p(n,r,e,t)})}),t(function(n,r,e,t,o){return Mn([n,r,e,t,o],function(){return d(n,r,e,t,o)})}),s(function(n,r,e,t,o,s){return Mn([n,r,e,t,o,s],function(){return b(n,r,e,t,o,s)})}),a(function(n,r,e,t,o,s,a){return Mn([n,r,e,t,o,s,a],function(){return u(n,r,e,t,o,s,a)})}),l(function(n,r,e,t,o,s,a,c){return Mn([n,r,e,t,o,s,a,c],function(){return y(n,r,e,t,o,s,a,c)})}),i(function(n,r,e,t,o,s,a,c,l){return Mn([n,r,e,t,o,s,a,c,l],function(){return function(n,r,e,t,o,s,a,c,l){return 8===n.a?n.f(r,e,t,o,s,a,c,l):n(r)(e)(t)(o)(s)(a)(c)(l)}(n,r,e,t,o,s,a,c,l)})});var Jn=c(function(n,r){return{$:"a0",n:n,o:r}}),Kn=c(function(n,r){return{$:"a1",n:n,o:r}}),Yn=c(function(n,r){return{$:"a2",n:n,o:r}}),Xn=c(function(n,r){return{$:"a3",n:n,o:r}});o(function(n,r,e){return{$:"a4",n:r,o:{f:n,o:e}}});function Zn(n){return"script"==n?"p":n}c(function(n,r){return"a0"===r.$?f(Jn,r.n,function(n,r){var e=Io(r);return{$:r.$,a:e?p(_o,e<3?nr:rr,Fo(n),r.a):f(Bo,n,r.a)}}(n,r.o)):r});var Qn,nr=c(function(n,r){return A(n(r.a),r.b)}),rr=c(function(n,r){return{C:n(r.C),cu:r.cu,co:r.co}});function er(n){for(var r={};n.b;n=n.b){var e=n.a,t=e.$,o=e.n,s=e.o;if("a2"!==t){var a=r[t]||(r[t]={});"a3"===t&&"class"===o?tr(a,o,s):a[o]=s}else"className"===o?tr(r,o,fn(s)):r[o]=fn(s)}return r}function tr(n,r,e){var t=n[r];n[r]=t?t+" "+e:e}function or(n,r){var e=n.$;if(5===e)return or(n.k||(n.k=n.m()),r);if(0===e)return Pn.createTextNode(n.a);if(4===e){for(var t=n.k,o=n.j;4===t.$;)"object"!=typeof o?o=[o,t.j]:o.push(t.j),t=t.k;var s={j:o,p:r};return(a=or(t,s)).elm_event_node_ref=s,a}if(3===e)return sr(a=n.h(n.g),r,n.d),a;var a=n.f?Pn.createElementNS(n.f,n.c):Pn.createElement(n.c);Gn&&"a"==n.c&&a.addEventListener("click",Gn(a)),sr(a,r,n.d);for(var c=n.e,l=0;l<c.length;l++)Hn(a,or(1===e?c[l]:c[l].b,r));return a}function sr(n,r,e){for(var t in e){var o=e[t];"a1"===t?ar(n,o):"a0"===t?ir(n,r,o):"a3"===t?cr(n,o):"a4"===t?lr(n,o):("value"!==t&&"checked"!==t||n[t]!==o)&&(n[t]=o)}}function ar(n,r){var e=n.style;for(var t in r)e[t]=r[t]}function cr(n,r){for(var e in r){var t=r[e];void 0!==t?n.setAttribute(e,t):n.removeAttribute(e)}}function lr(n,r){for(var e in r){var t=r[e],o=t.f,s=t.o;void 0!==s?n.setAttributeNS(o,e,s):n.removeAttributeNS(o,e)}}function ir(n,r,e){var t=n.elmFs||(n.elmFs={});for(var o in e){var s=e[o],a=t[o];if(s){if(a){if(a.q.$===s.$){a.q=s;continue}n.removeEventListener(o,a)}a=ur(r,s),n.addEventListener(o,a,Qn&&{passive:Io(s)<2}),t[o]=a}else n.removeEventListener(o,a),t[o]=void 0}}try{window.addEventListener("t",null,Object.defineProperty({},"passive",{get:function(){Qn=!0}}))}catch(n){}function ur(u,n){function p(n){var r=p.q,e=en(r.a,n);if(be(e)){for(var t,o=Io(r),s=e.a,a=o?o<3?s.a:s.C:s,c=1==o?s.b:3==o&&s.cu,l=(c&&n.stopPropagation(),(2==o?s.b:3==o&&s.co)&&n.preventDefault(),u);t=l.j;){if("function"==typeof t)a=t(a);else for(var i=t.length;i--;)a=t[i](a);l=l.p}l(a,c)}}return p.q=n,p}function pr(n,r){return n.$==r.$&&cn(n.a,r.a)}function fr(n,r){var e=[];return br(n,r,e,0),e}function dr(n,r,e,t){var o={$:r,r:e,s:t,t:void 0,u:void 0};return n.push(o),o}function br(n,r,e,t){if(n!==r){var o=n.$,s=r.$;if(o!==s){if(1!==o||2!==s)return void dr(e,0,t,r);r=function(n){for(var r=n.e,e=r.length,t=Array(e),o=0;o<e;o++)t[o]=r[o].b;return{$:1,c:n.c,d:n.d,e:t,f:n.f,b:n.b}}(r),s=1}switch(s){case 5:for(var a=n.l,c=r.l,l=a.length,i=l===c.length;i&&l--;)i=a[l]===c[l];if(i)return void(r.k=n.k);r.k=r.m();var u=[];return br(n.k,r.k,u,0),void(0<u.length&&dr(e,1,t,u));case 4:for(var p=n.j,f=r.j,d=!1,b=n.k;4===b.$;)d=!0,"object"!=typeof p?p=[p,b.j]:p.push(b.j),b=b.k;for(var y=r.k;4===y.$;)d=!0,"object"!=typeof f?f=[f,y.j]:f.push(y.j),y=y.k;return d&&p.length!==f.length?void dr(e,0,t,r):((d?function(n,r){for(var e=0;e<n.length;e++)if(n[e]!==r[e])return!1;return!0}(p,f):p===f)||dr(e,2,t,f),void br(b,y,e,t+1));case 0:return void(n.a!==r.a&&dr(e,3,t,r.a));case 1:return void yr(n,r,e,t,gr);case 2:return void yr(n,r,e,t,mr);case 3:if(n.h!==r.h)return void dr(e,0,t,r);var h=hr(n.d,r.d);h&&dr(e,4,t,h);var g=r.i(n.g,r.g);return void(g&&dr(e,5,t,g))}}}function yr(n,r,e,t,o){if(n.c===r.c&&n.f===r.f){var s=hr(n.d,r.d);s&&dr(e,4,t,s),o(n,r,e,t)}else dr(e,0,t,r)}function hr(n,r,e){var t;for(var o in n)if("a1"!==o&&"a0"!==o&&"a3"!==o&&"a4"!==o)if(o in r){var s=n[o],a=r[o];s===a&&"value"!==o&&"checked"!==o||"a0"===e&&pr(s,a)||((t=t||{})[o]=a)}else(t=t||{})[o]=e?"a1"===e?"":"a0"===e||"a3"===e?void 0:{f:n[o].f,o:void 0}:"string"==typeof n[o]?"":null;else{var c=hr(n[o],r[o]||{},o);c&&((t=t||{})[o]=c)}for(var l in r)l in n||((t=t||{})[l]=r[l]);return t}function gr(n,r,e,t){var o=n.e,s=r.e,a=o.length,c=s.length;c<a?dr(e,6,t,{v:c,i:a-c}):a<c&&dr(e,7,t,{v:a,e:s});for(var l=a<c?a:c,i=0;i<l;i++){var u=o[i];br(u,s[i],e,++t),t+=u.b||0}}function mr(n,r,e,t){for(var o=[],s={},a=[],c=n.e,l=r.e,i=c.length,u=l.length,p=0,f=0,d=t;p<i&&f<u;){var b=(A=c[p]).a,y=(T=l[f]).a,h=A.b,g=T.b,m=void 0,v=void 0;if(b!==y){var w=c[p+1],q=l[f+1];if(w){var x=w.a,E=w.b;v=y===x}if(q){var $=q.a,k=q.b;m=b===$}if(m&&v)br(h,k,o,++d),wr(s,o,b,g,f,a),d+=h.b||0,qr(s,o,b,E,++d),d+=E.b||0,p+=2,f+=2;else if(m)d++,wr(s,o,y,g,f,a),br(h,k,o,d),d+=h.b||0,p+=1,f+=2;else if(v)qr(s,o,b,h,++d),d+=h.b||0,br(E,g,o,++d),d+=E.b||0,p+=2,f+=1;else{if(!w||x!==$)break;qr(s,o,b,h,++d),wr(s,o,y,g,f,a),d+=h.b||0,br(E,k,o,++d),d+=E.b||0,p+=2,f+=2}}else br(h,g,o,++d),d+=h.b||0,p++,f++}for(;p<i;){var A;qr(s,o,(A=c[p]).a,h=A.b,++d),d+=h.b||0,p++}for(;f<u;){var T,L=L||[];wr(s,o,(T=l[f]).a,T.b,void 0,L),f++}(0<o.length||0<a.length||L)&&dr(e,8,t,{w:o,x:a,y:L})}var vr="_elmW6BL";function wr(n,r,e,t,o,s){var a=n[e];if(!a)return s.push({r:o,A:a={c:0,z:t,r:o,s:void 0}}),void(n[e]=a);if(1===a.c){s.push({r:o,A:a}),a.c=2;var c=[];return br(a.z,t,c,a.r),a.r=o,void(a.s.s={w:c,A:a})}wr(n,r,e+vr,t,o,s)}function qr(n,r,e,t,o){var s=n[e];if(s){if(0===s.c){s.c=2;var a=[];return br(t,s.z,a,o),void dr(r,9,o,{w:a,A:s})}qr(n,r,e+vr,t,o)}else{var c=dr(r,9,o,void 0);n[e]={c:1,z:t,r:o,s:c}}}function xr(n,r,e,t){!function n(r,e,t,o,s,a,c){var l=t[o];var i=l.r;for(;i===s;){var u=l.$;if(1===u)xr(r,e.k,l.s,c);else if(8===u){l.t=r,l.u=c;var p=l.s.w;0<p.length&&n(r,e,p,0,s,a,c)}else if(9===u){l.t=r,l.u=c;var f=l.s;if(f){f.A.s=r;var p=f.w;0<p.length&&n(r,e,p,0,s,a,c)}}else l.t=r,l.u=c;if(!(l=t[++o])||(i=l.r)>a)return o}var d=e.$;if(4===d){for(var b=e.k;4===b.$;)b=b.k;return n(r,b,t,o,s+1,a,r.elm_event_node_ref)}var y=e.e;var h=r.childNodes;for(var g=0;g<y.length;g++){var m=1===d?y[g]:y[g].b,v=++s+(m.b||0);if(s<=i&&i<=v&&(o=n(h[g],m,t,o,s,v,c),!(l=t[o])||(i=l.r)>a))return o;s=v}return o}(n,r,e,0,0,r.b,t)}function Er(n,r,e,t){return 0===e.length?n:(xr(n,r,e,t),$r(n,e))}function $r(n,r){for(var e=0;e<r.length;e++){var t=r[e],o=t.t,s=kr(o,t);o===n&&(n=s)}return n}function kr(n,r){switch(r.$){case 0:return function(n,r,e){var t=n.parentNode,o=or(r,e);o.elm_event_node_ref||(o.elm_event_node_ref=n.elm_event_node_ref);t&&o!==n&&t.replaceChild(o,n);return o}(n,r.s,r.u);case 4:return sr(n,r.u,r.s),n;case 3:return n.replaceData(0,n.length,r.s),n;case 1:return $r(n,r.s);case 2:return n.elm_event_node_ref?n.elm_event_node_ref.j=r.s:n.elm_event_node_ref={j:r.s,p:r.u},n;case 6:for(var e=r.s,t=0;t<e.i;t++)n.removeChild(n.childNodes[e.v]);return n;case 7:for(var o=(e=r.s).e,s=n.childNodes[t=e.v];t<o.length;t++)n.insertBefore(or(o[t],r.u),s);return n;case 9:if(!(e=r.s))return n.parentNode.removeChild(n),n;var a=e.A;return void 0!==a.r&&n.parentNode.removeChild(n),a.s=$r(n,e.w),n;case 8:return function(n,r){var e=r.s,t=function(n,r){if(!n)return;for(var e=Pn.createDocumentFragment(),t=0;t<n.length;t++){var o=n[t].A;Hn(e,2===o.c?o.s:or(o.z,r.u))}return e}(e.y,r);n=$r(n,e.w);for(var o=e.x,s=0;s<o.length;s++){var a=o[s],c=a.A,l=2===c.c?c.s:or(c.z,r.u);n.insertBefore(l,n.childNodes[a.r])}t&&Hn(n,t);return n}(n,r);case 5:return r.s(n);default:v(10)}}function Ar(n){if(3===n.nodeType)return jn(n.textContent);if(1!==n.nodeType)return jn("");for(var r=N,e=n.attributes,t=e.length;t--;){var o=e[t];r=S(f(Xn,o.name,o.value),r)}var s=n.tagName.toLowerCase(),a=N,c=n.childNodes;for(t=c.length;t--;)a=S(Ar(c[t]),a);return p(Vn,s,r,a)}var Tr=t(function(n,r,e,t,o){for(var s=n.length,a=r+s<=o.length,c=0;a&&c<s;){var l=o.charCodeAt(r);a=n[c++]===o[r++]&&(10==l?(e++,t=1):(t++,55296==(63488&l)?n[c++]===o[r++]:1))}return T(a?r:-1,e,t)}),Lr=o(function(n,r,e){return r<e.length?55296==(63488&e.charCodeAt(r))?n(L(e.substr(r,2)))?r+2:-1:n(L(e[r]))?"\n"===e[r]?-2:r+1:-1:-1}),Dr=o(function(n,r,e){return e.charCodeAt(r)===n}),Rr=c(function(n,r){for(;n<r.length;n++){var e=r.charCodeAt(n);if(e<48||57<e)return n}return n}),Nr=o(function(n,r,e){for(var t=0;r<e.length;r++){var o=e.charCodeAt(r)-48;if(o<0||n<=o)break;t=n*t+o}return A(r,t)}),Sr=c(function(n,r){for(var e=0;n<r.length;n++){var t=r.charCodeAt(n);if(48>t||t>57)if(65>t||t>70){if(t<97||102<t)break;e=16*e+t-87}else e=16*e+t-55;else e=16*e+t-48}return A(n,e)}),Or=t(function(n,r,e,t,o){for(var s=o.indexOf(n,r),a=s<0?o.length:s+n.length;r<a;){var c=o.charCodeAt(r++);10==c?(t=1,e++):(t++,55296==(63488&c)&&r++)}return T(s,e,t)}),Cr=e(function(r,n,e,c){return An(n,c,r.dR,r.d0,r.d_,function(t,n){var o=r.d1,s=c.node,a=Ar(s);return Br(n,function(n){var r=o(n),e=fr(a,r);s=Er(s,a,e,t),a=r})})}),Wr=(e(function(r,n,e,t){return An(n,t,r.dR,r.d0,r.d_,function(o,n){var s=r.aA&&r.aA(o),a=r.d1,c=Pn.title,l=Pn.body,i=Ar(l);return Br(n,function(n){Gn=s;var r=a(n),e=Vn("body")(N)(r.dD),t=fr(i,e);l=Er(l,i,t,o),i=e,Gn=0,c!==r.d$&&(Pn.title=c=r.d$)})})}),"undefined"!=typeof cancelAnimationFrame&&cancelAnimationFrame,"undefined"!=typeof requestAnimationFrame?requestAnimationFrame:function(n){return setTimeout(n,1e3/60)});function Br(e,t){t(e);var o=0;function s(){o=1===o?0:(Wr(s),t(e),1)}return function(n,r){e=n,r?(t(e),2===o&&(o=1)):(0===o&&Wr(s),o=2)}}c(function(n,r){return f(El,bl,yn(function(){r&&history.go(r),n()}))}),c(function(n,r){return f(El,bl,yn(function(){history.pushState({},"",r),n()}))}),c(function(n,r){return f(El,bl,yn(function(){history.replaceState({},"",r),n()}))});var _r={addEventListener:function(){},removeEventListener:function(){}},Fr=("undefined"!=typeof document&&document,"undefined"!=typeof window?window:_r);o(function(r,e,t){return vn(yn(function(){function n(n){mn(t(n))}return r.addEventListener(e,n,Qn&&{passive:!0}),function(){r.removeEventListener(e,n)}}))}),c(function(n,r){var e=en(n,r);return be(e)?pe(e.a):fe});function Ir(e,t){return yn(function(r){Wr(function(){var n=document.getElementById(e);r(n?bn(t(n)):function(n){return{$:1,a:n}}(dl(e)))})})}c(function(r,n){return Ir(n,function(n){return n[r](),k})});c(function(n,r){return function(r){return yn(function(n){Wr(function(){n(bn(r()))})})}(function(){return Fr.scroll(n,r),k})});o(function(n,r,e){return Ir(n,function(n){return n.scrollLeft=r,n.scrollTop=e,k})});function Ur(n){if(n.b){return pe(n.a)}return fe}function Gr(n){return n.a}function Pr(n){var r=Ge(n);return 97<=r&&r<=122}function Hr(n){var r=Ge(n);return r<=90&&65<=r}function jr(n){return Pr(n)||Hr(n)}function Vr(n){return Pr(n)||Hr(n)||function(n){var r=Ge(n);return r<=57&&48<=r}(n)}function zr(n){return p(xe,c(function(n,r){return r+1}),0,n)}function Mr(n){return f(Je,"\n    ",f(Ye,"\n",n))}function Jr(n){return n}function Kr(n){return{$:6,a:n}}function Yr(n){return function(n){return pn(p(xe,c(function(n,r){return p(dn,n.a,n.b,r)}),{},n))}(C([A("prompt",ut(n.af.dz)),A("colors",ut(n.V.s)),A("xontribs",f(it,ut,n.G))]))}function Xr(n){if(-1!==n.$||-1!==n.d.$||-1!==n.e.$)return n;if(-1!==n.e.d.$||n.e.d.a){var r=n.d,e=n.e;a=e.b,c=e.c,t=e.d,u=e.e;return b(bt,1,n.b,n.c,b(bt,0,r.b,r.c,r.d,r.e),b(bt,0,a,c,t,u))}var t,o=n.d,s=n.e,a=s.b,c=s.c,l=(t=s.d).d,i=t.e,u=s.e;return b(bt,0,t.b,t.c,b(bt,1,n.b,n.c,b(bt,0,o.b,o.c,o.d,o.e),l),b(bt,1,a,c,i,u))}function Zr(n){if(-1!==n.$||-1!==n.d.$||-1!==n.e.$)return n;if(-1!==n.d.d.$||n.d.d.a){var r=n.d,e=r.d,t=n.e;u=t.b,p=t.c,f=t.d,d=t.e;return b(bt,1,o=n.b,s=n.c,b(bt,0,r.b,r.c,e,l=r.e),b(bt,0,u,p,f,d))}var o=n.b,s=n.c,a=n.d,c=a.d,l=a.e,i=n.e,u=i.b,p=i.c,f=i.d,d=i.e;return b(bt,0,a.b,a.c,b(bt,1,c.b,c.c,c.d,c.e),b(bt,1,o,s,l,b(bt,0,u,p,f,d)))}function Qr(n){return{$:4,a:n}}function ne(n){return{$:1,a:n}}function re(n){return p(Kt,Zt(se),Ut(N),n)}var ee=1,te=0,oe=m,se=(o(function(e,n,r){var t=r.c,o=r.d,s=c(function(n,r){return p(oe,n.$?e:s,r,n.a)});return p(oe,s,p(oe,e,n,o),t)}),O),ae=2,ce=o(function(n,r,e){for(;;){if(-2===e.$)return r;var t=e.d,o=n,s=p(n,e.b,e.c,p(ce,n,r,e.e));n=o,r=s,e=t}}),le=function(n){return p(ce,o(function(n,r,e){return f(se,A(n,r),e)}),N,n)},ie=C([{W:'<div class="highlight" style="background: #ffffff; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #000000; line-height: 125%"><span></span><code><span style="color: #007f00; font-weight: bold">import</span> <span style="color: #0000ff; font-weight: bold">sys</span>\necho <span style="color: #ff0000">&quot;Welcome $USER on&quot;</span> <span style="color: #007f00; font-weight: bold">@</span>(sys<span style="color: #555555">.</span>platform)\n\n<span style="color: #007f00; font-weight: bold">def</span> <span style="color: #0000ff">func</span>(x<span style="color: #555555">=42</span>):\n    d <span style="color: #555555">=</span> {<span style="color: #ff0000">&quot;xonsh&quot;</span>: <span style="color: #007f00; font-weight: bold">True</span>}\n    <span style="color: #007f00; font-weight: bold">return</span> d<span style="color: #555555">.</span>get(<span style="color: #ff0000">&quot;xonsh&quot;</span>) <span style="color: #7f007f; font-weight: bold">and</span> you\n\n<span style="color: #007f7f; text-decoration: underline"># This is a comment</span>\n<span style="color: #007f00; font-weight: bold">!</span>[<span style="color: #007f00">env</span> |<span style="color: #e5e5e5"> </span><span style="color: #007f00">uniq</span> |<span style="color: #e5e5e5"> </span><span style="color: #007f00">sort</span> |<span style="color: #e5e5e5"> </span><span style="color: #007f00">grep</span> PATH]\n</code></pre></div>',s:"default"},{W:'<div class="highlight" style="background: #ffffff; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #000000; line-height: 125%"><span></span><code><span style="color: #0000ff">import</span> <span style="color: #000000">sys</span>\n<span style="color: #000000">echo</span> <span style="color: #55aa22">&quot;Welcome $USER on&quot;</span> <span style="color: #0000ff">@</span>(<span style="color: #000000">sys</span>.<span style="color: #000000">platform</span>)\n\n<span style="color: #0000ff">def</span> <span style="color: #000000">func</span>(<span style="color: #000000">x</span>=<span style="color: #33aaff">42</span>):\n    <span style="color: #000000">d</span> = {<span style="color: #55aa22">&quot;xonsh&quot;</span>: <span style="color: #0000ff">True</span>}\n    <span style="color: #0000ff">return</span> <span style="color: #000000">d</span>.<span style="color: #000000">get</span>(<span style="color: #55aa22">&quot;xonsh&quot;</span>) <span style="color: #0000ff">and</span> <span style="color: #000000">you</span>\n\n<span style="color: #888888; font-style: italic"># This is a comment</span>\n<span style="color: #0000ff">!</span>[<span style="color: #000000">env</span> | <span style="color: #000000">uniq</span> | <span style="color: #000000">sort</span> | <span style="color: #000000">grep</span> PATH]\n</code></pre></div>',s:"abap"},{W:'<div class="highlight" style="background: #ffffff; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #000000; line-height: 125%"><span></span><code><span style="font-weight: bold; text-decoration: underline">import</span> <span style="color: #666666; font-weight: bold; font-style: italic">sys</span>\necho <span style="color: #666666; font-style: italic">&quot;Welcome $USER on&quot;</span> <span style="font-weight: bold; text-decoration: underline">@</span>(sys.platform)\n\n<span style="font-weight: bold; text-decoration: underline">def</span> <span style="color: #666666; font-weight: bold; font-style: italic">func</span>(x=42):\n    d = {<span style="color: #666666; font-style: italic">&quot;xonsh&quot;</span>: <span style="font-weight: bold; text-decoration: underline">True</span>}\n    <span style="font-weight: bold; text-decoration: underline">return</span> d.get(<span style="color: #666666; font-style: italic">&quot;xonsh&quot;</span>) <span style="font-weight: bold">and</span> you\n\n<span style="color: #888888; font-style: italic"># This is a comment</span>\n<span style="font-weight: bold; text-decoration: underline">!</span>[<span style="font-weight: bold; font-style: italic">env</span> | <span style="font-weight: bold; font-style: italic">uniq</span> | <span style="font-weight: bold; font-style: italic">sort</span> | <span style="font-weight: bold; font-style: italic">grep</span> PATH]\n</code></pre></div>',s:"algol"},{W:'<div class="highlight" style="background: #ffffff; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #000000; line-height: 125%"><span></span><code><span style="font-weight: bold">import</span> <span style="color: #666666; font-weight: bold; font-style: italic">sys</span>\necho <span style="color: #666666; font-style: italic">&quot;Welcome $USER on&quot;</span> <span style="font-weight: bold">@</span>(sys.platform)\n\n<span style="font-weight: bold">def</span> <span style="color: #666666; font-weight: bold; font-style: italic">func</span>(x=42):\n    d = {<span style="color: #666666; font-style: italic">&quot;xonsh&quot;</span>: <span style="font-weight: bold">True</span>}\n    <span style="font-weight: bold">return</span> d.get(<span style="color: #666666; font-style: italic">&quot;xonsh&quot;</span>) <span style="font-weight: bold">and</span> you\n\n<span style="color: #888888; font-style: italic"># This is a comment</span>\n<span style="font-weight: bold">!</span>[<span style="font-weight: bold; font-style: italic">env</span> | <span style="font-weight: bold; font-style: italic">uniq</span> | <span style="font-weight: bold; font-style: italic">sort</span> | <span style="font-weight: bold; font-style: italic">grep</span> PATH]\n</code></pre></div>',s:"algol_nu"},{W:'<div class="highlight" style="background: #ffffff; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #000000; line-height: 125%"><span></span><code><span style="color: #728E00">import</span> <span style="color: #434f54">sys</span>\n<span style="color: #434f54">echo</span> <span style="color: #7F8C8D">&quot;Welcome $USER on&quot;</span> <span style="color: #728E00">@</span>(<span style="color: #434f54">sys</span><span style="color: #728E00">.</span><span style="color: #434f54">platform</span>)\n\n<span style="color: #728E00">def</span> <span style="color: #D35400">func</span>(<span style="color: #434f54">x</span><span style="color: #728E00">=</span><span style="color: #8A7B52">42</span>):\n    <span style="color: #434f54">d</span> <span style="color: #728E00">=</span> {<span style="color: #7F8C8D">&quot;xonsh&quot;</span>: <span style="color: #00979D">True</span>}\n    <span style="color: #728E00">return</span> <span style="color: #434f54">d</span><span style="color: #728E00">.</span><span style="color: #434f54">get</span>(<span style="color: #7F8C8D">&quot;xonsh&quot;</span>) <span style="color: #728E00">and</span> <span style="color: #434f54">you</span>\n\n<span style="color: #95a5a6"># This is a comment</span>\n<span style="color: #728E00">!</span>[<span style="color: #728E00">env</span> | <span style="color: #728E00">uniq</span> | <span style="color: #728E00">sort</span> | <span style="color: #728E00">grep</span> PATH]\n</code></pre></div>',s:"arduino"},{W:'<div class="highlight" style="background: #ffffff; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #000000; line-height: 125%"><span></span><code><span style="color: #0000aa">import</span> <span style="color: #00aaaa; text-decoration: underline">sys</span>\necho <span style="color: #aa5500">&quot;Welcome $USER on&quot;</span> <span style="color: #0000aa">@</span>(sys.platform)\n\n<span style="color: #0000aa">def</span> <span style="color: #00aa00">func</span>(x=<span style="color: #009999">42</span>):\n    d = {<span style="color: #aa5500">&quot;xonsh&quot;</span>: <span style="color: #0000aa">True</span>}\n    <span style="color: #0000aa">return</span> d.get(<span style="color: #aa5500">&quot;xonsh&quot;</span>) <span style="color: #0000aa">and</span> you\n\n<span style="color: #aaaaaa; font-style: italic"># This is a comment</span>\n<span style="color: #0000aa">!</span>[<span style="color: #00aaaa">env</span> |<span style="color: #bbbbbb"> </span><span style="color: #00aaaa">uniq</span> |<span style="color: #bbbbbb"> </span><span style="color: #00aaaa">sort</span> |<span style="color: #bbbbbb"> </span><span style="color: #00aaaa">grep</span> PATH]\n</code></pre></div>',s:"autumn"},{W:'<div class="highlight" style="background: #ffffff; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #000000; line-height: 125%"><span></span><code><span style="color: #000080; font-weight: bold">import</span> sys\necho <span style="color: #0000FF">&quot;Welcome $USER on&quot;</span> <span style="color: #000080; font-weight: bold">@</span>(sys.platform)\n\n<span style="color: #000080; font-weight: bold">def</span> func(x=<span style="color: #0000FF">42</span>):\n    d = {<span style="color: #0000FF">&quot;xonsh&quot;</span>: <span style="color: #000080; font-weight: bold">True</span>}\n    <span style="color: #000080; font-weight: bold">return</span> d.get(<span style="color: #0000FF">&quot;xonsh&quot;</span>) <span style="font-weight: bold">and</span> you\n\n<span style="color: #008800; font-style: italic"># This is a comment</span>\n<span style="color: #000080; font-weight: bold">!</span>[env |<span style="color: #bbbbbb"> </span>uniq |<span style="color: #bbbbbb"> </span>sort |<span style="color: #bbbbbb"> </span>grep PATH]\n</code></pre></div>',s:"borland"},{W:'<div class="highlight" style="background: #ffffff; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #000000; line-height: 125%"><span></span><code><span style="font-weight: bold">import</span> <span style="font-weight: bold">sys</span>\necho <span style="font-style: italic">&quot;Welcome $USER on&quot;</span> <span style="font-weight: bold">@</span>(sys.platform)\n\n<span style="font-weight: bold">def</span> func(x=42):\n    d = {<span style="font-style: italic">&quot;xonsh&quot;</span>: <span style="font-weight: bold">True</span>}\n    <span style="font-weight: bold">return</span> d.get(<span style="font-style: italic">&quot;xonsh&quot;</span>) <span style="font-weight: bold">and</span> you\n\n<span style="font-style: italic"># This is a comment</span>\n<span style="font-weight: bold">!</span>[env | uniq | sort | grep PATH]\n</code></pre></div>',s:"bw"},{W:'<div class="highlight" style="background: #ffffff; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #000000; line-height: 125%"><span></span><code><span style="color: #008800; font-weight: bold">import</span> <span style="color: #0e84b5; font-weight: bold">sys</span>\necho <span style="background-color: #fff0f0">&quot;Welcome $USER on&quot;</span> <span style="color: #008800; font-weight: bold">@</span>(sys<span style="color: #333333">.</span>platform)\n\n<span style="color: #008800; font-weight: bold">def</span> <span style="color: #0066BB; font-weight: bold">func</span>(x<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">42</span>):\n    d <span style="color: #333333">=</span> {<span style="background-color: #fff0f0">&quot;xonsh&quot;</span>: <span style="color: #008800; font-weight: bold">True</span>}\n    <span style="color: #008800; font-weight: bold">return</span> d<span style="color: #333333">.</span>get(<span style="background-color: #fff0f0">&quot;xonsh&quot;</span>) <span style="color: #000000; font-weight: bold">and</span> you\n\n<span style="color: #888888"># This is a comment</span>\n<span style="color: #008800; font-weight: bold">!</span>[<span style="color: #007020">env</span> |<span style="color: #bbbbbb"> </span><span style="color: #007020">uniq</span> |<span style="color: #bbbbbb"> </span><span style="color: #007020">sort</span> |<span style="color: #bbbbbb"> </span><span style="color: #007020">grep</span> PATH]\n</code></pre></div>',s:"colorful"},{W:'<div class="highlight" style="background: #f8f8f8; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #070707; line-height: 125%"><span></span><code><span style="color: #AA22FF; font-weight: bold">import</span> <span style="color: #0000FF; font-weight: bold">sys</span>\necho <span style="color: #BB4444">&quot;Welcome $USER on&quot;</span> <span style="color: #AA22FF; font-weight: bold">@</span>(sys<span style="color: #666666">.</span>platform)\n\n<span style="color: #AA22FF; font-weight: bold">def</span> <span style="color: #00A000">func</span>(x<span style="color: #666666">=42</span>):\n    d <span style="color: #666666">=</span> {<span style="color: #BB4444">&quot;xonsh&quot;</span>: <span style="color: #AA22FF; font-weight: bold">True</span>}\n    <span style="color: #AA22FF; font-weight: bold">return</span> d<span style="color: #666666">.</span>get(<span style="color: #BB4444">&quot;xonsh&quot;</span>) <span style="color: #AA22FF; font-weight: bold">and</span> you\n\n<span style="color: #008800; font-style: italic"># This is a comment</span>\n<span style="color: #AA22FF; font-weight: bold">!</span>[<span style="color: #AA22FF">env</span> |<span style="color: #bbbbbb"> </span><span style="color: #AA22FF">uniq</span> |<span style="color: #bbbbbb"> </span><span style="color: #AA22FF">sort</span> |<span style="color: #bbbbbb"> </span><span style="color: #AA22FF">grep</span> PATH]\n</code></pre></div>',s:"emacs"},{W:'<div class="highlight" style="background: #f0f0f0; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #0f0f0f; line-height: 125%"><span></span><code><span style="color: #007020; font-weight: bold">import</span> <span style="color: #0e84b5; font-weight: bold">sys</span>\necho <span style="color: #4070a0">&quot;Welcome $USER on&quot;</span> <span style="color: #007020; font-weight: bold">@</span>(sys<span style="color: #666666">.</span>platform)\n\n<span style="color: #007020; font-weight: bold">def</span> <span style="color: #06287e">func</span>(x<span style="color: #666666">=</span><span style="color: #40a070">42</span>):\n    d <span style="color: #666666">=</span> {<span style="color: #4070a0">&quot;xonsh&quot;</span>: <span style="color: #007020; font-weight: bold">True</span>}\n    <span style="color: #007020; font-weight: bold">return</span> d<span style="color: #666666">.</span>get(<span style="color: #4070a0">&quot;xonsh&quot;</span>) <span style="color: #007020; font-weight: bold">and</span> you\n\n<span style="color: #60a0b0; font-style: italic"># This is a comment</span>\n<span style="color: #007020; font-weight: bold">!</span>[<span style="color: #007020">env</span> |<span style="color: #bbbbbb"> </span><span style="color: #007020">uniq</span> |<span style="color: #bbbbbb"> </span><span style="color: #007020">sort</span> |<span style="color: #bbbbbb"> </span><span style="color: #007020">grep</span> PATH]\n</code></pre></div>',s:"friendly"},{W:'<div class="highlight" style="background: #111111; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #ffffff; line-height: 125%"><span></span><code><span style="color: #fb660a; font-weight: bold">import</span> <span style="color: #ffffff">sys</span>\n<span style="color: #ffffff">echo</span> <span style="color: #0086d2">&quot;Welcome $USER on&quot;</span> <span style="color: #fb660a; font-weight: bold">@</span><span style="color: #ffffff">(sys.platform)</span>\n\n<span style="color: #fb660a; font-weight: bold">def</span> <span style="color: #ff0086; font-weight: bold">func</span><span style="color: #ffffff">(x=</span><span style="color: #0086f7; font-weight: bold">42</span><span style="color: #ffffff">):</span>\n    <span style="color: #ffffff">d</span> <span style="color: #ffffff">=</span> <span style="color: #ffffff">{</span><span style="color: #0086d2">&quot;xonsh&quot;</span><span style="color: #ffffff">:</span> <span style="color: #fb660a; font-weight: bold">True</span><span style="color: #ffffff">}</span>\n    <span style="color: #fb660a; font-weight: bold">return</span> <span style="color: #ffffff">d.get(</span><span style="color: #0086d2">&quot;xonsh&quot;</span><span style="color: #ffffff">)</span> <span style="color: #ffffff">and</span> <span style="color: #ffffff">you</span>\n\n<span style="color: #008800; font-style: italic; background-color: #0f140f"># This is a comment</span>\n<span style="color: #fb660a; font-weight: bold">!</span><span style="color: #ffffff">[env</span> <span style="color: #ffffff">|</span><span style="color: #888888"> </span><span style="color: #ffffff">uniq</span> <span style="color: #ffffff">|</span><span style="color: #888888"> </span><span style="color: #ffffff">sort</span> <span style="color: #ffffff">|</span><span style="color: #888888"> </span><span style="color: #ffffff">grep</span> PATH<span style="color: #ffffff">]</span>\n</code></pre></div>',s:"fruity"},{W:'<div class="highlight" style="background: #ffffff; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #000000; line-height: 125%"><span></span><code><span style="color: #0000FF">import</span> sys\necho <span style="color: #009C00">&quot;Welcome $USER on&quot;</span> <span style="color: #0000FF">@</span>(sys.platform)\n\n<span style="color: #0000FF">def</span> <span style="color: #C34E00">func</span>(x=42):\n    d = {<span style="color: #009C00">&quot;xonsh&quot;</span>: <span style="color: #0000FF">True</span>}\n    <span style="color: #0000FF">return</span> d.get(<span style="color: #009C00">&quot;xonsh&quot;</span>) and you\n\n<span style="color: #FF0000; font-style: italic"># This is a comment</span>\n<span style="color: #0000FF">!</span>[env | uniq | sort | grep PATH]\n</code></pre></div>',s:"igor"},{W:'<div class="highlight" style="background: #ffffff; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #000000; line-height: 125%"><span></span><code><span style="color: #2838b0">import</span> <span style="color: #289870">sys</span>\necho <span style="color: #b83838">&quot;Welcome $USER on&quot;</span> <span style="color: #2838b0">@</span><span style="color: #888888">(</span>sys<span style="color: #666666">.</span>platform<span style="color: #888888">)</span>\n\n<span style="color: #2838b0">def</span> <span style="color: #785840">func</span><span style="color: #888888">(</span>x<span style="color: #666666">=</span><span style="color: #444444">42</span><span style="color: #888888">):</span>\n    d <span style="color: #666666">=</span> <span style="color: #888888">{</span><span style="color: #b83838">&quot;xonsh&quot;</span><span style="color: #888888">:</span> <span style="color: #444444; font-style: italic">True</span><span style="color: #888888">}</span>\n    <span style="color: #2838b0">return</span> d<span style="color: #666666">.</span>get<span style="color: #888888">(</span><span style="color: #b83838">&quot;xonsh&quot;</span><span style="color: #888888">)</span> <span style="color: #a848a8">and</span> you\n\n<span style="color: #888888; font-style: italic"># This is a comment</span>\n<span style="color: #2838b0">!</span><span style="color: #888888">[</span><span style="color: #388038">env</span> <span style="color: #888888">|</span><span style="color: #a89028"> </span><span style="color: #388038">uniq</span> <span style="color: #888888">|</span><span style="color: #a89028"> </span><span style="color: #388038">sort</span> <span style="color: #888888">|</span><span style="color: #a89028"> </span><span style="color: #388038">grep</span> PATH<span style="color: #888888">]</span>\n</code></pre></div>',s:"lovelace"},{W:'<div class="highlight" style="background: #f0f3f3; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #0f0c0c; line-height: 125%"><span></span><code><span style="color: #006699; font-weight: bold">import</span> <span style="color: #00CCFF; font-weight: bold">sys</span>\necho <span style="color: #CC3300">&quot;Welcome $USER on&quot;</span> <span style="color: #006699; font-weight: bold">@</span>(sys<span style="color: #555555">.</span>platform)\n\n<span style="color: #006699; font-weight: bold">def</span> <span style="color: #CC00FF">func</span>(x<span style="color: #555555">=</span><span style="color: #FF6600">42</span>):\n    d <span style="color: #555555">=</span> {<span style="color: #CC3300">&quot;xonsh&quot;</span>: <span style="color: #006699; font-weight: bold">True</span>}\n    <span style="color: #006699; font-weight: bold">return</span> d<span style="color: #555555">.</span>get(<span style="color: #CC3300">&quot;xonsh&quot;</span>) <span style="color: #000000; font-weight: bold">and</span> you\n\n<span style="color: #0099FF; font-style: italic"># This is a comment</span>\n<span style="color: #006699; font-weight: bold">!</span>[<span style="color: #336666">env</span> |<span style="color: #bbbbbb"> </span><span style="color: #336666">uniq</span> |<span style="color: #bbbbbb"> </span><span style="color: #336666">sort</span> |<span style="color: #bbbbbb"> </span><span style="color: #336666">grep</span> PATH]\n</code></pre></div>',s:"manni"},{W:'<div class="highlight" style="background: #272822; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #f8f8f2; line-height: 125%"><span></span><code><span style="color: #f92672">import</span> <span style="color: #f8f8f2">sys</span>\n<span style="color: #f8f8f2">echo</span> <span style="color: #e6db74">&quot;Welcome $USER on&quot;</span> <span style="color: #66d9ef">@</span><span style="color: #f8f8f2">(sys</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">platform)</span>\n\n<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">func</span><span style="color: #f8f8f2">(x</span><span style="color: #f92672">=</span><span style="color: #ae81ff">42</span><span style="color: #f8f8f2">):</span>\n    <span style="color: #f8f8f2">d</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">{</span><span style="color: #e6db74">&quot;xonsh&quot;</span><span style="color: #f8f8f2">:</span> <span style="color: #66d9ef">True</span><span style="color: #f8f8f2">}</span>\n    <span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">d</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">get(</span><span style="color: #e6db74">&quot;xonsh&quot;</span><span style="color: #f8f8f2">)</span> <span style="color: #f92672">and</span> <span style="color: #f8f8f2">you</span>\n\n<span style="color: #75715e"># This is a comment</span>\n<span style="color: #66d9ef">!</span><span style="color: #f8f8f2">[env</span> <span style="color: #f8f8f2">| uniq</span> <span style="color: #f8f8f2">| sort</span> <span style="color: #f8f8f2">| grep</span> PATH<span style="color: #f8f8f2">]</span>\n</code></pre></div>',s:"monokai"},{W:'<div class="highlight" style="background: #ffffff; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #000000; line-height: 125%"><span></span><code><span style="color: #228899; font-weight: bold">import</span> <span style="color: #0e84b5; font-weight: bold">sys</span>\necho <span style="background-color: #e0e0ff">&quot;Welcome $USER on&quot;</span> <span style="color: #228899; font-weight: bold">@</span>(sys<span style="color: #333333">.</span>platform)\n\n<span style="color: #228899; font-weight: bold">def</span> <span style="color: #55eedd; font-weight: bold">func</span>(x<span style="color: #333333">=</span><span style="color: #6666ff; font-weight: bold">42</span>):\n    d <span style="color: #333333">=</span> {<span style="background-color: #e0e0ff">&quot;xonsh&quot;</span>: <span style="color: #228899; font-weight: bold">True</span>}\n    <span style="color: #228899; font-weight: bold">return</span> d<span style="color: #333333">.</span>get(<span style="background-color: #e0e0ff">&quot;xonsh&quot;</span>) <span style="color: #000000; font-weight: bold">and</span> you\n\n<span style="color: #666666; font-style: italic"># This is a comment</span>\n<span style="color: #228899; font-weight: bold">!</span>[<span style="color: #007722">env</span> |<span style="color: #bbbbbb"> </span><span style="color: #007722">uniq</span> |<span style="color: #bbbbbb"> </span><span style="color: #007722">sort</span> |<span style="color: #bbbbbb"> </span><span style="color: #007722">grep</span> PATH]\n</code></pre></div>',s:"murphy"},{W:'<div class="highlight" style="background: #202020; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #d0d0d0; line-height: 125%"><span></span><code><span style="color: #6ab825; font-weight: bold">import</span> <span style="color: #447fcf; text-decoration: underline">sys</span>\n<span style="color: #d0d0d0">echo</span> <span style="color: #ed9d13">&quot;Welcome $USER on&quot;</span> <span style="color: #6ab825; font-weight: bold">@</span><span style="color: #d0d0d0">(sys.platform)</span>\n\n<span style="color: #6ab825; font-weight: bold">def</span> <span style="color: #447fcf">func</span><span style="color: #d0d0d0">(x=</span><span style="color: #3677a9">42</span><span style="color: #d0d0d0">):</span>\n    <span style="color: #d0d0d0">d</span> <span style="color: #d0d0d0">=</span> <span style="color: #d0d0d0">{</span><span style="color: #ed9d13">&quot;xonsh&quot;</span><span style="color: #d0d0d0">:</span> <span style="color: #6ab825; font-weight: bold">True</span><span style="color: #d0d0d0">}</span>\n    <span style="color: #6ab825; font-weight: bold">return</span> <span style="color: #d0d0d0">d.get(</span><span style="color: #ed9d13">&quot;xonsh&quot;</span><span style="color: #d0d0d0">)</span> <span style="color: #6ab825; font-weight: bold">and</span> <span style="color: #d0d0d0">you</span>\n\n<span style="color: #999999; font-style: italic"># This is a comment</span>\n<span style="color: #6ab825; font-weight: bold">!</span><span style="color: #d0d0d0">[</span><span style="color: #24909d">env</span> <span style="color: #d0d0d0">|</span><span style="color: #666666"> </span><span style="color: #24909d">uniq</span> <span style="color: #d0d0d0">|</span><span style="color: #666666"> </span><span style="color: #24909d">sort</span> <span style="color: #d0d0d0">|</span><span style="color: #666666"> </span><span style="color: #24909d">grep</span> PATH<span style="color: #d0d0d0">]</span>\n</code></pre></div>',s:"native"},{W:'<div class="highlight" style="background: #2f1e2e; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #e7e9db; line-height: 125%"><span></span><code><span style="color: #5bc4bf">import</span> <span style="color: #fec418">sys</span>\n<span style="color: #e7e9db">echo</span> <span style="color: #48b685">&quot;Welcome $USER on&quot;</span> <span style="color: #815ba4">@</span><span style="color: #e7e9db">(sys</span><span style="color: #5bc4bf">.</span><span style="color: #e7e9db">platform)</span>\n\n<span style="color: #815ba4">def</span> <span style="color: #06b6ef">func</span><span style="color: #e7e9db">(x</span><span style="color: #5bc4bf">=</span><span style="color: #f99b15">42</span><span style="color: #e7e9db">):</span>\n    <span style="color: #e7e9db">d</span> <span style="color: #5bc4bf">=</span> <span style="color: #e7e9db">{</span><span style="color: #48b685">&quot;xonsh&quot;</span><span style="color: #e7e9db">:</span> <span style="color: #815ba4">True</span><span style="color: #e7e9db">}</span>\n    <span style="color: #815ba4">return</span> <span style="color: #e7e9db">d</span><span style="color: #5bc4bf">.</span><span style="color: #e7e9db">get(</span><span style="color: #48b685">&quot;xonsh&quot;</span><span style="color: #e7e9db">)</span> <span style="color: #5bc4bf">and</span> <span style="color: #e7e9db">you</span>\n\n<span style="color: #776e71"># This is a comment</span>\n<span style="color: #815ba4">!</span><span style="color: #e7e9db">[env</span> <span style="color: #e7e9db">| uniq</span> <span style="color: #e7e9db">| sort</span> <span style="color: #e7e9db">| grep</span> PATH<span style="color: #e7e9db">]</span>\n</code></pre></div>',s:"paraiso-dark"},{W:'<div class="highlight" style="background: #e7e9db; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #2f1e2e; line-height: 125%"><span></span><code><span style="color: #5bc4bf">import</span> <span style="color: #fec418">sys</span>\n<span style="color: #2f1e2e">echo</span> <span style="color: #48b685">&quot;Welcome $USER on&quot;</span> <span style="color: #815ba4">@</span><span style="color: #2f1e2e">(sys</span><span style="color: #5bc4bf">.</span><span style="color: #2f1e2e">platform)</span>\n\n<span style="color: #815ba4">def</span> <span style="color: #06b6ef">func</span><span style="color: #2f1e2e">(x</span><span style="color: #5bc4bf">=</span><span style="color: #f99b15">42</span><span style="color: #2f1e2e">):</span>\n    <span style="color: #2f1e2e">d</span> <span style="color: #5bc4bf">=</span> <span style="color: #2f1e2e">{</span><span style="color: #48b685">&quot;xonsh&quot;</span><span style="color: #2f1e2e">:</span> <span style="color: #815ba4">True</span><span style="color: #2f1e2e">}</span>\n    <span style="color: #815ba4">return</span> <span style="color: #2f1e2e">d</span><span style="color: #5bc4bf">.</span><span style="color: #2f1e2e">get(</span><span style="color: #48b685">&quot;xonsh&quot;</span><span style="color: #2f1e2e">)</span> <span style="color: #5bc4bf">and</span> <span style="color: #2f1e2e">you</span>\n\n<span style="color: #8d8687"># This is a comment</span>\n<span style="color: #815ba4">!</span><span style="color: #2f1e2e">[env</span> <span style="color: #2f1e2e">| uniq</span> <span style="color: #2f1e2e">| sort</span> <span style="color: #2f1e2e">| grep</span> PATH<span style="color: #2f1e2e">]</span>\n</code></pre></div>',s:"paraiso-light"},{W:'<div class="highlight" style="background: #ffffff; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #000000; line-height: 125%"><span></span><code><span style="color: #008800; font-weight: bold">import</span> <span style="color: #bb0066; font-weight: bold">sys</span>\necho <span style="color: #dd2200; background-color: #fff0f0">&quot;Welcome $USER on&quot;</span> <span style="color: #008800; font-weight: bold">@</span>(sys.platform)\n\n<span style="color: #008800; font-weight: bold">def</span> <span style="color: #0066bb; font-weight: bold">func</span>(x=<span style="color: #0000DD; font-weight: bold">42</span>):\n    d = {<span style="color: #dd2200; background-color: #fff0f0">&quot;xonsh&quot;</span>: <span style="color: #008800; font-weight: bold">True</span>}\n    <span style="color: #008800; font-weight: bold">return</span> d.get(<span style="color: #dd2200; background-color: #fff0f0">&quot;xonsh&quot;</span>) <span style="color: #008800">and</span> you\n\n<span style="color: #888888"># This is a comment</span>\n<span style="color: #008800; font-weight: bold">!</span>[<span style="color: #003388">env</span> |<span style="color: #bbbbbb"> </span><span style="color: #003388">uniq</span> |<span style="color: #bbbbbb"> </span><span style="color: #003388">sort</span> |<span style="color: #bbbbbb"> </span><span style="color: #003388">grep</span> PATH]\n</code></pre></div>',s:"pastie"},{W:'<div class="highlight" style="background: #eeeedd; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #111122; line-height: 125%"><span></span><code><span style="color: #8B008B; font-weight: bold">import</span> <span style="color: #008b45; text-decoration: underline">sys</span>\necho <span style="color: #CD5555">&quot;Welcome $USER on&quot;</span> <span style="color: #8B008B; font-weight: bold">@</span>(sys.platform)\n\n<span style="color: #8B008B; font-weight: bold">def</span> <span style="color: #008b45">func</span>(x=<span style="color: #B452CD">42</span>):\n    d = {<span style="color: #CD5555">&quot;xonsh&quot;</span>: <span style="color: #8B008B; font-weight: bold">True</span>}\n    <span style="color: #8B008B; font-weight: bold">return</span> d.get(<span style="color: #CD5555">&quot;xonsh&quot;</span>) <span style="color: #8B008B">and</span> you\n\n<span style="color: #228B22"># This is a comment</span>\n<span style="color: #8B008B; font-weight: bold">!</span>[<span style="color: #658b00">env</span> |<span style="color: #bbbbbb"> </span><span style="color: #658b00">uniq</span> |<span style="color: #bbbbbb"> </span><span style="color: #658b00">sort</span> |<span style="color: #bbbbbb"> </span><span style="color: #658b00">grep</span> PATH]\n</code></pre></div>',s:"perldoc"},{W:'<div class="highlight" style="background: #ffffff; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #4d4d4d; line-height: 125%"><span></span><code><span style="color: #2c5dcd; font-weight: bold">import</span> sys\necho <span style="color: #00cc66">&quot;Welcome $USER on&quot;</span> <span style="color: #2c5dcd; font-weight: bold">@</span>(sys<span style="color: #2c5dcd">.</span>platform)\n\n<span style="color: #2c5dcd; font-weight: bold">def</span> <span style="color: #ff8000; font-weight: bold">func</span>(x<span style="color: #2c5dcd">=</span><span style="color: #5918bb; font-weight: bold">42</span>):\n    d <span style="color: #2c5dcd">=</span> {<span style="color: #00cc66">&quot;xonsh&quot;</span>: <span style="color: #2c5dcd; font-weight: bold">True</span>}\n    <span style="color: #2c5dcd; font-weight: bold">return</span> d<span style="color: #2c5dcd">.</span>get(<span style="color: #00cc66">&quot;xonsh&quot;</span>) <span style="color: #2c5dcd; font-weight: bold">and</span> you\n\n<span style="color: #0080ff; font-style: italic"># This is a comment</span>\n<span style="color: #2c5dcd; font-weight: bold">!</span>[<span style="color: #5918bb; font-weight: bold">env</span> |<span style="color: #cbcbcb"> </span><span style="color: #5918bb; font-weight: bold">uniq</span> |<span style="color: #cbcbcb"> </span><span style="color: #5918bb; font-weight: bold">sort</span> |<span style="color: #cbcbcb"> </span><span style="color: #5918bb; font-weight: bold">grep</span> PATH]\n</code></pre></div>',s:"rainbow_dash"},{W:'<div class="highlight" style="background: #000000; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #ffffff; line-height: 125%"><span></span><code><span style="color: #ff0000">import</span> sys\necho <span style="color: #87ceeb">&quot;Welcome $USER on&quot;</span> <span style="color: #ff0000">@</span>(sys.platform)\n\n<span style="color: #ff0000">def</span> <span style="color: #ffff00">func</span>(x=42):\n    d = {<span style="color: #87ceeb">&quot;xonsh&quot;</span>: <span style="color: #ff0000">True</span>}\n    <span style="color: #ff0000">return</span> d.get(<span style="color: #87ceeb">&quot;xonsh&quot;</span>) and you\n\n<span style="color: #00ff00"># This is a comment</span>\n<span style="color: #ff0000">!</span>[env | uniq | sort | grep PATH]\n</code></pre></div>',s:"rrt"},{W:'<div class="highlight" style="background: #f8f8f8; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #070707; line-height: 125%"><span></span><code><span style="color: #204a87; font-weight: bold">import</span> <span style="color: #000000">sys</span>\n<span style="color: #000000">echo</span> <span style="color: #4e9a06">&quot;Welcome $USER on&quot;</span> <span style="color: #204a87; font-weight: bold">@</span><span style="color: #000000; font-weight: bold">(</span><span style="color: #000000">sys</span><span style="color: #ce5c00; font-weight: bold">.</span><span style="color: #000000">platform</span><span style="color: #000000; font-weight: bold">)</span>\n\n<span style="color: #204a87; font-weight: bold">def</span> <span style="color: #000000">func</span><span style="color: #000000; font-weight: bold">(</span><span style="color: #000000">x</span><span style="color: #ce5c00; font-weight: bold">=</span><span style="color: #0000cf; font-weight: bold">42</span><span style="color: #000000; font-weight: bold">):</span>\n    <span style="color: #000000">d</span> <span style="color: #ce5c00; font-weight: bold">=</span> <span style="color: #000000; font-weight: bold">{</span><span style="color: #4e9a06">&quot;xonsh&quot;</span><span style="color: #000000; font-weight: bold">:</span> <span style="color: #204a87; font-weight: bold">True</span><span style="color: #000000; font-weight: bold">}</span>\n    <span style="color: #204a87; font-weight: bold">return</span> <span style="color: #000000">d</span><span style="color: #ce5c00; font-weight: bold">.</span><span style="color: #000000">get</span><span style="color: #000000; font-weight: bold">(</span><span style="color: #4e9a06">&quot;xonsh&quot;</span><span style="color: #000000; font-weight: bold">)</span> <span style="color: #204a87; font-weight: bold">and</span> <span style="color: #000000">you</span>\n\n<span style="color: #8f5902; font-style: italic"># This is a comment</span>\n<span style="color: #204a87; font-weight: bold">!</span><span style="color: #000000; font-weight: bold">[</span><span style="color: #204a87">env</span> <span style="color: #000000; font-weight: bold">|</span><span style="color: #f8f8f8; text-decoration: underline"> </span><span style="color: #204a87">uniq</span> <span style="color: #000000; font-weight: bold">|</span><span style="color: #f8f8f8; text-decoration: underline"> </span><span style="color: #204a87">sort</span> <span style="color: #000000; font-weight: bold">|</span><span style="color: #f8f8f8; text-decoration: underline"> </span><span style="color: #204a87">grep</span> PATH<span style="color: #000000; font-weight: bold">]</span>\n</code></pre></div>',s:"tango"},{W:'<div class="highlight" style="background: #ffffff; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #000000; line-height: 125%"><span></span><code><span style="font-weight: bold">import</span> <span style="color: #555555">sys</span>\necho <span style="color: #bb8844">&quot;Welcome $USER on&quot;</span> <span style="font-weight: bold">@</span>(sys<span style="font-weight: bold">.</span>platform)\n\n<span style="font-weight: bold">def</span> <span style="color: #990000; font-weight: bold">func</span>(x<span style="font-weight: bold">=</span><span style="color: #009999">42</span>):\n    d <span style="font-weight: bold">=</span> {<span style="color: #bb8844">&quot;xonsh&quot;</span>: <span style="font-weight: bold">True</span>}\n    <span style="font-weight: bold">return</span> d<span style="font-weight: bold">.</span>get(<span style="color: #bb8844">&quot;xonsh&quot;</span>) <span style="font-weight: bold">and</span> you\n\n<span style="color: #999988; font-style: italic"># This is a comment</span>\n<span style="font-weight: bold">!</span>[<span style="color: #999999">env</span> |<span style="color: #bbbbbb"> </span><span style="color: #999999">uniq</span> |<span style="color: #bbbbbb"> </span><span style="color: #999999">sort</span> |<span style="color: #bbbbbb"> </span><span style="color: #999999">grep</span> PATH]\n</code></pre></div>',s:"trac"},{W:'<div class="highlight" style="background: #000000; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #cccccc; line-height: 125%"><span></span><code><span style="color: #cd00cd">import</span> <span style="color: #cccccc">sys</span>\n<span style="color: #cccccc">echo</span> <span style="color: #cd0000">&quot;Welcome $USER on&quot;</span> <span style="color: #cdcd00">@</span><span style="color: #cccccc">(sys</span><span style="color: #3399cc">.</span><span style="color: #cccccc">platform)</span>\n\n<span style="color: #cdcd00">def</span> <span style="color: #cccccc">func(x</span><span style="color: #3399cc">=</span><span style="color: #cd00cd">42</span><span style="color: #cccccc">):</span>\n    <span style="color: #cccccc">d</span> <span style="color: #3399cc">=</span> <span style="color: #cccccc">{</span><span style="color: #cd0000">&quot;xonsh&quot;</span><span style="color: #cccccc">:</span> <span style="color: #cdcd00">True</span><span style="color: #cccccc">}</span>\n    <span style="color: #cdcd00">return</span> <span style="color: #cccccc">d</span><span style="color: #3399cc">.</span><span style="color: #cccccc">get(</span><span style="color: #cd0000">&quot;xonsh&quot;</span><span style="color: #cccccc">)</span> <span style="color: #cdcd00">and</span> <span style="color: #cccccc">you</span>\n\n<span style="color: #000080"># This is a comment</span>\n<span style="color: #cdcd00">!</span><span style="color: #cccccc">[</span><span style="color: #cd00cd">env</span> <span style="color: #cccccc">| </span><span style="color: #cd00cd">uniq</span> <span style="color: #cccccc">| </span><span style="color: #cd00cd">sort</span> <span style="color: #cccccc">| </span><span style="color: #cd00cd">grep</span> PATH<span style="color: #cccccc">]</span>\n</code></pre></div>',s:"vim"},{W:'<div class="highlight" style="background: #ffffff; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #000000; line-height: 125%"><span></span><code><span style="color: #0000ff">import</span> sys\necho <span style="color: #a31515">&quot;Welcome $USER on&quot;</span> <span style="color: #0000ff">@</span>(sys.platform)\n\n<span style="color: #0000ff">def</span> func(x=42):\n    d = {<span style="color: #a31515">&quot;xonsh&quot;</span>: <span style="color: #0000ff">True</span>}\n    <span style="color: #0000ff">return</span> d.get(<span style="color: #a31515">&quot;xonsh&quot;</span>) <span style="color: #0000ff">and</span> you\n\n<span style="color: #008000"># This is a comment</span>\n<span style="color: #0000ff">!</span>[env | uniq | sort | grep PATH]\n</code></pre></div>',s:"vs"},{W:'<div class="highlight" style="background: #ffffff; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #000000; line-height: 125%"><span></span><code><span style="color: #A90D91">import</span> <span style="color: #000000">sys</span>\n<span style="color: #000000">echo</span> <span style="color: #C41A16">&quot;Welcome $USER on&quot;</span> <span style="color: #A90D91">@</span>(<span style="color: #000000">sys.platform</span>)\n\n<span style="color: #A90D91">def</span> <span style="color: #000000">func</span>(<span style="color: #000000">x=</span><span style="color: #1C01CE">42</span>):\n    <span style="color: #000000">d</span> <span style="color: #000000">=</span> {<span style="color: #C41A16">&quot;xonsh&quot;</span>: <span style="color: #A90D91">True</span>}\n    <span style="color: #A90D91">return</span> <span style="color: #000000">d.get</span>(<span style="color: #C41A16">&quot;xonsh&quot;</span>) <span style="color: #000000">and</span> <span style="color: #000000">you</span>\n\n<span style="color: #177500"># This is a comment</span>\n<span style="color: #A90D91">!</span>[<span style="color: #A90D91">env</span> | <span style="color: #A90D91">uniq</span> | <span style="color: #A90D91">sort</span> | <span style="color: #A90D91">grep</span> PATH]\n</code></pre></div>',s:"xcode"}]),ue=C([{W:'<div class="highlight" style="background: #ffffff; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #000000; line-height: 125%"><span></span><code><span style="">(env) </span><span style="color: #007f00; font-weight: bold">lou@carcolh</span><span style="color: #00007f; font-weight: bold"> ~/snail/stuff</span><span style="color: #ff0000; font-weight: bold"> branch</span><span style=""> </span><span style="color: #00007f; font-weight: bold">$</span><span style=""> </span></code></pre></div>',s:"default",dz:"{env_name}{BOLD_GREEN}{user}@{hostname}{BOLD_BLUE} {cwd}{branch_color}{curr_branch: {}}{NO_COLOR} {BOLD_BLUE}{prompt_end}{NO_COLOR} "},{W:'<div class="highlight" style="background: #ffffff; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #000000; line-height: 125%"><span></span><code><span style="color: #007f00; font-weight: bold">lou@carcolh</span><span style="color: #00007f; font-weight: bold"> ~/snail/stuff</span><span style="">&gt; </span></code></pre></div>',s:"debian chroot",dz:"{BOLD_GREEN}{user}@{hostname}{BOLD_BLUE} {cwd}{NO_COLOR}> "},{W:'<div class="highlight" style="background: #ffffff; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #000000; line-height: 125%"><span></span><code><span style="color: #007f00; font-weight: bold">stuff</span><span style=""> ) </span></code></pre></div>',s:"minimalist",dz:"{BOLD_GREEN}{cwd_base}{NO_COLOR} ) "},{W:'<div class="highlight" style="background: #ffffff; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #000000; line-height: 125%"><span></span><code><span style="">(env) </span><span style="color: #007f00; font-weight: bold">lou</span><span style="">@carcolh:</span><span style="color: #007f00; font-weight: bold">~/snail/stuff</span><span style="">|</span><span style="color: #007f7f">branch|</span><span style="color: #00007f; font-weight: bold">+2</span><span style="">⚑7\n</span><span style="color: #ff0000; font-weight: bold">➤</span><span style=""> </span></code></pre></div>',s:"terlar",dz:"{env_name}{BOLD_GREEN}{user}{NO_COLOR}@{hostname}:{BOLD_GREEN}{cwd}{NO_COLOR}|{gitstatus}\n{BOLD_INTENSE_RED}➤{NO_COLOR} "},{W:'<div class="highlight" style="background: #ffffff; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #000000; line-height: 125%"><span></span><code><span style="">(env) </span><span style="color: #007f00; font-weight: bold">lou@carcolh</span><span style="color: #00007f; font-weight: bold"> ~/snail/stuff</span><span style="color: #ff0000; font-weight: bold"> </span><span style="color: #007f7f">branch|</span><span style="color: #00007f; font-weight: bold">+2</span><span style="">⚑7 </span><span style="color: #00007f; font-weight: bold">$</span><span style=""> </span></code></pre></div>',s:"default with git status",dz:"{env_name}{BOLD_GREEN}{user}@{hostname}{BOLD_BLUE} {cwd}{branch_color}{gitstatus: {}}{NO_COLOR} {BOLD_BLUE}{prompt_end}{NO_COLOR} "},{W:'<div class="highlight" style="background: #ffffff; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #000000; line-height: 125%"><span></span><code><span style="color: #ff0000; font-weight: bold">➜ </span><span style="color: #007f7f">stuff branch|</span><span style="color: #00007f; font-weight: bold">+2</span><span style="">⚑7 </span></code></pre></div>',s:"robbyrussell",dz:"{BOLD_INTENSE_RED}➜ {CYAN}{cwd_base} {gitstatus}{NO_COLOR} "},{W:'<div class="highlight" style="background: #ffffff; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #000000; line-height: 125%"><span></span><code><span style="">$ </span></code></pre></div>',s:"just a dollar",dz:"$ "},{W:'<div class="highlight" style="background: #ffffff; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #000000; line-height: 125%"><span></span><code><span style="color: #ff0000">lou</span><span style=""> at </span><span style="color: #ff00ff">carcolh</span><span style=""> in </span><span style="color: #007f00; font-weight: bold">~/snail/stuff</span><span style="">\n↪ </span></code></pre></div>',s:"simple pythonista",dz:"{INTENSE_RED}{user}{NO_COLOR} at {INTENSE_PURPLE}{hostname}{NO_COLOR} in {BOLD_GREEN}{cwd}{NO_COLOR}\n↪ "},{W:'<div class="highlight" style="background: #ffffff; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #000000; line-height: 125%"><span></span><code><span style="">[15:56:07] </span><span style="color: #7f7fe0">(env)  </span><span style="color: #00007f; font-weight: bold">lou@carcolh </span><span style="color: #007f00; font-weight: bold">~/snail/stuff </span><span style="color: #007f7f">branch|</span><span style="color: #00007f; font-weight: bold">+2</span><span style="">⚑7\n&gt; </span></code></pre></div>',s:"informative",dz:"[{localtime}] {YELLOW}{env_name} {BOLD_BLUE}{user}@{hostname} {BOLD_GREEN}{cwd} {gitstatus}{NO_COLOR}\n> "},{W:'<div class="highlight" style="background: #ffffff; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #000000; line-height: 125%"><span></span><code><span style="color: #7f7fe0">(env)  </span><span style="color: #007f00; font-weight: bold">~/snail/stuff </span><span style="color: #007f7f">branch|</span><span style="color: #00007f; font-weight: bold">+2</span><span style="">⚑7 $ </span></code></pre></div>',s:"informative Version Control",dz:"{YELLOW}{env_name} {BOLD_GREEN}{cwd} {gitstatus}{NO_COLOR} {prompt_end} "},{W:'<div class="highlight" style="background: #ffffff; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #000000; line-height: 125%"><span></span><code><span style="">lou@carcolh </span><span style="color: #007f00; font-weight: bold">~/snail/stuff</span><span style="">&gt; </span></code></pre></div>',s:"classic",dz:"{user}@{hostname} {BOLD_GREEN}{cwd}{NO_COLOR}> "},{W:'<div class="highlight" style="background: #ffffff; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #000000; line-height: 125%"><span></span><code><span style="color: #007f7f">branch|</span><span style="color: #00007f; font-weight: bold">+2</span><span style="">⚑7 lou@carcolh </span><span style="color: #007f00; font-weight: bold">~/snail/stuff</span><span style="">&gt; </span></code></pre></div>',s:"classic with git status",dz:"{gitstatus} {NO_COLOR}{user}@{hostname} {BOLD_GREEN}{cwd}{NO_COLOR}> "},{W:'<div class="highlight" style="background: #ffffff; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #000000; line-height: 125%"><span></span><code><span style="color: #7f7fe0">lou@</span><span style="color: #7f007f">carcolh</span><span style="color: #007f00; font-weight: bold">~/snail/stuff</span><span style="">&gt; </span></code></pre></div>',s:"screen savvy",dz:"{YELLOW}{user}@{PURPLE}{hostname}{BOLD_GREEN}{cwd}{NO_COLOR}> "},{W:'<div class="highlight" style="background: #ffffff; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #000000; line-height: 125%"><span></span><code><span style="color: #007f7f">~/snail/stuff </span><span style="color: #ff0000">❯</span><span style="color: #ffff00">❯</span><span style="color: #00ff00">❯</span><span style=""> </span></code></pre></div>',s:"sorin",dz:"{CYAN}{cwd} {INTENSE_RED}❯{INTENSE_YELLOW}❯{INTENSE_GREEN}❯{NO_COLOR} "},{W:'<div class="highlight" style="background: #ffffff; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #000000; line-height: 125%"><span></span><code><span style="">❰</span><span style="color: #00ff00">lou</span><span style="">❙</span><span style="color: #7f7fe0">~/snail/stuff</span><span style="">(env) ❱</span><span style="color: #007f7f">branch|</span><span style="color: #00007f; font-weight: bold">+2</span><span style="">⚑7≻ </span></code></pre></div>',s:"acidhub",dz:"❰{INTENSE_GREEN}{user}{NO_COLOR}❙{YELLOW}{cwd}{NO_COLOR}{env_name}❱{gitstatus}≻ "},{W:'<div class="highlight" style="background: #ffffff; border-style: solid; border-radius: 5px"><pre style="margin: 0em; padding: 0.5em 0.1em; color: #000000; line-height: 125%"><span></span><code><span style="color: #00ff00">┬─[</span><span style="color: #7f7fe0">lou</span><span style="">@</span><span style="color: #00007f">carcolh</span><span style="">:~/snail/stuff</span><span style="color: #00ff00">]─[15:56:07]─[</span><span style="">G:</span><span style="color: #00ff00">branch=]\n╰─&gt;</span><span style="color: #ff0000">$</span><span style=""> </span></code></pre></div>',s:"nim",dz:"{INTENSE_GREEN}┬─[{YELLOW}{user}{NO_COLOR}@{BLUE}{hostname}{NO_COLOR}:{cwd}{INTENSE_GREEN}]─[{localtime}]─[{NO_COLOR}G:{INTENSE_GREEN}{curr_branch}=]\n{INTENSE_GREEN}╰─>{INTENSE_RED}{prompt_end}{NO_COLOR} "}]),pe=function(n){return{$:0,a:n}},fe={$:1},de=c(function(n,r){return r.$?n:r.a}),be=function(n){return!n.$},ye=e(function(n,r,e,t){return{$:0,a:n,b:r,c:e,d:t}}),he=F,ge=c(function(n,r){return U(r)/U(n)}),me=he(f(ge,2,32)),ve=[],we=d(ye,0,me,ve,ve),qe=g,xe=o(function(n,r,e){for(;;){if(!e.b)return r;var t=e.b,o=n,s=f(n,e.a,r);n=o,r=s,e=t}}),Ee=function(n){return p(xe,se,N,n)},$e=c(function(n,r){for(;;){var e=f(qe,32,n),t=e.b,o=f(se,{$:0,a:e.a},r);if(!t.b)return Ee(o);n=t,r=o}}),ke=(c(function(n,r){return r(n)}),x),Ae=c(function(n,r){for(;;){var e=he(r/32);if(1===e)return f(qe,32,n).a;n=f($e,n,N),r=e}}),Te=c(function(n,r){return n(r)}),Le=I,De=c(function(n,r){return 0<E(n,r)?n:r}),Re=function(n){return n.length},Ne=c(function(n,r){if(r.f){var e=32*r.f,t=Le(f(ge,32,e-1)),o=n?Ee(r.i):r.i,s=f(Ae,o,r.f);return d(ye,Re(r.h)+e,f(De,5,t*me),s,r.h)}return d(ye,Re(r.h),me,ve,r.h)}),Se=h,Oe=t(function(n,r,e,t,o){for(;;){if(r<0)return f(Ne,!1,{i:t,f:e/32|0,h:o});var s={$:1,a:p(Se,32,r,n)};n=n,r=r-32,e=e,t=f(se,s,t),o=o}}),Ce=c(function(n,r){if(0<n){var e=n%32,t=p(Se,e,n-e,r);return b(Oe,r,n-e-32,n,N,t)}return we}),We=function(n){return{$:1,a:n}},Be=function(n){return{$:0,a:n}},_e=c(function(n,r){return{$:3,a:n,b:r}}),Fe=c(function(n,r){return{$:0,a:n,b:r}}),Ie=c(function(n,r){return{$:1,a:n,b:r}}),Ue=function(n){return{$:2,a:n}},Ge=function(n){var r=n.charCodeAt(0);return r<55296||56319<r?r:1024*(r-55296)+n.charCodeAt(1)-56320+65536},Pe=B,He=o(function(n,r,e){for(;;){if(1<=E(n,r))return e;var t=n,o=r-1,s=f(se,r,e);n=t,r=o,e=s}}),je=c(function(n,r){return p(He,n,r,N)}),Ve=c(function(n,r){return p(Pe,n,f(je,0,zr(r)-1),r)}),ze=z,Me=function(n){return n+""},Je=c(function(n,r){return f(j,n,W(r))}),Ke=function(n){var r=n.charCodeAt(0);return r?pe(r<55296||56319<r?A(L(n[0]),n.slice(1)):A(L(n[0]+n[1]),n.slice(2))):fe},Ye=c(function(n,r){return C(f(H,n,r))}),Xe=un,Ze=c(function(n,r){return"\n\n("+Me(n+1)+") "+Mr(Qe(r))}),Qe=function(n){return f(nt,n,N)},nt=c(function(n,r){n:for(;;)switch(n.$){case 0:var t=n.a,e=n.b,o=function(){var n=Ke(t);if(1===n.$)return!1;var r=n.a,e=r.b;return jr(r.a)&&f(ze,Vr,e)}(),s=e,a=f(se,o?"."+t:"['"+t+"']",r);n=s,r=a;continue n;case 1:e=n.b;var c="["+Me(n.a)+"]";s=e,a=f(se,c,r);n=s,r=a;continue n;case 2:var l=n.a;if(l.b){if(l.b.b){var i=(r.b?"The Json.Decode.oneOf at json"+f(Je,"",Ee(r)):"Json.Decode.oneOf")+" failed in the following "+Me(zr(l))+" ways:";return f(Je,"\n\n",f(se,i,f(Ve,Ze,l)))}n=s=e=l.a,r=a=r;continue n}return"Ran into a Json.Decode.oneOf with no possibilities"+(r.b?" at json"+f(Je,"",Ee(r)):"!");default:var u=n.a,p=n.b;return(i=r.b?"Problem with the value at json"+f(Je,"",Ee(r))+":\n\n    ":"Problem with the given value:\n\n")+(Mr(f(Xe,4,p))+"\n\n")+u}}),rt=On(N),et={$:-2},tt=et,ot=tt,st={aO:fe,j:2},at=A({V:f(de,{W:"",s:"unknown"},Ur(ie)),ao:fe,af:f(de,{W:"",s:"unknown",dz:"$ "},Ur(ue)),bU:st,G:ot},rt),ct=o(function(n,r,e){for(;;){if(-2===e.$)return r;var t=e.e,o=n,s=p(n,e.b,e.c,p(ct,n,r,e.d));n=o,r=s,e=t}}),lt=o(function(t,n,r){var e=r;return p(ct,o(function(n,r,e){return f(t,n,e)}),n,e)}),it=c(function(n,r){return pn(p(lt,function(e){return c(function(n,r){return r.push(fn(e(n))),r})}(n),[],r))}),ut=pn,pt=o(function(n,r,e){return r(n(e))}),ft=$,dt=c(function(n,r){n:for(;;){if(-2===r.$)return fe;var e=r.c,t=r.d,o=r.e;switch(f(ft,n,r.b)){case 0:n=n,r=t;continue n;case 1:return pe(e);default:n=n,r=o;continue n}}}),bt=t(function(n,r,e,t,o){return{$:-1,a:n,b:r,c:e,d:t,e:o}}),yt=t(function(n,r,e,t,o){if(-1!==o.$||o.a){if(-1!==t.$||t.a||-1!==t.d.$||t.d.a)return b(bt,n,r,e,t,o);var s=t.d;u=t.e;return b(bt,0,t.b,t.c,b(bt,1,s.b,s.c,s.d,s.e),b(bt,1,r,e,u,o))}var a=o.b,c=o.c,l=o.d,i=o.e;if(-1!==t.$||t.a)return b(bt,n,a,c,b(bt,0,r,e,t,l),i);var u;return b(bt,0,r,e,b(bt,1,t.b,t.c,t.d,u=t.e),b(bt,1,a,c,l,i))}),ht=o(function(n,r,e){if(-2===e.$)return b(bt,0,n,r,et,et);var t=e.a,o=e.b,s=e.c,a=e.d,c=e.e;switch(f(ft,n,o)){case 0:return b(yt,t,o,s,p(ht,n,r,a),c);case 1:return b(bt,t,o,r,a,c);default:return b(yt,t,o,s,a,p(ht,n,r,c))}}),gt=o(function(n,r,e){var t=p(ht,n,r,e);if(-1!==t.$||t.a)return t;return b(bt,1,t.b,t.c,t.d,t.e)}),mt=a(function(n,r,e,t,o,s,a){if(-1!==s.$||s.a){n:for(;-1===a.$&&1===a.a;){if(-1===a.d.$){if(1!==a.d.a)break n;return Zr(r)}return Zr(r)}return r}return b(bt,e,s.b,s.c,s.d,b(bt,0,t,o,s.e,a))}),vt=function(n){if(-1!==n.$||-1!==n.d.$)return et;var r=n.a,e=n.b,t=n.c,o=n.d,s=o.d,a=n.e;if(1!==o.a)return b(bt,r,e,t,vt(o),a);if(-1!==s.$||s.a){var c=Xr(n);if(-1!==c.$)return et;var l=c.e;return b(yt,c.a,c.b,c.c,vt(c.d),l)}return b(bt,r,e,t,vt(o),a)},wt=c(function(n,r){if(-2===r.$)return et;var e=r.a,t=r.b,o=r.c,s=r.d,a=r.e;if(E(n,t)<0){if(-1!==s.$||1!==s.a)return b(bt,e,t,o,f(wt,n,s),a);var c=s.d;if(-1!==c.$||c.a){var l=Xr(r);if(-1!==l.$)return et;var i=l.e;return b(yt,l.a,l.b,l.c,f(wt,n,l.d),i)}return b(bt,e,t,o,f(wt,n,s),a)}return f(qt,n,y(mt,n,r,e,t,o,s,a))}),qt=c(function(n,r){if(-1!==r.$)return et;var e=r.a,t=r.b,o=r.c,s=r.d,a=r.e;if(w(n,t)){var c=function(n){for(;;){if(-1!==n.$||-1!==n.d.$)return n;n=n.d}}(a);return-1!==c.$?et:b(yt,e,c.b,c.c,s,vt(a))}return b(yt,e,t,o,s,f(wt,n,a))}),xt=c(function(n,r){var e=f(wt,n,r);if(-1!==e.$||e.a)return e;return b(bt,1,e.b,e.c,e.d,e.e)}),Et=o(function(n,r,e){var t=r(f(dt,n,e));return t.$?f(xt,n,e):p(gt,n,t.a,e)}),$t=function(n){return!n.$},kt=Rn,At=Nn,Tt=c(function(n,r){return r.$?We(r.a):Be(n(r.a))}),Lt=c(function(n,r){return{$:3,a:n,b:r}}),Dt=function(n){return{$:0,a:n}},Rt=c(function(n,r){return{$:4,a:n,b:r}}),Nt={$:2},St=function(n){return{$:1,a:n}},Ot=function(n){return{$:0,a:n}},Ct={$:1},Wt=c(function(n,r){return p(_n,"arraybuffer",In,f(pt,r,n))}),Bt=c(function(n,r){return r.$?We(n(r.a)):Be(r.a)}),_t={$:2},Ft={$:1},It=c(function(n,r){switch(r.$){case 0:return We(function(n){return{$:0,a:n}}(r.a));case 1:return We(Ft);case 2:return We(_t);case 3:return We(function(n){return{$:3,a:n}}(r.a.dn));default:return f(Bt,Qr,n(r.b))}}),Ut=bn,Gt=c(function(n,r){return{dd:n,$7:r}}),Pt=Ut(f(Gt,tt,N)),Ht=hn,jt=function(e){return yn(function(n){var r=e.f;2===r.$&&r.c&&r.c(),e.f=null,n(bn(k))})},Vt=vn,zt=o(function(e,n,t){for(;;){if(!n.b)return Ut(t);var r=n.a,o=n.b;if(r.$){var s=r.a;return f(Ht,function(n){var r=s.u;return p(zt,e,o,1===r.$?t:p(gt,r.a,n,t))},Vt(p(Bn,e,kt(e),s)))}var a=r.a,c=f(dt,a,t);if(1!==c.$)return f(Ht,function(){return p(zt,e,o,f(xt,a,t))},jt(c.a));e=e,n=o,t=t}}),Mt=e(function(n,r,e,t){return f(Ht,function(n){return Ut(f(Gt,n,e))},p(zt,n,r,t.dd))}),Jt=e(function(n,r,e,t){if(t.b){var o=t.a,s=t.b;if(s.b){var a=s.a,c=s.b;if(c.b){var l=c.a,i=c.b;if(i.b){var u=i.b;return f(n,o,f(n,a,f(n,l,f(n,i.a,500<e?p(xe,n,r,Ee(u)):d(Jt,n,r,e+1,u)))))}return f(n,o,f(n,a,f(n,l,r)))}return f(n,o,f(n,a,r))}return f(n,o,r)}return r}),Kt=o(function(n,r,e){return d(Jt,n,r,0,e)}),Yt=o(function(n,r,e){var t=n(r);return t.$?e:f(se,t.a,e)}),Xt=c(function(n,r){return p(Kt,Yt(n),N,r)}),Zt=o(function(e,n,t){return f(Ht,function(r){return f(Ht,function(n){return Ut(f(e,r,n))},t)},n)}),Qt=e(function(n,r,e,t){var o=t.b;return w(r,t.a)?pe(f(kt,n,o(e))):fe}),no=o(function(n,r,e){return f(Ht,function(){return Ut(e)},re(f(Xt,p(Qt,n,r.a,r.b),e.$7)))}),ro=c(function(n,r){if(r.$){var e=r.a;return ne({R:e.R,dD:e.dD,dK:f(Fn,n,e.dK),l:e.l,q:e.q,r:e.r,u:e.u,dy:e.dy})}return function(n){return{$:0,a:n}}(r.a)}),eo=c(function(n,r){return{$:0,a:n,b:r}}),to=c(function(n,r){return f(eo,r.a,f(pt,r.b,n))});Tn.Http=Ln(Pt,Mt,no,ro,to);function oo(n){return function(n){return Do(ne({R:!1,dD:n.dD,dK:n.dK,l:n.l,q:n.q,r:n.r,u:n.u,dy:n.dy}))}({dD:n.dD,dK:n.dK,l:N,q:"POST",r:fe,u:fe,dy:n.dy})}function so(n){return oo({dD:f(Ro,"application/json",f(Xe,0,Yr(n))),dK:function(n){return f(Wt,n,It(function(){return Be(0)}))}(Kr),dy:"/save"})}function ao(n){return{$:0,a:n}}function co(n){switch(n){case 0:return fe;case 1:return pe("sm");case 2:return pe("md");case 3:return pe("lg");default:return pe("xl")}}function lo(n){var r=n.cI;return Po("text"+(f(de,"-",f(Ho,function(n){return"-"+n+"-"},co(n.cr)))+function(n){switch(n){case 1:return"center";case 0:return"left";default:return"right"}}(r)))}function io(n){return 1===n.$?Po("text-white"):f(zo,"text",n.a)}function uo(n){var r=n;return f(Uo,function(n){var r,e,t,o=p(xe,jo,Vo,n);return R(C([Po("card")]),R((t=o.A).$?N:C(t.a.$?[f(zo,"border",t.a.a)]:[f(zo,"bg",t.a.a)]),R((e=o.E).$?N:C([io(e.a)]),R((r=o.y).$?N:C([lo(r.a)]),o.aW))))}(r.ck),R(f(Xt,Jr,C([f(Ho,function(n){return n},r.bf),f(Ho,function(n){return n},r.ce)])),R(function(n){return f(Wo,function(n){return n.a},n)}(r.b6),f(Xt,Jr,C([f(Ho,function(n){return n},r.ca),f(Ho,function(n){return n},r.cd)])))))}function po(n){return""===n}function fo(n){return p(Mo,n.dh,n.cF,n.c7)}function bo(n){return-n}function yo(n){return function(r){return function(n){return f(Zo,!1,f(as,n,r))}}(function(n){return{$:12,a:n}}(n))}function ho(n){return f(bs,is(n),ps(n))}function go(n){return f(Ts,n,function(n){return{$:0,a:n}}(n))}function mo(n){return function(n){var s=n.a,a=n.b,c=!po(s);return function(n){var r=b(Rs,s,n.b,n.dh,n.cF,n.a),e=r.a,t=r.b,o=r.c;return w(e,-1)?f(Zo,!1,f(as,n,a)):p(Qo,c,0,{cF:o,d:n.d,e:n.e,b:e,dh:t,a:n.a})}}(go(n))}function vo(n){return{$:1,a:n}}function wo(n){return{$:0,a:n}}function qo(n){return n.$?function(n){return{$:1,a:n}}(n.a):function(n){return{$:0,a:n}}(n.a)}function xo(n){return L(n<0||1114111<n?"�":65535<n?String.fromCharCode(55296+Math.floor((n-=65536)/1024),n%1024+56320):String.fromCharCode(n))}function Eo(n){return f(Vs,n,"")}function $o(n){return p(aa,se,N,n)}function ko(r){if(po(r))return We("Empty strings are not valid hexadecimal strings.");var n=function(){if(f(sa,"-",r)){var n=f(de,N,function(n){if(n.b){return pe(n.b)}return fe}($o(r)));return f(Tt,bo,p(la,zr(n)-1,n,0))}return p(la,oa(r)-1,$o(r),0)}();return f(Bt,function(n){return f(Je," ",C(['"'+r+'"',"is not a valid hexadecimal string because",n]))},n)}function Ao(r){return f(ys,f(bs,vs(Jr),is(ke(r))),f(bs,f(Bs,Je(""),Us(ms(C([$s(ho(function(n){return!w(n,r)&&"&"!==n})),pa])))),is(ke(r))))}var To,Lo,Do=Sn("Http"),Ro=(Sn("Http"),Un),No=c(function(n,r){return p(gt,n,0,r)}),So=c(function(n,r){return f(xt,n,r)}),Oo=c(function(n,r){switch(n.$){case 0:return A(D(r,{bU:n.a}),rt);case 1:return A(D(r,{af:n.a}),rt);case 2:return A(D(r,{V:n.a}),rt);case 3:return A(D(r,{G:f(No,n.a.s,r.G)}),rt);case 4:return A(D(r,{G:f(So,n.a.s,r.G)}),rt);case 5:return A(D(r,{ao:fe}),so(r));default:if(n.a.$)return A(D(r,{ao:pe(n.a.a)}),rt);return A(D(r,{ao:fe}),rt)}}),Co={$:5},Wo=c(function(e,n){return p(Kt,c(function(n,r){return f(se,e(n),r)}),N,n)}),Bo=Q,_o=nn,Fo=function(n){return{$:0,a:n}},Io=function(n){switch(n.$){case 0:return 0;case 1:return 1;case 2:return 2;default:return 3}},Uo=Vn("div"),Go=c(function(n,r){return f(Yn,n,ut(r))}),Po=Go("className"),Ho=c(function(n,r){return r.$?fe:pe(n(r.a))}),jo=c(function(n,r){switch(n.$){case 0:return D(r,{y:pe(n.a)});case 1:return D(r,{A:pe(n.a)});case 2:return D(r,{E:pe(n.a)});default:return D(r,{aW:R(r.aW,n.a)})}}),Vo={y:fe,aW:N,A:fe,E:fe},zo=c(function(n,r){return Po(n+"-"+function(){switch(r){case 0:return"primary";case 1:return"secondary";case 2:return"success";case 3:return"info";case 4:return"warning";case 5:return"danger";case 6:return"light";default:return"dark"}}())}),Mo=o(function(n,r,e){return{cF:r,c7:e,dh:n}}),Jo=c(function(n,r){n:for(;;)switch(n.$){case 0:return r;case 1:var e=n.b;n=n.a,r=f(se,e,r);continue n;default:var t=n.b;n=n.a,r=f(Jo,t,r);continue n}}),Ko=c(function(n,r){var e=n({cF:1,d:N,e:1,b:0,dh:1,a:r});return e.$?We(f(Jo,e.b,N)):Be(e.b)}),Yo=c(function(n,r){var e=f(Ko,n,r);return e.$?We(f(Wo,fo,e.a)):Be(e.a)}),Xo=c(function(n,r){return A(n,r)}),Zo=c(function(n,r){return{$:1,a:n,b:r}}),Qo=o(function(n,r,e){return{$:0,a:n,b:r,c:e}}),ns=c(function(a,n){var c=n;return function(n){var r=c(n);if(1===r.$)return f(Zo,r.a,r.b);var e=r.a,t=r.c,o=a(r.b)(t);if(1===o.$){var s=o.a;return f(Zo,e||s,o.b)}s=o.a;return p(Qo,e||s,o.b,o.c)}}),rs=function(n){var e=n;return function(n){var r=e(n);return 1!==r.$?p(Qo,!1,r.b,r.c):f(Zo,!1,r.b)}},es={$:11},ts=c(function(n,r){return{$:1,a:n,b:r}}),os=e(function(n,r,e,t){return{cF:r,dH:t,c7:e,dh:n}}),ss={$:0},as=c(function(n,r){return f(ts,ss,d(os,n.dh,n.cF,r,n.d))}),cs=Lr,ls=c(function(e,t){return function(n){var r=p(cs,e,n.b,n.a);return w(r,-1)?f(Zo,!1,f(as,n,t)):w(r,-2)?p(Qo,!0,0,{cF:1,d:n.d,e:n.e,b:n.b+1,dh:n.dh+1,a:n.a}):p(Qo,!0,0,{cF:n.cF+1,d:n.d,e:n.e,b:r,dh:n.dh,a:n.a})}}),is=function(n){return f(ls,n,es)},us=t(function(n,r,e,t,o){for(;;){var s=p(cs,n,r,o.a);if(w(s,-1))return p(Qo,E(o.b,r)<0,0,{cF:t,d:o.d,e:o.e,b:r,dh:e,a:o.a});if(w(s,-2))n=n,r=r+1,e=e+1,t=1,o=o;else n=n,r=s,e=e,t=t+1,o=o}}),ps=function(r){return function(n){return b(us,r,n.b,n.dh,n.cF,n)}},fs=c(function(n){return n}),ds=o(function(c,n,r){var l=n,i=r;return function(n){var r=l(n);if(1===r.$)return f(Zo,r.a,r.b);var e=r.a,t=r.b,o=i(r.c);if(1===o.$){var s=o.a;return f(Zo,e||s,o.b)}s=o.a;var a=o.c;return p(Qo,e||s,f(c,t,o.b),a)}}),bs=c(function(n,r){return p(ds,fs,n,r)}),ys=c(function(n,r){return p(ds,Te,n,r)}),hs=c(function(n,r){return{$:2,a:n,b:r}}),gs=o(function(n,r,e){n:for(;;){if(e.b){var t=e.b,o=(0,e.a)(n);if(o.$){var s;if((s=o).a)return s;n=n,r=f(hs,r,s.b),e=t;continue n}return s=o}return f(Zo,!1,r)}}),ms=function(r){return function(n){return p(gs,n,ss,r)}},vs=function(r){return function(n){return p(Qo,!1,r,n)}},ws=o(function(n,r,e){return{$:1,a:n,b:r,c:e}}),qs=function(n){return n.toLowerCase()},xs=V,Es=c(function(o,n){var s=n;return function(n){var r=s(n);if(1===r.$)return f(Zo,r.a,r.b);var e=r.b,t=r.c;return p(Qo,r.a,f(o,p(xs,n.b,t.b,n.a),e),t)}}),$s=function(n){return f(Es,fs,n)},ks=function(n){return" "===n||"\t"===n||"\n"===n||"\r"===n||"\f"===n||" "===n},As=function(r){var n=f(ns,function(n){return w(qs(n),r)?vs(0):yo("closing tag does not match opening tag: "+r)},$s(ho(function(n){return!ks(n)&&">"!==n})));return f(bs,f(bs,f(bs,f(bs,is(ke("<")),is(ke("/"))),n),ps(ks)),is(ke(">")))},Ts=c(function(n,r){return{$:0,a:n,b:r}}),Ls=Or,Ds=e(function(n,r,e,t){return f(ts,ss,d(os,n,r,e,t))}),Rs=Tr,Ns=f(ys,f(bs,f(bs,vs(function(n){return{$:2,a:n}}),mo("<!")),mo("--")),f(bs,$s(function(n){var s=n.a,a=n.b;return function(n){var r=b(Ls,s,n.b,n.dh,n.cF,n.a),e=r.a,t=r.b,o=r.c;return w(e,-1)?f(Zo,!1,d(Ds,t,o,a,n.d)):p(Qo,E(n.b,e)<0,0,{cF:o,d:n.d,e:n.e,b:e,dh:t,a:n.a})}}(go("--\x3e"))),mo("--\x3e"))),Ss=c(function(n,r){for(;;){if(!r.b)return!1;var e=r.b;if(n(r.a))return!0;n=n,r=e}}),Os=c(function(r,n){return f(Ss,function(n){return w(n,r)},n)}),Cs=C(["area","base","br","col","embed","hr","img","input","link","meta","param","source","track","wbr"]),Ws=function(n){return f(Os,n,Cs)},Bs=c(function(t,n){var o=n;return function(n){var r=o(n);if(r.$)return f(Zo,r.a,r.b);var e=r.c;return p(Qo,r.a,t(r.b),e)}}),_s=e(function(n,r,e,t){for(;;){var o=e(r)(t);if(o.$){s=o.a;return f(Zo,n||s,o.b)}var s=o.a,a=o.b,c=o.c;if(a.$)return p(Qo,n||s,a.a,c);n=n||s,r=a.a,e=e,t=c}}),Fs=c(function(r,e){return function(n){return d(_s,!1,r,e,n)}}),Is=c(function(n,r){return f(Fs,n,function(n){return f(Bs,qo,r(n))})}),Us=function(n){return f(Is,N,function(r){return ms(C([f(Bs,function(n){return wo(f(se,n,r))},n),vs(vo(Ee(r)))]))})},Gs=f(Bs,qs,$s(ho(function(n){return!ks(n)&&'"'!==n&&"'"!==n&&">"!==n&&"/"!==n&&"="!==n}))),Ps=is(ke(";")),Hs=(To=C([A("Aacute","Á"),A("aacute","á"),A("Abreve","Ă"),A("abreve","ă"),A("ac","∾"),A("acd","∿"),A("acE","∾̳"),A("Acirc","Â"),A("acirc","â"),A("acute","´"),A("Acy","А"),A("acy","а"),A("AElig","Æ"),A("aelig","æ"),A("af","⁡"),A("Afr","𝔄"),A("afr","𝔞"),A("Agrave","À"),A("agrave","à"),A("alefsym","ℵ"),A("aleph","ℵ"),A("Alpha","Α"),A("alpha","α"),A("Amacr","Ā"),A("amacr","ā"),A("amalg","⨿"),A("amp","&"),A("AMP","&"),A("andand","⩕"),A("And","⩓"),A("and","∧"),A("andd","⩜"),A("andslope","⩘"),A("andv","⩚"),A("ang","∠"),A("ange","⦤"),A("angle","∠"),A("angmsdaa","⦨"),A("angmsdab","⦩"),A("angmsdac","⦪"),A("angmsdad","⦫"),A("angmsdae","⦬"),A("angmsdaf","⦭"),A("angmsdag","⦮"),A("angmsdah","⦯"),A("angmsd","∡"),A("angrt","∟"),A("angrtvb","⊾"),A("angrtvbd","⦝"),A("angsph","∢"),A("angst","Å"),A("angzarr","⍼"),A("Aogon","Ą"),A("aogon","ą"),A("Aopf","𝔸"),A("aopf","𝕒"),A("apacir","⩯"),A("ap","≈"),A("apE","⩰"),A("ape","≊"),A("apid","≋"),A("apos","'"),A("ApplyFunction","⁡"),A("approx","≈"),A("approxeq","≊"),A("Aring","Å"),A("aring","å"),A("Ascr","𝒜"),A("ascr","𝒶"),A("Assign","≔"),A("ast","*"),A("asymp","≈"),A("asympeq","≍"),A("Atilde","Ã"),A("atilde","ã"),A("Auml","Ä"),A("auml","ä"),A("awconint","∳"),A("awint","⨑"),A("backcong","≌"),A("backepsilon","϶"),A("backprime","‵"),A("backsim","∽"),A("backsimeq","⋍"),A("Backslash","∖"),A("Barv","⫧"),A("barvee","⊽"),A("barwed","⌅"),A("Barwed","⌆"),A("barwedge","⌅"),A("bbrk","⎵"),A("bbrktbrk","⎶"),A("bcong","≌"),A("Bcy","Б"),A("bcy","б"),A("bdquo","„"),A("becaus","∵"),A("because","∵"),A("Because","∵"),A("bemptyv","⦰"),A("bepsi","϶"),A("bernou","ℬ"),A("Bernoullis","ℬ"),A("Beta","Β"),A("beta","β"),A("beth","ℶ"),A("between","≬"),A("Bfr","𝔅"),A("bfr","𝔟"),A("bigcap","⋂"),A("bigcirc","◯"),A("bigcup","⋃"),A("bigodot","⨀"),A("bigoplus","⨁"),A("bigotimes","⨂"),A("bigsqcup","⨆"),A("bigstar","★"),A("bigtriangledown","▽"),A("bigtriangleup","△"),A("biguplus","⨄"),A("bigvee","⋁"),A("bigwedge","⋀"),A("bkarow","⤍"),A("blacklozenge","⧫"),A("blacksquare","▪"),A("blacktriangle","▴"),A("blacktriangledown","▾"),A("blacktriangleleft","◂"),A("blacktriangleright","▸"),A("blank","␣"),A("blk12","▒"),A("blk14","░"),A("blk34","▓"),A("block","█"),A("bne","=⃥"),A("bnequiv","≡⃥"),A("bNot","⫭"),A("bnot","⌐"),A("Bopf","𝔹"),A("bopf","𝕓"),A("bot","⊥"),A("bottom","⊥"),A("bowtie","⋈"),A("boxbox","⧉"),A("boxdl","┐"),A("boxdL","╕"),A("boxDl","╖"),A("boxDL","╗"),A("boxdr","┌"),A("boxdR","╒"),A("boxDr","╓"),A("boxDR","╔"),A("boxh","─"),A("boxH","═"),A("boxhd","┬"),A("boxHd","╤"),A("boxhD","╥"),A("boxHD","╦"),A("boxhu","┴"),A("boxHu","╧"),A("boxhU","╨"),A("boxHU","╩"),A("boxminus","⊟"),A("boxplus","⊞"),A("boxtimes","⊠"),A("boxul","┘"),A("boxuL","╛"),A("boxUl","╜"),A("boxUL","╝"),A("boxur","└"),A("boxuR","╘"),A("boxUr","╙"),A("boxUR","╚"),A("boxv","│"),A("boxV","║"),A("boxvh","┼"),A("boxvH","╪"),A("boxVh","╫"),A("boxVH","╬"),A("boxvl","┤"),A("boxvL","╡"),A("boxVl","╢"),A("boxVL","╣"),A("boxvr","├"),A("boxvR","╞"),A("boxVr","╟"),A("boxVR","╠"),A("bprime","‵"),A("breve","˘"),A("Breve","˘"),A("brvbar","¦"),A("bscr","𝒷"),A("Bscr","ℬ"),A("bsemi","⁏"),A("bsim","∽"),A("bsime","⋍"),A("bsolb","⧅"),A("bsol","\\"),A("bsolhsub","⟈"),A("bull","•"),A("bullet","•"),A("bump","≎"),A("bumpE","⪮"),A("bumpe","≏"),A("Bumpeq","≎"),A("bumpeq","≏"),A("Cacute","Ć"),A("cacute","ć"),A("capand","⩄"),A("capbrcup","⩉"),A("capcap","⩋"),A("cap","∩"),A("Cap","⋒"),A("capcup","⩇"),A("capdot","⩀"),A("CapitalDifferentialD","ⅅ"),A("caps","∩︀"),A("caret","⁁"),A("caron","ˇ"),A("Cayleys","ℭ"),A("ccaps","⩍"),A("Ccaron","Č"),A("ccaron","č"),A("Ccedil","Ç"),A("ccedil","ç"),A("Ccirc","Ĉ"),A("ccirc","ĉ"),A("Cconint","∰"),A("ccups","⩌"),A("ccupssm","⩐"),A("Cdot","Ċ"),A("cdot","ċ"),A("cedil","¸"),A("Cedilla","¸"),A("cemptyv","⦲"),A("cent","¢"),A("centerdot","·"),A("CenterDot","·"),A("cfr","𝔠"),A("Cfr","ℭ"),A("CHcy","Ч"),A("chcy","ч"),A("check","✓"),A("checkmark","✓"),A("Chi","Χ"),A("chi","χ"),A("circ","ˆ"),A("circeq","≗"),A("circlearrowleft","↺"),A("circlearrowright","↻"),A("circledast","⊛"),A("circledcirc","⊚"),A("circleddash","⊝"),A("CircleDot","⊙"),A("circledR","®"),A("circledS","Ⓢ"),A("CircleMinus","⊖"),A("CirclePlus","⊕"),A("CircleTimes","⊗"),A("cir","○"),A("cirE","⧃"),A("cire","≗"),A("cirfnint","⨐"),A("cirmid","⫯"),A("cirscir","⧂"),A("ClockwiseContourIntegral","∲"),A("CloseCurlyDoubleQuote","”"),A("CloseCurlyQuote","’"),A("clubs","♣"),A("clubsuit","♣"),A("colon",":"),A("Colon","∷"),A("Colone","⩴"),A("colone","≔"),A("coloneq","≔"),A("comma",","),A("commat","@"),A("comp","∁"),A("compfn","∘"),A("complement","∁"),A("complexes","ℂ"),A("cong","≅"),A("congdot","⩭"),A("Congruent","≡"),A("conint","∮"),A("Conint","∯"),A("ContourIntegral","∮"),A("copf","𝕔"),A("Copf","ℂ"),A("coprod","∐"),A("Coproduct","∐"),A("copy","©"),A("COPY","©"),A("copysr","℗"),A("CounterClockwiseContourIntegral","∳"),A("crarr","↵"),A("cross","✗"),A("Cross","⨯"),A("Cscr","𝒞"),A("cscr","𝒸"),A("csub","⫏"),A("csube","⫑"),A("csup","⫐"),A("csupe","⫒"),A("ctdot","⋯"),A("cudarrl","⤸"),A("cudarrr","⤵"),A("cuepr","⋞"),A("cuesc","⋟"),A("cularr","↶"),A("cularrp","⤽"),A("cupbrcap","⩈"),A("cupcap","⩆"),A("CupCap","≍"),A("cup","∪"),A("Cup","⋓"),A("cupcup","⩊"),A("cupdot","⊍"),A("cupor","⩅"),A("cups","∪︀"),A("curarr","↷"),A("curarrm","⤼"),A("curlyeqprec","⋞"),A("curlyeqsucc","⋟"),A("curlyvee","⋎"),A("curlywedge","⋏"),A("curren","¤"),A("curvearrowleft","↶"),A("curvearrowright","↷"),A("cuvee","⋎"),A("cuwed","⋏"),A("cwconint","∲"),A("cwint","∱"),A("cylcty","⌭"),A("dagger","†"),A("Dagger","‡"),A("daleth","ℸ"),A("darr","↓"),A("Darr","↡"),A("dArr","⇓"),A("dash","‐"),A("Dashv","⫤"),A("dashv","⊣"),A("dbkarow","⤏"),A("dblac","˝"),A("Dcaron","Ď"),A("dcaron","ď"),A("Dcy","Д"),A("dcy","д"),A("ddagger","‡"),A("ddarr","⇊"),A("DD","ⅅ"),A("dd","ⅆ"),A("DDotrahd","⤑"),A("ddotseq","⩷"),A("deg","°"),A("Del","∇"),A("Delta","Δ"),A("delta","δ"),A("demptyv","⦱"),A("dfisht","⥿"),A("Dfr","𝔇"),A("dfr","𝔡"),A("dHar","⥥"),A("dharl","⇃"),A("dharr","⇂"),A("DiacriticalAcute","´"),A("DiacriticalDot","˙"),A("DiacriticalDoubleAcute","˝"),A("DiacriticalGrave","`"),A("DiacriticalTilde","˜"),A("diam","⋄"),A("diamond","⋄"),A("Diamond","⋄"),A("diamondsuit","♦"),A("diams","♦"),A("die","¨"),A("DifferentialD","ⅆ"),A("digamma","ϝ"),A("disin","⋲"),A("div","÷"),A("divide","÷"),A("divideontimes","⋇"),A("divonx","⋇"),A("DJcy","Ђ"),A("djcy","ђ"),A("dlcorn","⌞"),A("dlcrop","⌍"),A("dollar","$"),A("Dopf","𝔻"),A("dopf","𝕕"),A("Dot","¨"),A("dot","˙"),A("DotDot","⃜"),A("doteq","≐"),A("doteqdot","≑"),A("DotEqual","≐"),A("dotminus","∸"),A("dotplus","∔"),A("dotsquare","⊡"),A("doublebarwedge","⌆"),A("DoubleContourIntegral","∯"),A("DoubleDot","¨"),A("DoubleDownArrow","⇓"),A("DoubleLeftArrow","⇐"),A("DoubleLeftRightArrow","⇔"),A("DoubleLeftTee","⫤"),A("DoubleLongLeftArrow","⟸"),A("DoubleLongLeftRightArrow","⟺"),A("DoubleLongRightArrow","⟹"),A("DoubleRightArrow","⇒"),A("DoubleRightTee","⊨"),A("DoubleUpArrow","⇑"),A("DoubleUpDownArrow","⇕"),A("DoubleVerticalBar","∥"),A("DownArrowBar","⤓"),A("downarrow","↓"),A("DownArrow","↓"),A("Downarrow","⇓"),A("DownArrowUpArrow","⇵"),A("DownBreve","̑"),A("downdownarrows","⇊"),A("downharpoonleft","⇃"),A("downharpoonright","⇂"),A("DownLeftRightVector","⥐"),A("DownLeftTeeVector","⥞"),A("DownLeftVectorBar","⥖"),A("DownLeftVector","↽"),A("DownRightTeeVector","⥟"),A("DownRightVectorBar","⥗"),A("DownRightVector","⇁"),A("DownTeeArrow","↧"),A("DownTee","⊤"),A("drbkarow","⤐"),A("drcorn","⌟"),A("drcrop","⌌"),A("Dscr","𝒟"),A("dscr","𝒹"),A("DScy","Ѕ"),A("dscy","ѕ"),A("dsol","⧶"),A("Dstrok","Đ"),A("dstrok","đ"),A("dtdot","⋱"),A("dtri","▿"),A("dtrif","▾"),A("duarr","⇵"),A("duhar","⥯"),A("dwangle","⦦"),A("DZcy","Џ"),A("dzcy","џ"),A("dzigrarr","⟿"),A("Eacute","É"),A("eacute","é"),A("easter","⩮"),A("Ecaron","Ě"),A("ecaron","ě"),A("Ecirc","Ê"),A("ecirc","ê"),A("ecir","≖"),A("ecolon","≕"),A("Ecy","Э"),A("ecy","э"),A("eDDot","⩷"),A("Edot","Ė"),A("edot","ė"),A("eDot","≑"),A("ee","ⅇ"),A("efDot","≒"),A("Efr","𝔈"),A("efr","𝔢"),A("eg","⪚"),A("Egrave","È"),A("egrave","è"),A("egs","⪖"),A("egsdot","⪘"),A("el","⪙"),A("Element","∈"),A("elinters","⏧"),A("ell","ℓ"),A("els","⪕"),A("elsdot","⪗"),A("Emacr","Ē"),A("emacr","ē"),A("empty","∅"),A("emptyset","∅"),A("EmptySmallSquare","◻"),A("emptyv","∅"),A("EmptyVerySmallSquare","▫"),A("emsp13"," "),A("emsp14"," "),A("emsp"," "),A("ENG","Ŋ"),A("eng","ŋ"),A("ensp"," "),A("Eogon","Ę"),A("eogon","ę"),A("Eopf","𝔼"),A("eopf","𝕖"),A("epar","⋕"),A("eparsl","⧣"),A("eplus","⩱"),A("epsi","ε"),A("Epsilon","Ε"),A("epsilon","ε"),A("epsiv","ϵ"),A("eqcirc","≖"),A("eqcolon","≕"),A("eqsim","≂"),A("eqslantgtr","⪖"),A("eqslantless","⪕"),A("Equal","⩵"),A("equals","="),A("EqualTilde","≂"),A("equest","≟"),A("Equilibrium","⇌"),A("equiv","≡"),A("equivDD","⩸"),A("eqvparsl","⧥"),A("erarr","⥱"),A("erDot","≓"),A("escr","ℯ"),A("Escr","ℰ"),A("esdot","≐"),A("Esim","⩳"),A("esim","≂"),A("Eta","Η"),A("eta","η"),A("ETH","Ð"),A("eth","ð"),A("Euml","Ë"),A("euml","ë"),A("euro","€"),A("excl","!"),A("exist","∃"),A("Exists","∃"),A("expectation","ℰ"),A("exponentiale","ⅇ"),A("ExponentialE","ⅇ"),A("fallingdotseq","≒"),A("Fcy","Ф"),A("fcy","ф"),A("female","♀"),A("ffilig","ﬃ"),A("fflig","ﬀ"),A("ffllig","ﬄ"),A("Ffr","𝔉"),A("ffr","𝔣"),A("filig","ﬁ"),A("FilledSmallSquare","◼"),A("FilledVerySmallSquare","▪"),A("fjlig","fj"),A("flat","♭"),A("fllig","ﬂ"),A("fltns","▱"),A("fnof","ƒ"),A("Fopf","𝔽"),A("fopf","𝕗"),A("forall","∀"),A("ForAll","∀"),A("fork","⋔"),A("forkv","⫙"),A("Fouriertrf","ℱ"),A("fpartint","⨍"),A("frac12","½"),A("frac13","⅓"),A("frac14","¼"),A("frac15","⅕"),A("frac16","⅙"),A("frac18","⅛"),A("frac23","⅔"),A("frac25","⅖"),A("frac34","¾"),A("frac35","⅗"),A("frac38","⅜"),A("frac45","⅘"),A("frac56","⅚"),A("frac58","⅝"),A("frac78","⅞"),A("frasl","⁄"),A("frown","⌢"),A("fscr","𝒻"),A("Fscr","ℱ"),A("gacute","ǵ"),A("Gamma","Γ"),A("gamma","γ"),A("Gammad","Ϝ"),A("gammad","ϝ"),A("gap","⪆"),A("Gbreve","Ğ"),A("gbreve","ğ"),A("Gcedil","Ģ"),A("Gcirc","Ĝ"),A("gcirc","ĝ"),A("Gcy","Г"),A("gcy","г"),A("Gdot","Ġ"),A("gdot","ġ"),A("ge","≥"),A("gE","≧"),A("gEl","⪌"),A("gel","⋛"),A("geq","≥"),A("geqq","≧"),A("geqslant","⩾"),A("gescc","⪩"),A("ges","⩾"),A("gesdot","⪀"),A("gesdoto","⪂"),A("gesdotol","⪄"),A("gesl","⋛︀"),A("gesles","⪔"),A("Gfr","𝔊"),A("gfr","𝔤"),A("gg","≫"),A("Gg","⋙"),A("ggg","⋙"),A("gimel","ℷ"),A("GJcy","Ѓ"),A("gjcy","ѓ"),A("gla","⪥"),A("gl","≷"),A("glE","⪒"),A("glj","⪤"),A("gnap","⪊"),A("gnapprox","⪊"),A("gne","⪈"),A("gnE","≩"),A("gneq","⪈"),A("gneqq","≩"),A("gnsim","⋧"),A("Gopf","𝔾"),A("gopf","𝕘"),A("grave","`"),A("GreaterEqual","≥"),A("GreaterEqualLess","⋛"),A("GreaterFullEqual","≧"),A("GreaterGreater","⪢"),A("GreaterLess","≷"),A("GreaterSlantEqual","⩾"),A("GreaterTilde","≳"),A("Gscr","𝒢"),A("gscr","ℊ"),A("gsim","≳"),A("gsime","⪎"),A("gsiml","⪐"),A("gtcc","⪧"),A("gtcir","⩺"),A("gt",">"),A("GT",">"),A("Gt","≫"),A("gtdot","⋗"),A("gtlPar","⦕"),A("gtquest","⩼"),A("gtrapprox","⪆"),A("gtrarr","⥸"),A("gtrdot","⋗"),A("gtreqless","⋛"),A("gtreqqless","⪌"),A("gtrless","≷"),A("gtrsim","≳"),A("gvertneqq","≩︀"),A("gvnE","≩︀"),A("Hacek","ˇ"),A("hairsp"," "),A("half","½"),A("hamilt","ℋ"),A("HARDcy","Ъ"),A("hardcy","ъ"),A("harrcir","⥈"),A("harr","↔"),A("hArr","⇔"),A("harrw","↭"),A("Hat","^"),A("hbar","ℏ"),A("Hcirc","Ĥ"),A("hcirc","ĥ"),A("hearts","♥"),A("heartsuit","♥"),A("hellip","…"),A("hercon","⊹"),A("hfr","𝔥"),A("Hfr","ℌ"),A("HilbertSpace","ℋ"),A("hksearow","⤥"),A("hkswarow","⤦"),A("hoarr","⇿"),A("homtht","∻"),A("hookleftarrow","↩"),A("hookrightarrow","↪"),A("hopf","𝕙"),A("Hopf","ℍ"),A("horbar","―"),A("HorizontalLine","─"),A("hscr","𝒽"),A("Hscr","ℋ"),A("hslash","ℏ"),A("Hstrok","Ħ"),A("hstrok","ħ"),A("HumpDownHump","≎"),A("HumpEqual","≏"),A("hybull","⁃"),A("hyphen","‐"),A("Iacute","Í"),A("iacute","í"),A("ic","⁣"),A("Icirc","Î"),A("icirc","î"),A("Icy","И"),A("icy","и"),A("Idot","İ"),A("IEcy","Е"),A("iecy","е"),A("iexcl","¡"),A("iff","⇔"),A("ifr","𝔦"),A("Ifr","ℑ"),A("Igrave","Ì"),A("igrave","ì"),A("ii","ⅈ"),A("iiiint","⨌"),A("iiint","∭"),A("iinfin","⧜"),A("iiota","℩"),A("IJlig","Ĳ"),A("ijlig","ĳ"),A("Imacr","Ī"),A("imacr","ī"),A("image","ℑ"),A("ImaginaryI","ⅈ"),A("imagline","ℐ"),A("imagpart","ℑ"),A("imath","ı"),A("Im","ℑ"),A("imof","⊷"),A("imped","Ƶ"),A("Implies","⇒"),A("incare","℅"),A("in","∈"),A("infin","∞"),A("infintie","⧝"),A("inodot","ı"),A("intcal","⊺"),A("int","∫"),A("Int","∬"),A("integers","ℤ"),A("Integral","∫"),A("intercal","⊺"),A("Intersection","⋂"),A("intlarhk","⨗"),A("intprod","⨼"),A("InvisibleComma","⁣"),A("InvisibleTimes","⁢"),A("IOcy","Ё"),A("iocy","ё"),A("Iogon","Į"),A("iogon","į"),A("Iopf","𝕀"),A("iopf","𝕚"),A("Iota","Ι"),A("iota","ι"),A("iprod","⨼"),A("iquest","¿"),A("iscr","𝒾"),A("Iscr","ℐ"),A("isin","∈"),A("isindot","⋵"),A("isinE","⋹"),A("isins","⋴"),A("isinsv","⋳"),A("isinv","∈"),A("it","⁢"),A("Itilde","Ĩ"),A("itilde","ĩ"),A("Iukcy","І"),A("iukcy","і"),A("Iuml","Ï"),A("iuml","ï"),A("Jcirc","Ĵ"),A("jcirc","ĵ"),A("Jcy","Й"),A("jcy","й"),A("Jfr","𝔍"),A("jfr","𝔧"),A("jmath","ȷ"),A("Jopf","𝕁"),A("jopf","𝕛"),A("Jscr","𝒥"),A("jscr","𝒿"),A("Jsercy","Ј"),A("jsercy","ј"),A("Jukcy","Є"),A("jukcy","є"),A("Kappa","Κ"),A("kappa","κ"),A("kappav","ϰ"),A("Kcedil","Ķ"),A("kcedil","ķ"),A("Kcy","К"),A("kcy","к"),A("Kfr","𝔎"),A("kfr","𝔨"),A("kgreen","ĸ"),A("KHcy","Х"),A("khcy","х"),A("KJcy","Ќ"),A("kjcy","ќ"),A("Kopf","𝕂"),A("kopf","𝕜"),A("Kscr","𝒦"),A("kscr","𝓀"),A("lAarr","⇚"),A("Lacute","Ĺ"),A("lacute","ĺ"),A("laemptyv","⦴"),A("lagran","ℒ"),A("Lambda","Λ"),A("lambda","λ"),A("lang","⟨"),A("Lang","⟪"),A("langd","⦑"),A("langle","⟨"),A("lap","⪅"),A("Laplacetrf","ℒ"),A("laquo","«"),A("larrb","⇤"),A("larrbfs","⤟"),A("larr","←"),A("Larr","↞"),A("lArr","⇐"),A("larrfs","⤝"),A("larrhk","↩"),A("larrlp","↫"),A("larrpl","⤹"),A("larrsim","⥳"),A("larrtl","↢"),A("latail","⤙"),A("lAtail","⤛"),A("lat","⪫"),A("late","⪭"),A("lates","⪭︀"),A("lbarr","⤌"),A("lBarr","⤎"),A("lbbrk","❲"),A("lbrace","{"),A("lbrack","["),A("lbrke","⦋"),A("lbrksld","⦏"),A("lbrkslu","⦍"),A("Lcaron","Ľ"),A("lcaron","ľ"),A("Lcedil","Ļ"),A("lcedil","ļ"),A("lceil","⌈"),A("lcub","{"),A("Lcy","Л"),A("lcy","л"),A("ldca","⤶"),A("ldquo","“"),A("ldquor","„"),A("ldrdhar","⥧"),A("ldrushar","⥋"),A("ldsh","↲"),A("le","≤"),A("lE","≦"),A("LeftAngleBracket","⟨"),A("LeftArrowBar","⇤"),A("leftarrow","←"),A("LeftArrow","←"),A("Leftarrow","⇐"),A("LeftArrowRightArrow","⇆"),A("leftarrowtail","↢"),A("LeftCeiling","⌈"),A("LeftDoubleBracket","⟦"),A("LeftDownTeeVector","⥡"),A("LeftDownVectorBar","⥙"),A("LeftDownVector","⇃"),A("LeftFloor","⌊"),A("leftharpoondown","↽"),A("leftharpoonup","↼"),A("leftleftarrows","⇇"),A("leftrightarrow","↔"),A("LeftRightArrow","↔"),A("Leftrightarrow","⇔"),A("leftrightarrows","⇆"),A("leftrightharpoons","⇋"),A("leftrightsquigarrow","↭"),A("LeftRightVector","⥎"),A("LeftTeeArrow","↤"),A("LeftTee","⊣"),A("LeftTeeVector","⥚"),A("leftthreetimes","⋋"),A("LeftTriangleBar","⧏"),A("LeftTriangle","⊲"),A("LeftTriangleEqual","⊴"),A("LeftUpDownVector","⥑"),A("LeftUpTeeVector","⥠"),A("LeftUpVectorBar","⥘"),A("LeftUpVector","↿"),A("LeftVectorBar","⥒"),A("LeftVector","↼"),A("lEg","⪋"),A("leg","⋚"),A("leq","≤"),A("leqq","≦"),A("leqslant","⩽"),A("lescc","⪨"),A("les","⩽"),A("lesdot","⩿"),A("lesdoto","⪁"),A("lesdotor","⪃"),A("lesg","⋚︀"),A("lesges","⪓"),A("lessapprox","⪅"),A("lessdot","⋖"),A("lesseqgtr","⋚"),A("lesseqqgtr","⪋"),A("LessEqualGreater","⋚"),A("LessFullEqual","≦"),A("LessGreater","≶"),A("lessgtr","≶"),A("LessLess","⪡"),A("lesssim","≲"),A("LessSlantEqual","⩽"),A("LessTilde","≲"),A("lfisht","⥼"),A("lfloor","⌊"),A("Lfr","𝔏"),A("lfr","𝔩"),A("lg","≶"),A("lgE","⪑"),A("lHar","⥢"),A("lhard","↽"),A("lharu","↼"),A("lharul","⥪"),A("lhblk","▄"),A("LJcy","Љ"),A("ljcy","љ"),A("llarr","⇇"),A("ll","≪"),A("Ll","⋘"),A("llcorner","⌞"),A("Lleftarrow","⇚"),A("llhard","⥫"),A("lltri","◺"),A("Lmidot","Ŀ"),A("lmidot","ŀ"),A("lmoustache","⎰"),A("lmoust","⎰"),A("lnap","⪉"),A("lnapprox","⪉"),A("lne","⪇"),A("lnE","≨"),A("lneq","⪇"),A("lneqq","≨"),A("lnsim","⋦"),A("loang","⟬"),A("loarr","⇽"),A("lobrk","⟦"),A("longleftarrow","⟵"),A("LongLeftArrow","⟵"),A("Longleftarrow","⟸"),A("longleftrightarrow","⟷"),A("LongLeftRightArrow","⟷"),A("Longleftrightarrow","⟺"),A("longmapsto","⟼"),A("longrightarrow","⟶"),A("LongRightArrow","⟶"),A("Longrightarrow","⟹"),A("looparrowleft","↫"),A("looparrowright","↬"),A("lopar","⦅"),A("Lopf","𝕃"),A("lopf","𝕝"),A("loplus","⨭"),A("lotimes","⨴"),A("lowast","∗"),A("lowbar","_"),A("LowerLeftArrow","↙"),A("LowerRightArrow","↘"),A("loz","◊"),A("lozenge","◊"),A("lozf","⧫"),A("lpar","("),A("lparlt","⦓"),A("lrarr","⇆"),A("lrcorner","⌟"),A("lrhar","⇋"),A("lrhard","⥭"),A("lrm","‎"),A("lrtri","⊿"),A("lsaquo","‹"),A("lscr","𝓁"),A("Lscr","ℒ"),A("lsh","↰"),A("Lsh","↰"),A("lsim","≲"),A("lsime","⪍"),A("lsimg","⪏"),A("lsqb","["),A("lsquo","‘"),A("lsquor","‚"),A("Lstrok","Ł"),A("lstrok","ł"),A("ltcc","⪦"),A("ltcir","⩹"),A("lt","<"),A("LT","<"),A("Lt","≪"),A("ltdot","⋖"),A("lthree","⋋"),A("ltimes","⋉"),A("ltlarr","⥶"),A("ltquest","⩻"),A("ltri","◃"),A("ltrie","⊴"),A("ltrif","◂"),A("ltrPar","⦖"),A("lurdshar","⥊"),A("luruhar","⥦"),A("lvertneqq","≨︀"),A("lvnE","≨︀"),A("macr","¯"),A("male","♂"),A("malt","✠"),A("maltese","✠"),A("Map","⤅"),A("map","↦"),A("mapsto","↦"),A("mapstodown","↧"),A("mapstoleft","↤"),A("mapstoup","↥"),A("marker","▮"),A("mcomma","⨩"),A("Mcy","М"),A("mcy","м"),A("mdash","—"),A("mDDot","∺"),A("measuredangle","∡"),A("MediumSpace"," "),A("Mellintrf","ℳ"),A("Mfr","𝔐"),A("mfr","𝔪"),A("mho","℧"),A("micro","µ"),A("midast","*"),A("midcir","⫰"),A("mid","∣"),A("middot","·"),A("minusb","⊟"),A("minus","−"),A("minusd","∸"),A("minusdu","⨪"),A("MinusPlus","∓"),A("mlcp","⫛"),A("mldr","…"),A("mnplus","∓"),A("models","⊧"),A("Mopf","𝕄"),A("mopf","𝕞"),A("mp","∓"),A("mscr","𝓂"),A("Mscr","ℳ"),A("mstpos","∾"),A("Mu","Μ"),A("mu","μ"),A("multimap","⊸"),A("mumap","⊸"),A("nabla","∇"),A("Nacute","Ń"),A("nacute","ń"),A("nang","∠⃒"),A("nap","≉"),A("napE","⩰̸"),A("napid","≋̸"),A("napos","ŉ"),A("napprox","≉"),A("natural","♮"),A("naturals","ℕ"),A("natur","♮"),A("nbsp"," "),A("nbump","≎̸"),A("nbumpe","≏̸"),A("ncap","⩃"),A("Ncaron","Ň"),A("ncaron","ň"),A("Ncedil","Ņ"),A("ncedil","ņ"),A("ncong","≇"),A("ncongdot","⩭̸"),A("ncup","⩂"),A("Ncy","Н"),A("ncy","н"),A("ndash","–"),A("nearhk","⤤"),A("nearr","↗"),A("neArr","⇗"),A("nearrow","↗"),A("ne","≠"),A("nedot","≐̸"),A("NegativeMediumSpace","​"),A("NegativeThickSpace","​"),A("NegativeThinSpace","​"),A("NegativeVeryThinSpace","​"),A("nequiv","≢"),A("nesear","⤨"),A("nesim","≂̸"),A("NestedGreaterGreater","≫"),A("NestedLessLess","≪"),A("NewLine","\n"),A("nexist","∄"),A("nexists","∄"),A("Nfr","𝔑"),A("nfr","𝔫"),A("ngE","≧̸"),A("nge","≱"),A("ngeq","≱"),A("ngeqq","≧̸"),A("ngeqslant","⩾̸"),A("nges","⩾̸"),A("nGg","⋙̸"),A("ngsim","≵"),A("nGt","≫⃒"),A("ngt","≯"),A("ngtr","≯"),A("nGtv","≫̸"),A("nharr","↮"),A("nhArr","⇎"),A("nhpar","⫲"),A("ni","∋"),A("nis","⋼"),A("nisd","⋺"),A("niv","∋"),A("NJcy","Њ"),A("njcy","њ"),A("nlarr","↚"),A("nlArr","⇍"),A("nldr","‥"),A("nlE","≦̸"),A("nle","≰"),A("nleftarrow","↚"),A("nLeftarrow","⇍"),A("nleftrightarrow","↮"),A("nLeftrightarrow","⇎"),A("nleq","≰"),A("nleqq","≦̸"),A("nleqslant","⩽̸"),A("nles","⩽̸"),A("nless","≮"),A("nLl","⋘̸"),A("nlsim","≴"),A("nLt","≪⃒"),A("nlt","≮"),A("nltri","⋪"),A("nltrie","⋬"),A("nLtv","≪̸"),A("nmid","∤"),A("NoBreak","⁠"),A("NonBreakingSpace"," "),A("nopf","𝕟"),A("Nopf","ℕ"),A("Not","⫬"),A("not","¬"),A("NotCongruent","≢"),A("NotCupCap","≭"),A("NotDoubleVerticalBar","∦"),A("NotElement","∉"),A("NotEqual","≠"),A("NotEqualTilde","≂̸"),A("NotExists","∄"),A("NotGreater","≯"),A("NotGreaterEqual","≱"),A("NotGreaterFullEqual","≧̸"),A("NotGreaterGreater","≫̸"),A("NotGreaterLess","≹"),A("NotGreaterSlantEqual","⩾̸"),A("NotGreaterTilde","≵"),A("NotHumpDownHump","≎̸"),A("NotHumpEqual","≏̸"),A("notin","∉"),A("notindot","⋵̸"),A("notinE","⋹̸"),A("notinva","∉"),A("notinvb","⋷"),A("notinvc","⋶"),A("NotLeftTriangleBar","⧏̸"),A("NotLeftTriangle","⋪"),A("NotLeftTriangleEqual","⋬"),A("NotLess","≮"),A("NotLessEqual","≰"),A("NotLessGreater","≸"),A("NotLessLess","≪̸"),A("NotLessSlantEqual","⩽̸"),A("NotLessTilde","≴"),A("NotNestedGreaterGreater","⪢̸"),A("NotNestedLessLess","⪡̸"),A("notni","∌"),A("notniva","∌"),A("notnivb","⋾"),A("notnivc","⋽"),A("NotPrecedes","⊀"),A("NotPrecedesEqual","⪯̸"),A("NotPrecedesSlantEqual","⋠"),A("NotReverseElement","∌"),A("NotRightTriangleBar","⧐̸"),A("NotRightTriangle","⋫"),A("NotRightTriangleEqual","⋭"),A("NotSquareSubset","⊏̸"),A("NotSquareSubsetEqual","⋢"),A("NotSquareSuperset","⊐̸"),A("NotSquareSupersetEqual","⋣"),A("NotSubset","⊂⃒"),A("NotSubsetEqual","⊈"),A("NotSucceeds","⊁"),A("NotSucceedsEqual","⪰̸"),A("NotSucceedsSlantEqual","⋡"),A("NotSucceedsTilde","≿̸"),A("NotSuperset","⊃⃒"),A("NotSupersetEqual","⊉"),A("NotTilde","≁"),A("NotTildeEqual","≄"),A("NotTildeFullEqual","≇"),A("NotTildeTilde","≉"),A("NotVerticalBar","∤"),A("nparallel","∦"),A("npar","∦"),A("nparsl","⫽⃥"),A("npart","∂̸"),A("npolint","⨔"),A("npr","⊀"),A("nprcue","⋠"),A("nprec","⊀"),A("npreceq","⪯̸"),A("npre","⪯̸"),A("nrarrc","⤳̸"),A("nrarr","↛"),A("nrArr","⇏"),A("nrarrw","↝̸"),A("nrightarrow","↛"),A("nRightarrow","⇏"),A("nrtri","⋫"),A("nrtrie","⋭"),A("nsc","⊁"),A("nsccue","⋡"),A("nsce","⪰̸"),A("Nscr","𝒩"),A("nscr","𝓃"),A("nshortmid","∤"),A("nshortparallel","∦"),A("nsim","≁"),A("nsime","≄"),A("nsimeq","≄"),A("nsmid","∤"),A("nspar","∦"),A("nsqsube","⋢"),A("nsqsupe","⋣"),A("nsub","⊄"),A("nsubE","⫅̸"),A("nsube","⊈"),A("nsubset","⊂⃒"),A("nsubseteq","⊈"),A("nsubseteqq","⫅̸"),A("nsucc","⊁"),A("nsucceq","⪰̸"),A("nsup","⊅"),A("nsupE","⫆̸"),A("nsupe","⊉"),A("nsupset","⊃⃒"),A("nsupseteq","⊉"),A("nsupseteqq","⫆̸"),A("ntgl","≹"),A("Ntilde","Ñ"),A("ntilde","ñ"),A("ntlg","≸"),A("ntriangleleft","⋪"),A("ntrianglelefteq","⋬"),A("ntriangleright","⋫"),A("ntrianglerighteq","⋭"),A("Nu","Ν"),A("nu","ν"),A("num","#"),A("numero","№"),A("numsp"," "),A("nvap","≍⃒"),A("nvdash","⊬"),A("nvDash","⊭"),A("nVdash","⊮"),A("nVDash","⊯"),A("nvge","≥⃒"),A("nvgt",">⃒"),A("nvHarr","⤄"),A("nvinfin","⧞"),A("nvlArr","⤂"),A("nvle","≤⃒"),A("nvlt","<⃒"),A("nvltrie","⊴⃒"),A("nvrArr","⤃"),A("nvrtrie","⊵⃒"),A("nvsim","∼⃒"),A("nwarhk","⤣"),A("nwarr","↖"),A("nwArr","⇖"),A("nwarrow","↖"),A("nwnear","⤧"),A("Oacute","Ó"),A("oacute","ó"),A("oast","⊛"),A("Ocirc","Ô"),A("ocirc","ô"),A("ocir","⊚"),A("Ocy","О"),A("ocy","о"),A("odash","⊝"),A("Odblac","Ő"),A("odblac","ő"),A("odiv","⨸"),A("odot","⊙"),A("odsold","⦼"),A("OElig","Œ"),A("oelig","œ"),A("ofcir","⦿"),A("Ofr","𝔒"),A("ofr","𝔬"),A("ogon","˛"),A("Ograve","Ò"),A("ograve","ò"),A("ogt","⧁"),A("ohbar","⦵"),A("ohm","Ω"),A("oint","∮"),A("olarr","↺"),A("olcir","⦾"),A("olcross","⦻"),A("oline","‾"),A("olt","⧀"),A("Omacr","Ō"),A("omacr","ō"),A("Omega","Ω"),A("omega","ω"),A("Omicron","Ο"),A("omicron","ο"),A("omid","⦶"),A("ominus","⊖"),A("Oopf","𝕆"),A("oopf","𝕠"),A("opar","⦷"),A("OpenCurlyDoubleQuote","“"),A("OpenCurlyQuote","‘"),A("operp","⦹"),A("oplus","⊕"),A("orarr","↻"),A("Or","⩔"),A("or","∨"),A("ord","⩝"),A("order","ℴ"),A("orderof","ℴ"),A("ordf","ª"),A("ordm","º"),A("origof","⊶"),A("oror","⩖"),A("orslope","⩗"),A("orv","⩛"),A("oS","Ⓢ"),A("Oscr","𝒪"),A("oscr","ℴ"),A("Oslash","Ø"),A("oslash","ø"),A("osol","⊘"),A("Otilde","Õ"),A("otilde","õ"),A("otimesas","⨶"),A("Otimes","⨷"),A("otimes","⊗"),A("Ouml","Ö"),A("ouml","ö"),A("ovbar","⌽"),A("OverBar","‾"),A("OverBrace","⏞"),A("OverBracket","⎴"),A("OverParenthesis","⏜"),A("para","¶"),A("parallel","∥"),A("par","∥"),A("parsim","⫳"),A("parsl","⫽"),A("part","∂"),A("PartialD","∂"),A("Pcy","П"),A("pcy","п"),A("percnt","%"),A("period","."),A("permil","‰"),A("perp","⊥"),A("pertenk","‱"),A("Pfr","𝔓"),A("pfr","𝔭"),A("Phi","Φ"),A("phi","φ"),A("phiv","ϕ"),A("phmmat","ℳ"),A("phone","☎"),A("Pi","Π"),A("pi","π"),A("pitchfork","⋔"),A("piv","ϖ"),A("planck","ℏ"),A("planckh","ℎ"),A("plankv","ℏ"),A("plusacir","⨣"),A("plusb","⊞"),A("pluscir","⨢"),A("plus","+"),A("plusdo","∔"),A("plusdu","⨥"),A("pluse","⩲"),A("PlusMinus","±"),A("plusmn","±"),A("plussim","⨦"),A("plustwo","⨧"),A("pm","±"),A("Poincareplane","ℌ"),A("pointint","⨕"),A("popf","𝕡"),A("Popf","ℙ"),A("pound","£"),A("prap","⪷"),A("Pr","⪻"),A("pr","≺"),A("prcue","≼"),A("precapprox","⪷"),A("prec","≺"),A("preccurlyeq","≼"),A("Precedes","≺"),A("PrecedesEqual","⪯"),A("PrecedesSlantEqual","≼"),A("PrecedesTilde","≾"),A("preceq","⪯"),A("precnapprox","⪹"),A("precneqq","⪵"),A("precnsim","⋨"),A("pre","⪯"),A("prE","⪳"),A("precsim","≾"),A("prime","′"),A("Prime","″"),A("primes","ℙ"),A("prnap","⪹"),A("prnE","⪵"),A("prnsim","⋨"),A("prod","∏"),A("Product","∏"),A("profalar","⌮"),A("profline","⌒"),A("profsurf","⌓"),A("prop","∝"),A("Proportional","∝"),A("Proportion","∷"),A("propto","∝"),A("prsim","≾"),A("prurel","⊰"),A("Pscr","𝒫"),A("pscr","𝓅"),A("Psi","Ψ"),A("psi","ψ"),A("puncsp"," "),A("Qfr","𝔔"),A("qfr","𝔮"),A("qint","⨌"),A("qopf","𝕢"),A("Qopf","ℚ"),A("qprime","⁗"),A("Qscr","𝒬"),A("qscr","𝓆"),A("quaternions","ℍ"),A("quatint","⨖"),A("quest","?"),A("questeq","≟"),A("quot",'"'),A("QUOT",'"'),A("rAarr","⇛"),A("race","∽̱"),A("Racute","Ŕ"),A("racute","ŕ"),A("radic","√"),A("raemptyv","⦳"),A("rang","⟩"),A("Rang","⟫"),A("rangd","⦒"),A("range","⦥"),A("rangle","⟩"),A("raquo","»"),A("rarrap","⥵"),A("rarrb","⇥"),A("rarrbfs","⤠"),A("rarrc","⤳"),A("rarr","→"),A("Rarr","↠"),A("rArr","⇒"),A("rarrfs","⤞"),A("rarrhk","↪"),A("rarrlp","↬"),A("rarrpl","⥅"),A("rarrsim","⥴"),A("Rarrtl","⤖"),A("rarrtl","↣"),A("rarrw","↝"),A("ratail","⤚"),A("rAtail","⤜"),A("ratio","∶"),A("rationals","ℚ"),A("rbarr","⤍"),A("rBarr","⤏"),A("RBarr","⤐"),A("rbbrk","❳"),A("rbrace","}"),A("rbrack","]"),A("rbrke","⦌"),A("rbrksld","⦎"),A("rbrkslu","⦐"),A("Rcaron","Ř"),A("rcaron","ř"),A("Rcedil","Ŗ"),A("rcedil","ŗ"),A("rceil","⌉"),A("rcub","}"),A("Rcy","Р"),A("rcy","р"),A("rdca","⤷"),A("rdldhar","⥩"),A("rdquo","”"),A("rdquor","”"),A("rdsh","↳"),A("real","ℜ"),A("realine","ℛ"),A("realpart","ℜ"),A("reals","ℝ"),A("Re","ℜ"),A("rect","▭"),A("reg","®"),A("REG","®"),A("ReverseElement","∋"),A("ReverseEquilibrium","⇋"),A("ReverseUpEquilibrium","⥯"),A("rfisht","⥽"),A("rfloor","⌋"),A("rfr","𝔯"),A("Rfr","ℜ"),A("rHar","⥤"),A("rhard","⇁"),A("rharu","⇀"),A("rharul","⥬"),A("Rho","Ρ"),A("rho","ρ"),A("rhov","ϱ"),A("RightAngleBracket","⟩"),A("RightArrowBar","⇥"),A("rightarrow","→"),A("RightArrow","→"),A("Rightarrow","⇒"),A("RightArrowLeftArrow","⇄"),A("rightarrowtail","↣"),A("RightCeiling","⌉"),A("RightDoubleBracket","⟧"),A("RightDownTeeVector","⥝"),A("RightDownVectorBar","⥕"),A("RightDownVector","⇂"),A("RightFloor","⌋"),A("rightharpoondown","⇁"),A("rightharpoonup","⇀"),A("rightleftarrows","⇄"),A("rightleftharpoons","⇌"),A("rightrightarrows","⇉"),A("rightsquigarrow","↝"),A("RightTeeArrow","↦"),A("RightTee","⊢"),A("RightTeeVector","⥛"),A("rightthreetimes","⋌"),A("RightTriangleBar","⧐"),A("RightTriangle","⊳"),A("RightTriangleEqual","⊵"),A("RightUpDownVector","⥏"),A("RightUpTeeVector","⥜"),A("RightUpVectorBar","⥔"),A("RightUpVector","↾"),A("RightVectorBar","⥓"),A("RightVector","⇀"),A("ring","˚"),A("risingdotseq","≓"),A("rlarr","⇄"),A("rlhar","⇌"),A("rlm","‏"),A("rmoustache","⎱"),A("rmoust","⎱"),A("rnmid","⫮"),A("roang","⟭"),A("roarr","⇾"),A("robrk","⟧"),A("ropar","⦆"),A("ropf","𝕣"),A("Ropf","ℝ"),A("roplus","⨮"),A("rotimes","⨵"),A("RoundImplies","⥰"),A("rpar",")"),A("rpargt","⦔"),A("rppolint","⨒"),A("rrarr","⇉"),A("Rrightarrow","⇛"),A("rsaquo","›"),A("rscr","𝓇"),A("Rscr","ℛ"),A("rsh","↱"),A("Rsh","↱"),A("rsqb","]"),A("rsquo","’"),A("rsquor","’"),A("rthree","⋌"),A("rtimes","⋊"),A("rtri","▹"),A("rtrie","⊵"),A("rtrif","▸"),A("rtriltri","⧎"),A("RuleDelayed","⧴"),A("ruluhar","⥨"),A("rx","℞"),A("Sacute","Ś"),A("sacute","ś"),A("sbquo","‚"),A("scap","⪸"),A("Scaron","Š"),A("scaron","š"),A("Sc","⪼"),A("sc","≻"),A("sccue","≽"),A("sce","⪰"),A("scE","⪴"),A("Scedil","Ş"),A("scedil","ş"),A("Scirc","Ŝ"),A("scirc","ŝ"),A("scnap","⪺"),A("scnE","⪶"),A("scnsim","⋩"),A("scpolint","⨓"),A("scsim","≿"),A("Scy","С"),A("scy","с"),A("sdotb","⊡"),A("sdot","⋅"),A("sdote","⩦"),A("searhk","⤥"),A("searr","↘"),A("seArr","⇘"),A("searrow","↘"),A("sect","§"),A("semi",";"),A("seswar","⤩"),A("setminus","∖"),A("setmn","∖"),A("sext","✶"),A("Sfr","𝔖"),A("sfr","𝔰"),A("sfrown","⌢"),A("sharp","♯"),A("SHCHcy","Щ"),A("shchcy","щ"),A("SHcy","Ш"),A("shcy","ш"),A("ShortDownArrow","↓"),A("ShortLeftArrow","←"),A("shortmid","∣"),A("shortparallel","∥"),A("ShortRightArrow","→"),A("ShortUpArrow","↑"),A("shy","­"),A("Sigma","Σ"),A("sigma","σ"),A("sigmaf","ς"),A("sigmav","ς"),A("sim","∼"),A("simdot","⩪"),A("sime","≃"),A("simeq","≃"),A("simg","⪞"),A("simgE","⪠"),A("siml","⪝"),A("simlE","⪟"),A("simne","≆"),A("simplus","⨤"),A("simrarr","⥲"),A("slarr","←"),A("SmallCircle","∘"),A("smallsetminus","∖"),A("smashp","⨳"),A("smeparsl","⧤"),A("smid","∣"),A("smile","⌣"),A("smt","⪪"),A("smte","⪬"),A("smtes","⪬︀"),A("SOFTcy","Ь"),A("softcy","ь"),A("solbar","⌿"),A("solb","⧄"),A("sol","/"),A("Sopf","𝕊"),A("sopf","𝕤"),A("spades","♠"),A("spadesuit","♠"),A("spar","∥"),A("sqcap","⊓"),A("sqcaps","⊓︀"),A("sqcup","⊔"),A("sqcups","⊔︀"),A("Sqrt","√"),A("sqsub","⊏"),A("sqsube","⊑"),A("sqsubset","⊏"),A("sqsubseteq","⊑"),A("sqsup","⊐"),A("sqsupe","⊒"),A("sqsupset","⊐"),A("sqsupseteq","⊒"),A("square","□"),A("Square","□"),A("SquareIntersection","⊓"),A("SquareSubset","⊏"),A("SquareSubsetEqual","⊑"),A("SquareSuperset","⊐"),A("SquareSupersetEqual","⊒"),A("SquareUnion","⊔"),A("squarf","▪"),A("squ","□"),A("squf","▪"),A("srarr","→"),A("Sscr","𝒮"),A("sscr","𝓈"),A("ssetmn","∖"),A("ssmile","⌣"),A("sstarf","⋆"),A("Star","⋆"),A("star","☆"),A("starf","★"),A("straightepsilon","ϵ"),A("straightphi","ϕ"),A("strns","¯"),A("sub","⊂"),A("Sub","⋐"),A("subdot","⪽"),A("subE","⫅"),A("sube","⊆"),A("subedot","⫃"),A("submult","⫁"),A("subnE","⫋"),A("subne","⊊"),A("subplus","⪿"),A("subrarr","⥹"),A("subset","⊂"),A("Subset","⋐"),A("subseteq","⊆"),A("subseteqq","⫅"),A("SubsetEqual","⊆"),A("subsetneq","⊊"),A("subsetneqq","⫋"),A("subsim","⫇"),A("subsub","⫕"),A("subsup","⫓"),A("succapprox","⪸"),A("succ","≻"),A("succcurlyeq","≽"),A("Succeeds","≻"),A("SucceedsEqual","⪰"),A("SucceedsSlantEqual","≽"),A("SucceedsTilde","≿"),A("succeq","⪰"),A("succnapprox","⪺"),A("succneqq","⪶"),A("succnsim","⋩"),A("succsim","≿"),A("SuchThat","∋"),A("sum","∑"),A("Sum","∑"),A("sung","♪"),A("sup1","¹"),A("sup2","²"),A("sup3","³"),A("sup","⊃"),A("Sup","⋑"),A("supdot","⪾"),A("supdsub","⫘"),A("supE","⫆"),A("supe","⊇"),A("supedot","⫄"),A("Superset","⊃"),A("SupersetEqual","⊇"),A("suphsol","⟉"),A("suphsub","⫗"),A("suplarr","⥻"),A("supmult","⫂"),A("supnE","⫌"),A("supne","⊋"),A("supplus","⫀"),A("supset","⊃"),A("Supset","⋑"),A("supseteq","⊇"),A("supseteqq","⫆"),A("supsetneq","⊋"),A("supsetneqq","⫌"),A("supsim","⫈"),A("supsub","⫔"),A("supsup","⫖"),A("swarhk","⤦"),A("swarr","↙"),A("swArr","⇙"),A("swarrow","↙"),A("swnwar","⤪"),A("szlig","ß"),A("Tab","\t"),A("target","⌖"),A("Tau","Τ"),A("tau","τ"),A("tbrk","⎴"),A("Tcaron","Ť"),A("tcaron","ť"),A("Tcedil","Ţ"),A("tcedil","ţ"),A("Tcy","Т"),A("tcy","т"),A("tdot","⃛"),A("telrec","⌕"),A("Tfr","𝔗"),A("tfr","𝔱"),A("there4","∴"),A("therefore","∴"),A("Therefore","∴"),A("Theta","Θ"),A("theta","θ"),A("thetasym","ϑ"),A("thetav","ϑ"),A("thickapprox","≈"),A("thicksim","∼"),A("ThickSpace","  "),A("ThinSpace"," "),A("thinsp"," "),A("thkap","≈"),A("thksim","∼"),A("THORN","Þ"),A("thorn","þ"),A("tilde","˜"),A("Tilde","∼"),A("TildeEqual","≃"),A("TildeFullEqual","≅"),A("TildeTilde","≈"),A("timesbar","⨱"),A("timesb","⊠"),A("times","×"),A("timesd","⨰"),A("tint","∭"),A("toea","⤨"),A("topbot","⌶"),A("topcir","⫱"),A("top","⊤"),A("Topf","𝕋"),A("topf","𝕥"),A("topfork","⫚"),A("tosa","⤩"),A("tprime","‴"),A("trade","™"),A("TRADE","™"),A("triangle","▵"),A("triangledown","▿"),A("triangleleft","◃"),A("trianglelefteq","⊴"),A("triangleq","≜"),A("triangleright","▹"),A("trianglerighteq","⊵"),A("tridot","◬"),A("trie","≜"),A("triminus","⨺"),A("TripleDot","⃛"),A("triplus","⨹"),A("trisb","⧍"),A("tritime","⨻"),A("trpezium","⏢"),A("Tscr","𝒯"),A("tscr","𝓉"),A("TScy","Ц"),A("tscy","ц"),A("TSHcy","Ћ"),A("tshcy","ћ"),A("Tstrok","Ŧ"),A("tstrok","ŧ"),A("twixt","≬"),A("twoheadleftarrow","↞"),A("twoheadrightarrow","↠"),A("Uacute","Ú"),A("uacute","ú"),A("uarr","↑"),A("Uarr","↟"),A("uArr","⇑"),A("Uarrocir","⥉"),A("Ubrcy","Ў"),A("ubrcy","ў"),A("Ubreve","Ŭ"),A("ubreve","ŭ"),A("Ucirc","Û"),A("ucirc","û"),A("Ucy","У"),A("ucy","у"),A("udarr","⇅"),A("Udblac","Ű"),A("udblac","ű"),A("udhar","⥮"),A("ufisht","⥾"),A("Ufr","𝔘"),A("ufr","𝔲"),A("Ugrave","Ù"),A("ugrave","ù"),A("uHar","⥣"),A("uharl","↿"),A("uharr","↾"),A("uhblk","▀"),A("ulcorn","⌜"),A("ulcorner","⌜"),A("ulcrop","⌏"),A("ultri","◸"),A("Umacr","Ū"),A("umacr","ū"),A("uml","¨"),A("UnderBar","_"),A("UnderBrace","⏟"),A("UnderBracket","⎵"),A("UnderParenthesis","⏝"),A("Union","⋃"),A("UnionPlus","⊎"),A("Uogon","Ų"),A("uogon","ų"),A("Uopf","𝕌"),A("uopf","𝕦"),A("UpArrowBar","⤒"),A("uparrow","↑"),A("UpArrow","↑"),A("Uparrow","⇑"),A("UpArrowDownArrow","⇅"),A("updownarrow","↕"),A("UpDownArrow","↕"),A("Updownarrow","⇕"),A("UpEquilibrium","⥮"),A("upharpoonleft","↿"),A("upharpoonright","↾"),A("uplus","⊎"),A("UpperLeftArrow","↖"),A("UpperRightArrow","↗"),A("upsi","υ"),A("Upsi","ϒ"),A("upsih","ϒ"),A("Upsilon","Υ"),A("upsilon","υ"),A("UpTeeArrow","↥"),A("UpTee","⊥"),A("upuparrows","⇈"),A("urcorn","⌝"),A("urcorner","⌝"),A("urcrop","⌎"),A("Uring","Ů"),A("uring","ů"),A("urtri","◹"),A("Uscr","𝒰"),A("uscr","𝓊"),A("utdot","⋰"),A("Utilde","Ũ"),A("utilde","ũ"),A("utri","▵"),A("utrif","▴"),A("uuarr","⇈"),A("Uuml","Ü"),A("uuml","ü"),A("uwangle","⦧"),A("vangrt","⦜"),A("varepsilon","ϵ"),A("varkappa","ϰ"),A("varnothing","∅"),A("varphi","ϕ"),A("varpi","ϖ"),A("varpropto","∝"),A("varr","↕"),A("vArr","⇕"),A("varrho","ϱ"),A("varsigma","ς"),A("varsubsetneq","⊊︀"),A("varsubsetneqq","⫋︀"),A("varsupsetneq","⊋︀"),A("varsupsetneqq","⫌︀"),A("vartheta","ϑ"),A("vartriangleleft","⊲"),A("vartriangleright","⊳"),A("vBar","⫨"),A("Vbar","⫫"),A("vBarv","⫩"),A("Vcy","В"),A("vcy","в"),A("vdash","⊢"),A("vDash","⊨"),A("Vdash","⊩"),A("VDash","⊫"),A("Vdashl","⫦"),A("veebar","⊻"),A("vee","∨"),A("Vee","⋁"),A("veeeq","≚"),A("vellip","⋮"),A("verbar","|"),A("Verbar","‖"),A("vert","|"),A("Vert","‖"),A("VerticalBar","∣"),A("VerticalLine","|"),A("VerticalSeparator","❘"),A("VerticalTilde","≀"),A("VeryThinSpace"," "),A("Vfr","𝔙"),A("vfr","𝔳"),A("vltri","⊲"),A("vnsub","⊂⃒"),A("vnsup","⊃⃒"),A("Vopf","𝕍"),A("vopf","𝕧"),A("vprop","∝"),A("vrtri","⊳"),A("Vscr","𝒱"),A("vscr","𝓋"),A("vsubnE","⫋︀"),A("vsubne","⊊︀"),A("vsupnE","⫌︀"),A("vsupne","⊋︀"),A("Vvdash","⊪"),A("vzigzag","⦚"),A("Wcirc","Ŵ"),A("wcirc","ŵ"),A("wedbar","⩟"),A("wedge","∧"),A("Wedge","⋀"),A("wedgeq","≙"),A("weierp","℘"),A("Wfr","𝔚"),A("wfr","𝔴"),A("Wopf","𝕎"),A("wopf","𝕨"),A("wp","℘"),A("wr","≀"),A("wreath","≀"),A("Wscr","𝒲"),A("wscr","𝓌"),A("xcap","⋂"),A("xcirc","◯"),A("xcup","⋃"),A("xdtri","▽"),A("Xfr","𝔛"),A("xfr","𝔵"),A("xharr","⟷"),A("xhArr","⟺"),A("Xi","Ξ"),A("xi","ξ"),A("xlarr","⟵"),A("xlArr","⟸"),A("xmap","⟼"),A("xnis","⋻"),A("xodot","⨀"),A("Xopf","𝕏"),A("xopf","𝕩"),A("xoplus","⨁"),A("xotime","⨂"),A("xrarr","⟶"),A("xrArr","⟹"),A("Xscr","𝒳"),A("xscr","𝓍"),A("xsqcup","⨆"),A("xuplus","⨄"),A("xutri","△"),A("xvee","⋁"),A("xwedge","⋀"),A("Yacute","Ý"),A("yacute","ý"),A("YAcy","Я"),A("yacy","я"),A("Ycirc","Ŷ"),A("ycirc","ŷ"),A("Ycy","Ы"),A("ycy","ы"),A("yen","¥"),A("Yfr","𝔜"),A("yfr","𝔶"),A("YIcy","Ї"),A("yicy","ї"),A("Yopf","𝕐"),A("yopf","𝕪"),A("Yscr","𝒴"),A("yscr","𝓎"),A("YUcy","Ю"),A("yucy","ю"),A("yuml","ÿ"),A("Yuml","Ÿ"),A("Zacute","Ź"),A("zacute","ź"),A("Zcaron","Ž"),A("zcaron","ž"),A("Zcy","З"),A("zcy","з"),A("Zdot","Ż"),A("zdot","ż"),A("zeetrf","ℨ"),A("ZeroWidthSpace","​"),A("Zeta","Ζ"),A("zeta","ζ"),A("zfr","𝔷"),A("Zfr","ℨ"),A("ZHcy","Ж"),A("zhcy","ж"),A("zigrarr","⇝"),A("zopf","𝕫"),A("Zopf","ℤ"),A("Zscr","𝒵"),A("zscr","𝓏"),A("zwj","‍"),A("zwnj","‌")]),p(xe,c(function(n,r){return p(gt,n.a,n.b,r)}),tt,To)),js=f(Bs,function(n){return f(de,"&"+n+";",f(dt,n,Hs))},$s(ho(jr))),Vs=G,zs={$:1},Ms=Nr,Js=Sr,Ks=function(n){if(0===n.length||/[\sxbo]/.test(n))return fe;var r=+n;return r==r?pe(r):fe},Ys=c(function(n,r){return{cF:r.cF+(n-r.b),d:r.d,e:r.e,b:n,dh:r.dh,a:r.a}}),Xs=Rr,Zs=Dr,Qs=c(function(n,r){if(p(Zs,101,n,r)||p(Zs,69,n,r)){var e=n+1,t=p(Zs,43,e,r)||p(Zs,45,e,r)?e+1:e,o=f(Xs,t,r);return w(t,o)?-o:o}return n}),na=c(function(n,r){return p(Zs,46,n,r)?f(Qs,f(Xs,n+1,r),r):f(Qs,n,r)}),ra=t(function(n,r,e,t,o){var s=t.a,a=t.b;if(1===r.$)return f(Zo,!0,f(as,o,r.a));var c=r.a;return w(e,s)?f(Zo,E(o.b,e)<0,f(as,o,n)):p(Qo,!0,c(a),f(Ys,s,o))}),ea=s(function(n,r,e,t,o,s){var a=o.a,c=f(na,a,s.a);if(c<0)return f(Zo,!0,d(Ds,s.dh,s.cF-(c+s.b),n,s.d));if(w(s.b,c))return f(Zo,!1,f(as,s,r));if(w(a,c))return b(ra,n,e,s.b,o,s);if(1===t.$){return f(Zo,!0,f(as,s,n))}var l=t.a,i=Ks(p(xs,s.b,c,s.a));return 1===i.$?f(Zo,!0,f(as,s,n)):p(Qo,!0,l(i.a),f(Ys,c,s))}),ta=f(c(function(n,r){return function(t){return function(n){if(p(Zs,48,n.b,n.a)){var r=n.b+1,e=r+1;return p(Zs,120,r,n.a)?b(ra,t.dS,t.dN,e,f(Js,e,n.a),n):p(Zs,111,r,n.a)?b(ra,t.dS,t.c1,e,p(Ms,8,e,n.a),n):p(Zs,98,r,n.a)?b(ra,t.dS,t.cB,e,p(Ms,2,e,n.a),n):u(ea,t.dS,t.cM,t.cU,t.cN,A(r,0),n)}return u(ea,t.dS,t.cM,t.cU,t.cN,p(Ms,10,n.b,n.a),n)}}({cB:We(r),cM:n,cN:We(r),dN:We(r),cU:Be(Jr),dS:r,c1:We(r)})}),zs,zs),oa=function(n){return n.length},sa=J,aa=P,ca=_,la=o(function(n,r,e){n:for(;;){if(!r.b)return Be(e);var t=r.a,o=r.b;switch(t){case"0":n=s=n-1,r=a=o,e=c=e;continue n;case"1":var s=n-1,a=o,c=e+f(ca,16,n);n=s,r=a,e=c;continue n;case"2":s=n-1,a=o,c=e+2*f(ca,16,n);n=s,r=a,e=c;continue n;case"3":s=n-1,a=o,c=e+3*f(ca,16,n);n=s,r=a,e=c;continue n;case"4":s=n-1,a=o,c=e+4*f(ca,16,n);n=s,r=a,e=c;continue n;case"5":s=n-1,a=o,c=e+5*f(ca,16,n);n=s,r=a,e=c;continue n;case"6":s=n-1,a=o,c=e+6*f(ca,16,n);n=s,r=a,e=c;continue n;case"7":s=n-1,a=o,c=e+7*f(ca,16,n);n=s,r=a,e=c;continue n;case"8":s=n-1,a=o,c=e+8*f(ca,16,n);n=s,r=a,e=c;continue n;case"9":s=n-1,a=o,c=e+9*f(ca,16,n);n=s,r=a,e=c;continue n;case"a":s=n-1,a=o,c=e+10*f(ca,16,n);n=s,r=a,e=c;continue n;case"b":s=n-1,a=o,c=e+11*f(ca,16,n);n=s,r=a,e=c;continue n;case"c":s=n-1,a=o,c=e+12*f(ca,16,n);n=s,r=a,e=c;continue n;case"d":s=n-1,a=o,c=e+13*f(ca,16,n);n=s,r=a,e=c;continue n;case"e":s=n-1,a=o,c=e+14*f(ca,16,n);n=s,r=a,e=c;continue n;case"f":s=n-1,a=o,c=e+15*f(ca,16,n);n=s,r=a,e=c;continue n;default:return We(Eo(t)+" is not a valid hexadecimal character.")}}}),ia=f(ns,function(n){var r=ko(qs(n));return r.$?yo(r.a):vs(r.a)},$s(ho(function(n){var r=Ge(n);return 48<=r&&r<=57||65<=r&&r<=70||97<=r&&r<=102}))),ua=(Lo=ms(C([f(ys,f(bs,vs(Jr),is(function(n){return"x"===n||"X"===n})),ia),f(ys,f(bs,vs(Jr),ps(ke("0"))),ta)])),f(ys,f(bs,vs(Jr),is(ke("#"))),f(Bs,f(pt,xo,Eo),Lo))),pa=f(ys,f(bs,vs(Jr),is(ke("&"))),ms(C([f(bs,rs(js),Ps),f(bs,rs(ua),Ps),vs("&")]))),fa=c(function(n,e){return f(Is,N,function(r){return ms(C([f(Bs,function(n){return wo(f(se,n,r))},e),function(n){return!n.b}(r)?yo("expecting at least one "+n):vs(vo(Ee(r)))]))})}),da=f(Bs,Je(""),f(fa,"attribute value",ms(C([$s(ho(function(n){return!ks(n)&&'"'!==n&&"'"!==n&&"="!==n&&"<"!==n&&">"!==n&&"`"!==n&&"&"!==n})),pa])))),ba=ms(C([f(ys,f(bs,f(bs,vs(Jr),is(ke("="))),ps(ks)),ms(C([da,Ao('"'),Ao("'")]))),vs("")])),ya=f(ys,f(ys,vs(Xo),f(bs,Gs,ps(ks))),f(bs,ba,ps(ks))),ha=Us(ya),ga=f(Bs,qs,$s(f(bs,is(Vr),ps(function(n){return Vr(n)||"-"===n})))),ma=f(Bs,f(pt,Je(""),function(n){return{$:0,a:n}}),f(fa,"text element",ms(C([$s(ho(function(n){return"<"!==n&&"&"!==n})),pa]))));function va(){return ms(C([ma,Ns,wa()]))}function wa(){return f(ns,function(n){var r=n.a,e=n.b;return Ws(r)?f(bs,f(bs,vs(p(ws,r,e,N)),ms(C([is(ke("/")),vs(0)]))),is(ke(">"))):f(ys,f(bs,vs(f(ws,r,e)),is(ke(">"))),f(bs,Us(rs(va())),As(r)))},f(ys,f(ys,f(bs,vs(Xo),is(ke("<"))),f(bs,ga,ps(ks))),ha))}var qa=va();va=function(){return qa};var xa=wa();wa=function(){return xa};function Ea(n){return Vn(Zn(n))}function $a(n){return f(Qa,n.a,n.b)}function ka(n){return f(Wo,nc,n)}function Aa(n){var r=function(n){return po(n)?Be(N):f(Yo,f(fa,"node",qa),n)}(n);return r.$?N:ka(r.a)}function Ta(n){return f(oc,"click",Fo(n))}function La(n){return{$:4,a:n}}function Da(n){return La(n)}function Ra(n){return f(lc,C([Da(C([Ta(function(n){return{$:2,a:n}}(n))])),ic]),C([Za(n.s),f(rc,N,N),f(ec,N,Aa(n.W))]))}function Na(n){return f(lc,C([Da(C([Ta(function(n){return{$:1,a:n}}(n))])),ic]),C([Za(n.s),f(rc,N,N),f(ec,N,Aa(n.W))]))}function Sa(n){return f(Go,"href",function(n){return/^javascript:/i.test(n.replace(/\s/g,""))?"":n}(n))}function Oa(n){return function(n){return{$:4,a:n}}(n)}function Ca(n){return n.b}function Wa(n){return Po(f(Je," ",f(Wo,Gr,f(yc,Ca,n))))}function Ba(n){switch(n){case 0:return"primary";case 1:return"secondary";case 2:return"success";case 3:return"info";case 4:return"warning";case 5:return"danger";case 6:return"dark";case 7:return"light";default:return"link"}}function _a(n){return{$:1,a:n}}function Fa(n){return{$:0,a:n}}function Ia(n){return zn(Zn(n))}function Ua(n){var r=n.cG;return Po("col"+(f(de,"",f(Ho,function(n){return"-"+n},co(n.dk)))+f(de,"",f(Ho,function(n){return"-"+n},function(n){switch(n){case 0:return fe;case 1:return pe("1");case 2:return pe("2");case 3:return pe("3");case 4:return pe("4");case 5:return pe("5");case 6:return pe("6");case 7:return pe("7");case 8:return pe("8");case 9:return pe("9");case 10:return pe("10");case 11:return pe("11");case 12:return pe("12");default:return pe("auto")}}(r)))))}function Ga(n){var r=co(n);return r.$?"-":"-"+r.a+"-"}function Pa(n){var r=n.c2;return Po("offset"+(Ga(n.dk)+function(n){switch(n){case 0:return"0";case 1:return"1";case 2:return"2";case 3:return"3";case 4:return"4";case 5:return"5";case 6:return"6";case 7:return"7";case 8:return"8";case 9:return"9";case 10:return"10";default:return"11"}}(r)))}function Ha(n){switch(n){case 0:return"0";case 1:return"1";case 2:return"2";case 3:return"3";case 4:return"4";case 5:return"5";case 6:return"6";case 7:return"7";case 8:return"8";case 9:return"9";case 10:return"10";case 11:return"11";default:return"12"}}function ja(n){var r,e=p(xe,Hc,jc,n);return R(function(n){return f(Xt,Jr,f(Wo,function(n){return f(Ho,Ua,n)},n))}(C([!zr(f(Xt,Jr,C([e.aK,e.aI,e.aH,e.aG,e.aJ])))?pe(f(Bc,0,0)):e.aK,e.aI,e.aH,e.aG,e.aJ])),R(function(n){return f(Xt,Jr,f(Wo,function(n){return f(Ho,Pa,n)},n))}(C([e.br,e.bo,e.bn,e.bm,e.bq])),R(function(n){return f(Xt,Jr,f(Wo,function(n){if(n.$)return fe;var r=n.a.ad;return pe(Po("pull"+(Ga(n.a.dk)+Ha(r))))},n))}(C([e.bH,e.bF,e.bE,e.bD,e.bG])),R(function(n){return f(Xt,Jr,f(Wo,function(n){if(n.$)return fe;var r=n.a.ad;return pe(Po("push"+(Ga(n.a.dk)+Ha(r))))},n))}(C([e.bM,e.bK,e.bJ,e.bI,e.bL])),R(function(n){return f(Xt,Jr,f(Wo,function(n){if(n.$)return fe;var r=n.a.ad;return pe(Po("order"+(Ga(n.a.dk)+function(n){switch(n){case 0:return"first";case 1:return"1";case 2:return"2";case 3:return"3";case 4:return"4";case 5:return"5";case 6:return"6";case 7:return"7";case 8:return"8";case 9:return"9";case 10:return"10";case 11:return"11";case 12:return"12";default:return"last"}}(r))))},n))}(C([e.bB,e.bz,e.by,e.bx,e.bA])),R(f(zc,"align-self-",C([e.aT,e.aR,e.aQ,e.aP,e.aS])),R((r=e.bV).$?N:C([lo(r.a)]),e.aW)))))))}function Va(n){switch(n.$){case 0:var r=n.a.cE;return f(Uo,ja(n.a.ck),r);case 1:return n.a;default:r=n.a.cE;return p(Ia,"div",ja(n.a.ck),r)}}function za(n){var r=n.cA;return Po("justify-content-"+(f(de,"",f(Ho,function(n){return n+"-"},co(n.dk)))+function(n){switch(n){case 0:return"start";case 1:return"center";case 2:return"end";case 3:return"around";default:return"between"}}(r)))}function Ma(n){var r=p(xe,Kc,Yc,n);return R(C([Po("row")]),R(f(zc,"align-items-",C([r.b1,r.b$,r.b_,r.bZ,r.b0])),R(function(n){return f(Xt,Jr,f(Wo,function(n){return f(Ho,za,n)},n))}(C([r.bd,r.bb,r.ba,r.a9,r.bc])),r.aW)))}function Ja(n){var r=n.cE;return f(n.cW,function(n){return R(C([Wa(C([A("list-group-item",!0),A("disabled",n.a7),A("active",n.aN),A("list-group-item-action",n.aM)]))]),R(C([gc(n.a7)]),R(f(de,N,f(Ho,function(n){return C([f(zo,"list-group-item",n)])},n.bO)),n.aW)))}(p(xe,Zc,Qc,n.ck)),r)}function Ka(n){return f(Uo,C([Po("list-group")]),f(Wo,Ja,n))}function Ya(n){return{cc:n.cc,cg:n.cg,cl:n.cl}}function Xa(r){return R(C([Wa(C([A("nav",!0),A("nav-tabs",!r.ab),A("nav-pills",r.ab)]))]),R(function(){var n=r.ac;if(n.$)return N;switch(n.a){case 3:return C([Po("nav-justified")]);case 2:return C([Po("nav-fill")]);case 0:return C([Po("justify-content-center")]);default:return C([Po("justify-content-end")])}}(),r.aW))}var Za=jn,Qa=c(function(n,r){return f(Xn,function(n){return/^(on|formAction$)/i.test(n)?"data-"+n:n}(n),function(n){return/^\s*(javascript:|data:text\/html)/i.test(n)?"":n}(r))}),nc=function(n){switch(n.$){case 1:var r=n.c;return p(Ea,n.a,f(Wo,$a,n.b),ka(r));case 0:return Za(n.a);default:return Za("")}},rc=Vn("p"),ec=Vn("span"),tc=Jn,oc=c(function(n,r){return f(tc,n,function(n){return{$:0,a:n}}(r))}),sc=Vn("button"),ac=Go("type"),cc={$:3},lc=c(function(n,r){return{cE:r,cW:sc,ck:f(se,cc,R(n,C([La(C([ac("button")]))])))}}),ic={$:0,a:3},uc=c(function(n,r){return!f(dt,n,r).$}),pc=c(function(n,r){return f(uc,n,r)}),fc=Vn("a"),dc=Kn,bc=c(function(n,r){return r.$?fe:n(r.a)}),yc=c(function(e,n){return p(Kt,c(function(n,r){return e(n)?f(se,n,r):r}),N,n)}),hc=pn,gc=c(function(n,r){return f(Yn,n,hc(r))})("disabled"),mc=c(function(n,r){switch(n.$){case 0:return D(r,{cr:pe(n.a)});case 1:return D(r,{A:pe(n.a)});case 2:return D(r,{aZ:!0});case 3:return D(r,{a7:n.a});default:return D(r,{aW:R(r.aW,n.a)})}}),vc={aW:N,aZ:!1,A:fe,a7:!1,cr:fe},wc=c(function(n,r){return f(sc,function(n){var r,e,t=p(xe,mc,vc,n);return R(C([Wa(C([A("btn",!0),A("btn-block",t.aZ),A("disabled",t.a7)])),gc(t.a7)]),R((e=f(bc,co,t.cr)).$?N:C([Po("btn-"+e.a)]),R((r=t.A).$?N:C(r.a.$?[Po("btn-outline-"+Ba(r.a.a))]:[Po("btn-"+Ba(r.a.a))]),t.aW)))}(n),r)}),qc=_a(Fa(5)),xc=_a(Fa(2)),Ec=c(function(n,r){switch(n.$){case 0:return D(r,{y:pe(n.a)});case 1:return D(r,{A:pe(n.a)});case 2:return D(r,{E:pe(n.a)});default:return D(r,{aW:R(r.aW,n.a)})}}),$c={y:fe,aW:N,A:fe,E:fe},kc=c(function(n,r){return function(n){return{$:0,a:n}}(f(Uo,function(n){var r,e,t,o=p(xe,Ec,$c,n);return R(C([Po("card-body")]),R((t=o.y).$?N:C([lo(t.a)]),R((e=o.A).$?N:C([f(zo,"bg",e.a)]),R((r=o.E).$?N:C([io(r.a)]),o.aW))))}(n),f(Wo,function(n){return n},r)))}),Ac=o(function(n,r,e){return D(e,{b6:R(e.b6,C([f(kc,n,r)]))})}),Tc=o(function(n,r,e){return D(e,{ca:pe(f(Uo,f(se,Po("card-footer"),n),r))})}),Lc=Vn("h3"),Dc=e(function(n,r,e,t){return D(t,{bf:pe(f(n,f(se,Po("card-header"),r),e))})})(Lc),Rc=c(function(n,r){return f(rc,R(C([Po("card-text")]),n),r)}),Nc=c(function(n,r){return p(Tc,N,C([f(pc,r.s,n.G)?f(wc,C([qc,Oa(C([Ta(function(n){return{$:4,a:n}}(r))]))]),C([Za("Remove")])):f(wc,C([xc,Oa(C([Ta(function(n){return{$:3,a:n}}(r))]))]),C([Za("Add")]))]),p(Ac,N,C([f(Rc,N,Aa(r.dI))]),p(Dc,N,C([f(fc,C([Sa(r.dy)]),C([Za(r.s)]))]),function(n){return{b6:N,ca:fe,bf:fe,cd:fe,ce:fe,ck:n}}(C([function(n){return function(n){return{$:3,a:n}}(n)}(C([f(dc,"min-width","20em"),f(dc,"max-width","20em"),f(dc,"padding","0.25em"),f(dc,"margin","0.5em")]))])))))}),Sc=C([{dI:"<p>Adds tabcomplete functionality to apt-get/apt-cache inside of xonsh.</p>",c:"BSD 2-clause",s:"apt_tabcomplete",dy:"https://github.com/DangerOnTheRanger/xonsh-apt-tabcomplete"},{dI:"<p>autojump support for xonsh</p>",c:"",s:"autojump",dy:"https://github.com/sagartewari01/autojump-xonsh"},{dI:"<p>Manages automatic activation of virtual environments.</p>",c:"BSD 3-clause",s:"autovox",dy:"http://xon.sh"},{dI:'<p>Adds automatic execution of xonsh script files called <span class="docutils literal">.autoxsh</span> when enterting a directory with <span class="docutils literal">cd</span> function</p>',c:"GPLv3",s:"autoxsh",dy:"https://github.com/Granitas/xonsh-autoxsh"},{dI:"<p>Automatic (de)activation of virtual environments as you cd around</p>",c:"GPLv3",s:"avox",dy:"https://github.com/astronouth7303/xontrib-avox"},{dI:'<p>Enables additional Bash-like syntax while at the command prompt. For example, the <span class="docutils literal">!!</span> syntax for running the previous command is now usable.Note that these features are implemented as precommand events and these additions do not affect the xonsh language when run as script. That said, you might find them useful if you have strong muscle memory.</p>\n<p><strong>Warning:</strong> This xontrib may modify user command line input to implement its behavior. To see the modifications as they are applied (in unified diffformat), please set <span class="docutils literal">$XONSH_DEBUG</span> to <span class="docutils literal">2</span> or higher.</p>',c:"BSD 3-clause",s:"bashisms",dy:"http://xon.sh"},{dI:"<p>Change base16 shell themes</p>",c:"",s:"base16_shell",dy:"https://github.com/ErickTucto/xontrib-base16-shell"},{dI:'<p>Additional core utilities that are implemented in xonsh. The current list includes:</p>\n<ul class="simple">\n<li><p>cat</p></li>\n<li><p>echo</p></li>\n<li><p>pwd</p></li>\n<li><p>tee</p></li>\n<li><p>tty</p></li>\n<li><p>yes</p></li>\n</ul>\n<p>In many cases, these may have a lower performance overhead than the posix command line utility with the same name. This is because these tools avoid the need for a full subprocess call. Additionally, these tools are cross-platform.</p>',c:"BSD 3-clause",s:"coreutils",dy:"http://xon.sh"},{dI:"<p>Supports direnv.</p>",c:"MIT",s:"direnv",dy:"https://github.com/74th/xonsh-direnv"},{dI:"<p>The distributed parallel computing library hooks for xonsh. Importantly this provides a substitute 'dworker' command which enables distributed workers to have access to xonsh builtins.</p>\n<p>Furthermore, this xontrib adds a 'DSubmitter' context manager for executing a block remotely. Moreover, this also adds a convenience function 'dsubmit()' for creating DSubmitter and Executor instances at the same time. Thus users may submit distributed jobs with:</p>\n<pre class=\"literal-block\">with dsubmit('127.0.0.1:8786', rtn='x') as dsub:\n    x = $(echo I am elsewhere)\n\nres = dsub.future.result()\nprint(res)</pre>\n<p>This is useful for long running or non-blocking jobs.</p>",c:"BSD 3-clause",s:"distributed",dy:"http://xon.sh"},{dI:"<p>Adds tabcomplete functionality to docker inside of xonsh.</p>",c:"MIT",s:"docker_tabcomplete",dy:"https://github.com/xsteadfastx/xonsh-docker-tabcomplete"},{dI:'<p>Windows only xontrib, to release the lock on the current directory whenever the prompt is shown. Enabling this will allow the other programs or Windows Explorer to delete or rename the current or parent directories. Internally, it is accomplished by temporarily resetting CWD to the root drive folder while waiting at the prompt. This only works with the prompt_toolkit backend and can cause cause issues if any extensions are enabled that hook the prompt and relies on <span class="docutils literal">os.getcwd()</span></p>',c:"BSD 3-clause",s:"free_cwd",dy:"http://xon.sh"},{dI:"<p>Adds some fzf widgets to your xonsh shell.</p>",c:"GPLv3",s:"fzf-widgets",dy:"https://github.com/shahinism/xontrib-fzf-widgets"},{dI:"<p>Useful aliases and shortcuts for extracting links and textfrom command output history and putting them into the clipboard.</p>",c:"GPLv3",s:"histcpy",dy:"https://github.com/con-f-use/xontrib-histcpy"},{dI:"<p>Jedi tab completion hooks for xonsh.</p>",c:"BSD 3-clause",s:"jedi",dy:"http://xon.sh"},{dI:"<p>Xonsh hooks for the Kitty terminal emulator.</p>",c:"BSD-3-Clause",s:"kitty",dy:"https://github.com/scopatz/xontrib-kitty"},{dI:"<p>Matplotlib hooks for xonsh, including the new 'mpl' alias that displays the current figure on the screen.</p>",c:"BSD 3-clause",s:"mpl",dy:"http://xon.sh"},{dI:"<p>Powerline for Xonsh shell</p>",c:"MIT",s:"powerline",dy:"https://github.com/santagada/xontrib-powerline"},{dI:"<p>Adds return code info to the prompt</p>",c:"BSD 3-clause",s:"prompt_ret_code",dy:"http://xon.sh"},{dI:"<p>vi-mode status formatter for xonsh prompt</p>",c:"MIT",s:"prompt_vi_mode",dy:"https://github.com/t184256/xontrib-prompt-vi-mode"},{dI:"<p>Make traceback easier to see for xonsh.</p>",c:"MIT",s:"readable-traceback",dy:"https://github.com/6syun9/xontrib-readable-traceback"},{dI:"<p>Xonsh Task Scheduling</p>",c:"MIT",s:"schedule",dy:"https://github.com/astronouth7303/xontrib-schedule"},{dI:"<p>Adds tabcomplete functionality to scrapy inside of xonsh.</p>",c:"GPLv3",s:"scrapy_tabcomplete",dy:"https://github.com/Granitas/xonsh-scrapy-tabcomplete"},{dI:"<p>ssh-agent integration</p>",c:"MIT",s:"ssh_agent",dy:"https://bitbucket.org/dyuri/xontrib-ssh-agent"},{dI:"<p>Python virtual environment manager for xonsh.</p>",c:"BSD 3-clause",s:"vox",dy:"http://xon.sh"},{dI:"<p>Adds tabcomplete functionality to vox inside of xonsh.</p>",c:"GPLv3",s:"vox_tabcomplete",dy:"https://github.com/Granitosaurus/xonsh-vox-tabcomplete"},{dI:"<p>Jumping across whole words (non-whitespace) with Ctrl+Left/Right.Alt+Left/Right remains unmodified to jump over smaller word segments.</p>",c:"BSD 3-clause",s:"whole_word_jumping",dy:"http://xon.sh"},{dI:"<p>Adds an 'xo' alias to run the exofrills text editor in the current Python interpreter session. This shaves off a bit of the startup time when running your favorite, minimal text editor.</p>",c:"WTFPL",s:"xo",dy:"https://github.com/scopatz/xo"},{dI:"<p>A thin wrapper around conda with tab completion</p>",c:"MIT",s:"xonda",dy:"https://github.com/gforsyth/xonda"},{dI:"<p>Tracks your most used directories, based on 'frecency'.</p>",c:"GPLv3",s:"z",dy:"https://github.com/astronouth7303/xontrib-z"}]),Oc=Vn("h2"),Cc=c(function(n,r){return function(n){return{$:0,a:n}}({cE:r,ck:n})}),Wc=c(function(n,r){return f(Uo,R(C([Po("container")]),n),r)}),Bc=c(function(n,r){return{cG:r,dk:n}}),_c=c(function(n,r){switch(n.dk){case 0:return D(r,{aT:pe(n)});case 1:return D(r,{aR:pe(n)});case 2:return D(r,{aQ:pe(n)});case 3:return D(r,{aP:pe(n)});default:return D(r,{aS:pe(n)})}}),Fc=c(function(n,r){switch(n.dk){case 0:return D(r,{br:pe(n)});case 1:return D(r,{bo:pe(n)});case 2:return D(r,{bn:pe(n)});case 3:return D(r,{bm:pe(n)});default:return D(r,{bq:pe(n)})}}),Ic=c(function(n,r){switch(n.dk){case 0:return D(r,{bB:pe(n)});case 1:return D(r,{bz:pe(n)});case 2:return D(r,{by:pe(n)});case 3:return D(r,{bx:pe(n)});default:return D(r,{bA:pe(n)})}}),Uc=c(function(n,r){switch(n.dk){case 0:return D(r,{bH:pe(n)});case 1:return D(r,{bF:pe(n)});case 2:return D(r,{bE:pe(n)});case 3:return D(r,{bD:pe(n)});default:return D(r,{bG:pe(n)})}}),Gc=c(function(n,r){switch(n.dk){case 0:return D(r,{bM:pe(n)});case 1:return D(r,{bK:pe(n)});case 2:return D(r,{bJ:pe(n)});case 3:return D(r,{bI:pe(n)});default:return D(r,{bL:pe(n)})}}),Pc=c(function(n,r){switch(n.dk){case 0:return D(r,{aK:pe(n)});case 1:return D(r,{aI:pe(n)});case 2:return D(r,{aH:pe(n)});case 3:return D(r,{aG:pe(n)});default:return D(r,{aJ:pe(n)})}}),Hc=c(function(n,r){switch(n.$){case 6:return D(r,{aW:R(r.aW,n.a)});case 0:return f(Pc,n.a,r);case 1:return f(Fc,n.a,r);case 2:return f(Uc,n.a,r);case 3:return f(Gc,n.a,r);case 4:return f(Ic,n.a,r);case 5:return f(_c,n.a,r);default:return D(r,{bV:pe(n.a)})}}),jc={aP:fe,aQ:fe,aR:fe,aS:fe,aT:fe,aW:N,bm:fe,bn:fe,bo:fe,bq:fe,br:fe,bx:fe,by:fe,bz:fe,bA:fe,bB:fe,bD:fe,bE:fe,bF:fe,bG:fe,bH:fe,bI:fe,bJ:fe,bK:fe,bL:fe,bM:fe,bV:fe,aG:fe,aH:fe,aI:fe,aJ:fe,aK:fe},Vc=c(function(n,r){var e=r.cA;return Po(R(n,R(f(de,"",f(Ho,function(n){return n+"-"},co(r.dk))),function(n){switch(n){case 0:return"start";case 1:return"center";default:return"end"}}(e))))}),zc=c(function(r,n){return f(Xt,Jr,f(Wo,function(n){return f(Ho,Vc(r),n)},n))}),Mc=c(function(n,r){switch(n.dk){case 0:return D(r,{bd:pe(n)});case 1:return D(r,{bb:pe(n)});case 2:return D(r,{ba:pe(n)});case 3:return D(r,{a9:pe(n)});default:return D(r,{bc:pe(n)})}}),Jc=c(function(n,r){switch(n.dk){case 0:return D(r,{b1:pe(n)});case 1:return D(r,{b$:pe(n)});case 2:return D(r,{b_:pe(n)});case 3:return D(r,{bZ:pe(n)});default:return D(r,{b0:pe(n)})}}),Kc=c(function(n,r){switch(n.$){case 2:return D(r,{aW:R(r.aW,n.a)});case 0:return f(Jc,n.a,r);default:return f(Mc,n.a,r)}}),Yc={aW:N,a9:fe,ba:fe,bb:fe,bc:fe,bd:fe,bZ:fe,b_:fe,b$:fe,b0:fe,b1:fe},Xc=c(function(n,r){return f(Uo,Ma(n),f(Wo,Va,r))}),Zc=c(function(n,r){switch(n.$){case 0:return D(r,{bO:pe(n.a)});case 3:return D(r,{aM:!0});case 2:return D(r,{a7:!0});case 1:return D(r,{aN:!0});default:return D(r,{aW:R(r.aW,n.a)})}}),Qc={aM:!1,aN:!1,aW:N,a7:!1,bO:fe},nl=c(function(n,r){return D(r,{ac:pe(n)})})(0),rl=c(function(n,r){return D(r,{cX:n})}),el=c(function(n,r){return{aW:n,cE:r}}),tl=c(function(n,r){return{aW:n,cE:r}}),ol=Vn("ul"),sl=c(function(n,r){var e=n.aO;if(1===e.$)return Ur(r.cX);var t,o=e.a;return(t=Ur(f(yc,function(n){return w(n.cc,o)},r.cX))).$?Ur(r.cX):pe(t.a)}),al=Vn("li"),cl=c(function(n,r){var e=A(n,r);n:for(;e.a;)switch(e.b){case 0:return 1;case 1:return 2;default:break n}return 2}),ll=e(function(n,r,e,t){var o=e.aW,s=e.cE,a=C([A("nav-link",!0),A("active",r)]),c=Ta(t.cx({aO:pe(n),j:f(cl,t.Q&&!r,0)})),l=t.bY?f(fc,R(C([Wa(a),c,Sa("#"+n)]),o),s):f(sc,R(C([Wa(R(a,C([A("btn",!0),A("btn-link",!0)]))),c]),o),s);return f(al,C([Po("nav-item")]),C([l]))}),il=Go("id"),ul=c(function(n){switch(n.j){case 0:return C([f(dc,"display","none")]);case 1:return C([f(dc,"display","block"),f(dc,"opacity","0")]);default:return R(C([f(dc,"display","block")]),function(n){return C([f(dc,"opacity",Me(n)),f(dc,"-webkit-transition","opacity 0.15s linear"),f(dc,"-o-transition","opacity 0.15s linear"),f(dc,"transition","opacity 0.15s linear")])}(1))}}),pl=t(function(n,r,e,t,o){var s=e.aW,a=e.cE,c=r?f(ul,t,o):C([f(dc,"display","none")]);return f(Uo,R(C([il(n),Po("tab-pane")]),R(c,s)),a)}),fl=c(function(e,n){var t=n,r=f(sl,e,t);if(1===r.$)return f(Uo,N,C([f(ol,Xa(t),N),f(Uo,C([Po("tab-content")]),N)]));var o=r.a;return f(Uo,N,C([f(ol,Xa(t),f(Wo,function(n){var r=n;return d(ll,r.cc,w(r.cc,o.cc),r.cg,t)},t.cX)),f(Uo,C([Po("tab-content")]),f(Wo,function(n){var r=n;return b(pl,r.cc,w(r.cc,o.cc),r.cl,e,t)},t.cX))]))}),dl=Jr,bl=function(n){for(;;){n=n}},yl=Ut(0),hl=c(function(r,n){return f(Ht,function(n){return Ut(r(n))},n)}),gl=c(function(n,r){var e=r;return vn(f(Ht,kt(n),e))}),ml=o(function(n,r){return f(hl,function(){return 0},re(f(Wo,gl(n),r)))}),vl=o(function(){return Ut(0)}),wl=c(function(n,r){return f(hl,n,r)});Tn.Task=Ln(yl,ml,vl,wl);var ql,xl=Sn("Task"),El=c(function(n,r){return xl(f(hl,n,r))}),$l=c(function(n,r){return n<1?r:p(xs,n,oa(r),r)}),kl=K,Al=c(function(n,r){return n<1?"":p(xs,0,n,r)}),Tl=M,Ll=function(n){for(var r=0,e=n.charCodeAt(0),t=43==e||45==e?1:0,o=t;o<n.length;++o){var s=n.charCodeAt(o);if(s<48||57<s)return fe;r=10*r+s-48}return o==t?fe:pe(45==e?-r:r)},Dl=s(function(n,r,e,t,o,s){return{cO:s,cP:r,c3:t,c5:e,da:n,db:o}}),Rl=t(function(n,r,e,t,o){if(po(o)||f(Tl,"@",o))return fe;var s=f(kl,":",o);if(s.b){if(s.b.b)return fe;var a=s.a,c=Ll(f($l,a+1,o));if(1===c.$)return fe;var l=c;return pe(u(Dl,n,f(Al,a,o),l,r,e,t))}return pe(u(Dl,n,o,fe,r,e,t))}),Nl=e(function(n,r,e,t){if(po(t))return fe;var o=f(kl,"/",t);if(o.b){var s=o.a;return b(Rl,n,f($l,s,t),r,e,f(Al,s,t))}return b(Rl,n,"/",r,e,t)}),Sl=o(function(n,r,e){if(po(e))return fe;var t=f(kl,"?",e);if(t.b){var o=t.a;return d(Nl,n,pe(f($l,o+1,e)),r,f(Al,o,e))}return d(Nl,n,fe,r,e)}),Ol=(c(function(n,r){if(po(r))return fe;var e=f(kl,"#",r);if(e.b){var t=e.a;return p(Sl,n,pe(f($l,t+1,r)),f(Al,t,r))}return p(Sl,n,fe,r)}),Cr),Cl=On(N),Wl=X,Bl=Ol({dR:function(){return at},d_:function(){return Cl},d0:Oo,d1:function(n){return f(Uo,C([f(dc,"padding","0.75em 1.25em")]),C([f(Wc,N,C([f(Xc,N,C([f(Cc,N,C([f(Uo,C([f(dc,"text-align","left")]),C([f(Oc,N,C([Za("xonsh")]))]))])),f(Cc,N,C([f(Uo,C([f(dc,"text-align","right")]),C([f(wc,C([xc,Oa(C([Ta(Co)]))]),C([Za("Save")]))]))]))]))])),f(rc,N,N),f(fl,n.bU,f(rl,C([Ya({cc:"tabItemColors",cg:f(el,N,C([Za("Colors")])),cl:f(tl,N,C([Za("Current Selection: "+n.V.s),f(rc,N,N),f(Uo,C([f(dc,"padding","0.75em 1.25em")]),Aa(n.V.W)),Ka(f(Wo,Ra,ie))]))}),Ya({cc:"tabItemPrompt",cg:f(el,N,C([Za("Prompt")])),cl:f(tl,N,C([Za("Current Selection: "+n.af.s),f(rc,N,N),f(Uo,C([f(dc,"padding","0.75em 1.25em")]),Aa(n.af.W)),Ka(f(Wo,Na,ue))]))}),Ya({cc:"tabItemXontribs",cg:f(el,N,C([Za("Xontribs")])),cl:f(tl,N,C([function(n){return f(Uo,C([Po("card-deck justify-content-center")]),f(Wo,uo,n))}(f(Wo,Nc(n),Sc))]))})]),nl(function(n){return{aW:N,ab:!1,cX:N,ac:fe,cx:n,bY:!1,Q:!1}}(ao))))]))}});ql={Main:{init:Bl(Wl)(0)}},n.Elm?function n(r,e){for(var t in e)t in r?"init"==t?v(6):n(r[t],e[t]):r[t]=e[t]}(n.Elm,ql):n.Elm=ql}(this);